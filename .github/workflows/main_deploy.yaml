name: Main Deploy Workflow

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  WEB_APP_ENV: ${{ vars.WEB_APP_ENV }}
  
jobs:
  # switch-branch:
  #   runs-on: ubuntu-latest

  #   steps:
  #   - name: Checkout main branch
  #     uses: actions/checkout@v3

  #   - name: Checkout different branch
  #     run: git checkout development

  build_web:
    runs-on: ubuntu-latest
    environment: staging
    steps:
      - uses: actions/checkout@v4
      - run: cat .github/workflows/versions.env >> $GITHUB_ENV
      - uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
      - name: Remove Emoji Font
        run: |
          rm -rf fonts/NotoEmoji
          yq -i 'del( .flutter.fonts[] | select(.family == "NotoEmoji") )' pubspec.yaml
      - run: flutter pub get
      - name: Prepare web
        run: ./scripts/prepare-web.sh
      - name: Build Release Web
        run: ./scripts/build-web.sh
        
      - name: Upload files
        uses: actions/upload-artifact@v3
        with:
          name: web
          path: build/web

  deploy_web:
    runs-on: ubuntu-latest
    needs: build_web
    environment: staging
    steps:
      - name: Download web
        uses: actions/download-artifact@v3
        with:
          name: web
          path: build/web
      - name: Update Website files
        run: |
          mv build/web public
          touch public/.env
          echo "$WEB_APP_ENV" >> public/.env
          cp public/.env public/assets/.env
      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v4
        with:
          personal_token: ${{ secrets.PAGES_DEPLOY_TOKEN }}
          publish_dir: ./public
          publish_branch: gh-pages
          cname: app.staging.pangea.chat

  update_sentry:
    runs-on: ubuntu-latest
    needs: build_web
    environment: staging
    env:
      SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
      SENTRY_RELEASE: ${{ github.sha }}
      SENTRY_PROJECT: ${{ vars.SENTRY_PROJECT }}
      SENTRY_ORG: ${{ vars.SENTRY_ORG }}
    steps:
      - uses: actions/checkout@v4
      - run: cat .github/workflows/versions.env >> $GITHUB_ENV
      - uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
      - name: Download web
        uses: actions/download-artifact@v3
        with:
          name: web
          path: build/web
      - name: Update packages
        run: flutter pub get
      - name: Update sentry
        run: flutter packages pub run sentry_dart_plugin

  deploy_playstore_internal:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - run: cat .github/workflows/versions.env >> $GITHUB_ENV
      - uses: actions/setup-java@v4
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: 'zulu'
      - uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          cache: true
      - name: Set up Android SDK
        if: ${{ env.ACT }} # Only run on local act setups, as GitHub Actions provides the Android SDK on Ubuntu
        uses: android-actions/setup-android@v2
      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.3'
      - name: Install Fastlane
        run: gem install fastlane -NV
#      - name: Apply Google Services Patch
#        run: git apply ./scripts/enable-android-google-services.patch
      - name: Remove Emoji Font
        run: |
          rm -rf fonts/NotoEmoji
          yq -i 'del( .flutter.fonts[] | select(.family == "NotoEmoji") )' pubspec.yaml
      - run: flutter pub get
      - name: Prepare Android Release Build
        env:
          PLAY_STORE_UPLOAD_KEY: ${{ secrets.PLAY_STORE_UPLOAD_KEY }}
          PLAY_STORE_KEYSTORE_KEY_ALIAS: ${{ secrets.PLAY_STORE_KEYSTORE_KEY_ALIAS }}
          PLAY_STORE_KEYSTORE_STORE_PASSWORD: ${{ secrets.PLAY_STORE_KEYSTORE_STORE_PASSWORD }}
          PLAY_STORE_KEYSTORE_KEY_PASSWORD: ${{ secrets.PLAY_STORE_KEYSTORE_KEY_PASSWORD }}
          PLAY_STORE_CONFIG_JSON: ${{ secrets.PLAY_STORE_CONFIG_JSON }}
        run: ./scripts/prepare-android-release.sh
      - name: Build Android Release
        run: flutter build appbundle --target-platform android-arm,android-arm64,android-x64
      - name: Deploy Android Release
        run: |
          mkdir -p build/android
          cp build/app/outputs/bundle/release/app-release.aab build/android/
          cd android
          bundle install
          bundle update fastlane
          cd ..

  deploy_ios_internal:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4
      - run: cat .github/workflows/versions.env >> $GITHUB_ENV
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - run: 'echo "$API_KEY" | base64 --decode --ignore-garbage > AuthKey.p8'
        shell: bash
        env:
          API_KEY: ${{ secrets.APP_STORE_CONNECT_API_KEY }}

      - run: bundle install

      - run: bundle exec fastlane versioning

      - name: Flutter
        uses: subosito/flutter-action@v2
        with:
          cache: true
          cache-key: 'flutter-:os:-:channel:-:version:-:arch:-:hash:'
          cache-path: "${{ runner.tool_cache }}/flutter/:channel:-:version:-:arch:"
      - run: flutter build ios --simulator --target=integration_test/screenshot_test.dart
        if: ${{ inputs.screenshot == 'true' }}

      - name: Archive integration ipa
        if: ${{ inputs.screenshot == 'true' }}
        uses: actions/upload-artifact@v4
        with:
          name: app-simulator-build
          path: build/ios/iphonesimulator/Runner.app
          if-no-files-found: error
          retention-days: 3

      # Build ios Release
      - run: flutter build ios --release --config-only --no-codesign --target=lib/main.dart
        if: ${{ inputs.ipa == 'true' }}

      - run: bundle exec fastlane build
        if: ${{ inputs.ipa == 'true' }}

      - name: Archive ipa
        if: ${{ inputs.ipa == 'true' }}
        uses: actions/upload-artifact@v4
        with:
          name: Runner.ipa
          path: ios/Runner.ipa
          if-no-files-found: error
          retention-days: 3
