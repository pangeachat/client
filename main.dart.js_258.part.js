// Generated by dart2js (, trust primitives, omit checks, lax runtime type, csp, intern-composite-values), the Dart to JavaScript compiler version: 3.9.2.
((s, d) => {
  s[d] = s[d] || {};
})(self, "$__dart_deferred_initializers__");
$__dart_deferred_initializers__.current = function(hunkHelpers, init, holdersList, $) {
  var B, C,
  A = {
    L10nSv$() {
      return new A.L10nSv(B.canonicalizedLocale("sv"));
    },
    L10nSv: function L10nSv(t0) {
      this.localeName = t0;
    }
  };
  B = holdersList[0];
  C = holdersList[54];
  A = hunkHelpers.updateHolder(holdersList[46], A);
  A.L10nSv.prototype = {
    get$alwaysUse24HourFormat() {
      return "false";
    },
    get$repeatPassword() {
      return "Upprepa l\xf6senord";
    },
    get$notAnImage() {
      return "Inte en bildfil.";
    },
    get$setCustomPermissionLevel() {
      return "Set custom permission level";
    },
    get$setPermissionsLevelDescription() {
      return "Please choose a predefined role below or enter a custom permission level between 0 and 100.";
    },
    get$ignoreUser() {
      return "Ignore user";
    },
    get$normalUser() {
      return "Normal user";
    },
    get$remove(_) {
      return "Ta bort";
    },
    get$importNow() {
      return "Importera nu";
    },
    get$importEmojis() {
      return "Importera emojier";
    },
    get$importFromZipFile() {
      return "Importera fr\xe5n .zip-fil";
    },
    get$exportEmotePack() {
      return "Exportera Emote-pack som .zip";
    },
    get$replace(_) {
      return "Ers\xe4tt";
    },
    aboutHomeserver$1(homeserver) {
      return "About " + homeserver;
    },
    get$accept(_) {
      return "Acceptera";
    },
    acceptedTheInvitation$1(username) {
      return "\ud83d\udc4d " + username + " accepterade inbjudan";
    },
    get$account() {
      return "Konto";
    },
    activatedEndToEndEncryption$1(username) {
      return "\ud83d\udd10 " + username + " aktiverade \xe4ndpunktskryptering";
    },
    get$addEmail() {
      return "L\xe4gg till e-post";
    },
    supposedMxid$1(mxid) {
      return "Detta b\xf6r vara " + mxid;
    },
    get$admin() {
      return "Admin";
    },
    get$commandHint_roomupgrade() {
      return "Upgrade this room to the given room version";
    },
    get$commandHint_googly() {
      return "Skicka n\xe5gra googly \xf6gon";
    },
    get$commandHint_cuddle() {
      return "Skicka en omfamning";
    },
    get$commandHint_hug() {
      return "Skicka en kram";
    },
    googlyEyesContent$1(senderName) {
      return senderName + " skickar dig googly \xf6gon";
    },
    cuddleContent$1(senderName) {
      return senderName + " omfamnar dig";
    },
    hugContent$1(senderName) {
      return senderName + " kramar dig";
    },
    answeredTheCall$1(senderName) {
      return senderName + " besvarade samtalet";
    },
    get$anyoneCanJoin() {
      return "Vem som helst kan g\xe5 med";
    },
    get$archive() {
      return "Arkiv";
    },
    get$areYouSure() {
      return "\xc4r du s\xe4ker?";
    },
    get$areYouSureYouWantToLogout() {
      return "\xc4r du s\xe4ker p\xe5 att du vill logga ut?";
    },
    get$askSSSSSign() {
      return "F\xf6r att kunna signera den andra personen, v\xe4nligen ange din l\xf6senfras eller \xe5terst\xe4llningsnyckel f\xf6r s\xe4ker lagring.";
    },
    askVerificationRequest$1(username) {
      return "Acceptera denna verifikationsf\xf6rfr\xe5gan fr\xe5n " + username + "?";
    },
    badServerLoginTypesException$3(serverVersions, supportedVersions, suportedVersions) {
      return "Hemma servern st\xf6djer f\xf6ljande inloggnings typer :\n " + serverVersions + "\nMen denna applikation st\xf6djer enbart:\n" + supportedVersions;
    },
    get$sendTypingNotifications() {
      return "Skicka skrivnotifikationer";
    },
    get$swipeRightToLeftToReply() {
      return "Swipe right to left to reply";
    },
    get$sendOnEnter() {
      return "Skicka med Enter";
    },
    countChatsAndCountParticipants$2(chats, participants) {
      return "" + chats + " chats and " + participants + " participants";
    },
    get$banFromChat() {
      return "Bannlys fr\xe5n chatt";
    },
    get$banned() {
      return "Bannlyst";
    },
    bannedUser$2(username, targetName) {
      return username + " bannl\xf6s " + targetName;
    },
    get$blockDevice() {
      return "Blockera Enhet";
    },
    get$blocked() {
      return "Blockerad";
    },
    get$cancel(_) {
      return "Avbryt";
    },
    cantOpenUri$1(uri) {
      return "Kan inte \xf6ppna URL " + uri;
    },
    get$changeDeviceName() {
      return "\xc4ndra enhetsnamn";
    },
    changedTheChatAvatar$1(username) {
      return username + " \xe4ndrade sin chatt-avatar";
    },
    changedTheChatDescriptionTo$2(username, description) {
      return username + " \xe4ndrade chatt-beskrivningen till: '" + description + "'";
    },
    changedTheChatNameTo$2(username, chatname) {
      return username + " \xe4ndrade sitt chatt-namn till: '" + chatname + "'";
    },
    changedTheChatPermissions$1(username) {
      return username + " \xe4ndrade chatt-r\xe4ttigheterna";
    },
    changedTheDisplaynameTo$2(username, displayname) {
      return username + " \xe4ndrade visningsnamnet till: '" + displayname + "'";
    },
    changedTheGuestAccessRules$1(username) {
      return username + " \xe4ndrade reglerna f\xf6r g\xe4staccess";
    },
    changedTheGuestAccessRulesTo$2(username, rules) {
      return username + " \xe4ndrade reglerna f\xf6r g\xe4staccess till: " + rules;
    },
    changedTheHistoryVisibility$1(username) {
      return username + " \xe4ndrade historikens synlighet";
    },
    changedTheHistoryVisibilityTo$2(username, rules) {
      return username + " \xe4ndrade historikens synlighet till: " + rules;
    },
    changedTheJoinRules$1(username) {
      return username + " \xe4ndrade anslutningsreglerna";
    },
    changedTheJoinRulesTo$2(username, joinRules) {
      return username + " \xe4ndrade anslutningsreglerna till " + joinRules;
    },
    changedTheProfileAvatar$1(username) {
      return username + " \xe4ndrade sin avatar";
    },
    changedTheRoomAliases$1(username) {
      return username + " \xe4ndrade rummets alias";
    },
    changedTheRoomInvitationLink$1(username) {
      return username + " \xe4ndrade inbjudningsl\xe4nken";
    },
    get$changePassword() {
      return "\xc4ndra l\xf6senord";
    },
    get$changeTheme() {
      return "\xc4ndra din stil";
    },
    get$changeYourAvatar() {
      return "\xc4ndra din avatar";
    },
    get$channelCorruptedDecryptError() {
      return "Krypteringen har blivit korrupt";
    },
    get$chat() {
      return "Chatt";
    },
    get$chatDetails() {
      return "Chatt-detaljer";
    },
    get$chats() {
      return "Chatter";
    },
    get$chooseAStrongPassword() {
      return "V\xe4lj ett starkt l\xf6senord";
    },
    get$clearArchive() {
      return "Rensa arkiv";
    },
    get$close(_) {
      return "St\xe4ng";
    },
    get$commandHint_markasdm() {
      return "M\xe4rk som rum f\xf6r direktmeddelanden f\xf6r det givante Matrix ID";
    },
    get$commandHint_markasgroup() {
      return "M\xe4rk som grupp";
    },
    get$commandHint_ban() {
      return "Bannlys anv\xe4ndaren fr\xe5n detta rum";
    },
    get$commandHint_clearcache() {
      return "Rensa cache";
    },
    get$commandHint_create() {
      return "Skapa en tom grupp-chatt\nAnv\xe4nd --no-encryption f\xf6r att inaktivera kryptering";
    },
    get$commandHint_discardsession() {
      return "Kasta bort sessionen";
    },
    get$commandHint_dm() {
      return "Starta en direkt-chatt\nAnv\xe4nd --no-encryption f\xf6r att inaktivera kryptering";
    },
    get$commandHint_html() {
      return "Skicka HTML-formatted text";
    },
    get$commandHint_invite() {
      return "Bjud in anv\xe4ndaren till detta rum";
    },
    get$commandHint_join() {
      return "G\xe5 med i rum";
    },
    get$commandHint_kick() {
      return "Ta bort anv\xe4ndare fr\xe5n detta rum";
    },
    get$commandHint_leave() {
      return "L\xe4mna detta rum";
    },
    get$commandHint_me() {
      return "Beskriv dig sj\xe4lv";
    },
    get$commandHint_myroomavatar() {
      return "S\xe4tt din bild f\xf6r detta rum (by mxc-uri)";
    },
    get$commandHint_myroomnick() {
      return "S\xe4tt ditt anv\xe4ndarnamn f\xf6r rummet";
    },
    get$commandHint_op() {
      return "S\xe4tt anv\xe4ndarens kraft niv\xe5 ( standard: 50)";
    },
    get$commandHint_plain() {
      return "Skicka oformaterad text";
    },
    get$commandHint_react() {
      return "Skicka svar som reaktion";
    },
    get$commandHint_send() {
      return "Skicka text";
    },
    get$commandHint_unban() {
      return "Till\xe5t anv\xe4ndare i rummet";
    },
    get$compareEmojiMatch() {
      return "V\xe4nligen j\xe4mf\xf6r uttryckssymbolerna";
    },
    get$compareNumbersMatch() {
      return "V\xe4nligen j\xe4mf\xf6r siffrorna";
    },
    get$configureChat() {
      return "Konfigurera chatt";
    },
    get$confirm(_) {
      return "Bekr\xe4fta";
    },
    get$copiedToClipboard() {
      return "Kopierat till urklipp";
    },
    get$copy(_) {
      return "Kopiera";
    },
    couldNotDecryptMessage$1(error) {
      return "Kunde ej avkoda meddelande: " + error;
    },
    get$checkList() {
      return "Check list";
    },
    countParticipants$1(count) {
      return "" + count + " deltagare";
    },
    countInvited$1(count) {
      return "" + count + " invited";
    },
    get$create(_) {
      return "Skapa";
    },
    createdTheChat$1(username) {
      return "\ud83d\udcac " + username + " skapade chatten";
    },
    get$createGroup() {
      return "Skapa grupp";
    },
    get$currentlyActive() {
      return "F\xf6r n\xe4rvarande aktiv";
    },
    get$darkTheme() {
      return "M\xf6rkt";
    },
    dateAndTimeOfDay$2(date, timeOfDay) {
      return date + ", " + timeOfDay;
    },
    get$deactivateAccountWarning() {
      return "Detta kommer att avaktivera ditt konto. Det h\xe4r g\xe5r inte att \xe5ngra! \xc4r du s\xe4ker?";
    },
    get$defaultPermissionLevel() {
      return "Standard beh\xf6righetsniv\xe5";
    },
    get$$delete(_) {
      return "Radera";
    },
    get$deleteAccount() {
      return "Ta bort konto";
    },
    get$deleteMessage() {
      return "Ta bort meddelande";
    },
    get$devices() {
      return "Enheter";
    },
    get$displaynameHasBeenChanged() {
      return "Visningsnamn har \xe4ndrats";
    },
    get$downloadFile() {
      return "Ladda ner fil";
    },
    get$edit() {
      return "\xc4ndra";
    },
    get$editBlockedServers() {
      return "redigera blockerade servrar";
    },
    get$chatPermissions() {
      return "Chatt-beh\xf6righeter";
    },
    get$editDisplayname() {
      return "\xc4ndra visningsnamn";
    },
    get$editRoomAvatar() {
      return "redigera rumsavatar";
    },
    get$emoteExists() {
      return "Dekalen existerar redan!";
    },
    get$emoteInvalid() {
      return "Ogiltig dekal-kod!";
    },
    get$emoteKeyboardNoRecents() {
      return "Nyligen anv\xe4nda emotes kommer dyka upp h\xe4r\u2026";
    },
    get$emotePacks() {
      return "Dekalpaket f\xf6r rummet";
    },
    get$customEmojisAndStickers() {
      return "Custom emojis and stickers";
    },
    get$emoteShortcode() {
      return "Dekal kod";
    },
    get$emoteWarnNeedToPick() {
      return "Du m\xe5ste v\xe4lja en dekal-kod och en bild!";
    },
    get$emptyChat() {
      return "Tom chatt";
    },
    get$enableEmotesGlobally() {
      return "Aktivera dekal-paket globalt";
    },
    get$enableEncryption() {
      return "Aktivera kryptering";
    },
    get$encrypted() {
      return "Krypterad";
    },
    get$encryptionNotEnabled() {
      return "Kryptering \xe4r ej aktiverad";
    },
    endedTheCall$1(senderName) {
      return senderName + " avslutade samtalet";
    },
    get$enterAnEmailAddress() {
      return "Ange en e-postaddress";
    },
    errorObtainingLocation$1(error) {
      return "Fel vid erh\xe5llande av plats: " + error;
    },
    get$fontSize(_) {
      return "Textstorlek";
    },
    get$forward(_) {
      return "Fram\xe5t";
    },
    get$fromJoining() {
      return "Fr\xe5n att g\xe5 med";
    },
    get$fromTheInvitation() {
      return "Fr\xe5n inbjudan";
    },
    get$guestsAreForbidden() {
      return "G\xe4ster \xe4r f\xf6rbjudna";
    },
    get$guestsCanJoin() {
      return "G\xe4ster kan ansluta";
    },
    hasWithdrawnTheInvitationFor$2(username, targetName) {
      return username + " har tagit tillbaka inbjudan f\xf6r " + targetName;
    },
    get$help() {
      return "Hj\xe4lp";
    },
    get$hideRedactedMessages() {
      return "Hide redacted messages";
    },
    get$hideRedactedMessagesBody() {
      return "If someone redacts a message, this message won't be visible in the chat anymore.";
    },
    get$hideInvalidOrUnknownMessageFormats() {
      return "Hide invalid or unknown message formats";
    },
    get$block() {
      return "blockera";
    },
    get$blockedUsers() {
      return "Blockerade anv\xe4ndare";
    },
    get$blockListDescription() {
      return "Du kan blockera anv\xe4ndare som st\xf6r dig. Du kommer inte f\xe5 n\xe5gra meddelanden eller rum-inbjudningar fr\xe5n anv\xe4ndarna p\xe5 din personliga blocklista.";
    },
    get$blockUsername() {
      return "Ignorera anv\xe4ndarnamn";
    },
    get$iHaveClickedOnLink() {
      return "Jag har klickat p\xe5 l\xe4nken";
    },
    get$incorrectPassphraseOrKey() {
      return "Felaktig l\xf6senordsfras eller \xe5sterst\xe4llningsnyckel";
    },
    get$inviteContact() {
      return "Bjud in kontakt";
    },
    get$noChatDescriptionYet() {
      return "Ingen chatt-beskrivning \xe4n.";
    },
    get$tryAgain() {
      return "F\xf6rs\xf6k igen";
    },
    get$invited() {
      return "Inbjuden";
    },
    get$redactMessageDescription() {
      return "Meddelandet kommer tas bort f\xf6r alla medlemmar i denna konversation. Detta kan inte \xe5ngras.";
    },
    get$optionalRedactReason() {
      return "(Frivilligt) Anledning till att ta bort det h\xe4r meddelandet\u2026";
    },
    invitedUser$2(username, targetName) {
      return "\ud83d\udce9 " + username + " bj\xf6d in " + targetName;
    },
    get$invitedUsersOnly() {
      return "Endast inbjudna anv\xe4ndare";
    },
    get$inviteForMe() {
      return "Inbjudning till mig";
    },
    get$isTyping() {
      return "skriver\u2026";
    },
    joinedTheChat$1(username) {
      return "\ud83d\udc4b " + username + " ansl\xf6t till chatten";
    },
    kicked$2(username, targetName) {
      return "\ud83d\udc5e " + username + " sparkade ut " + targetName;
    },
    get$kickFromChat() {
      return "Sparka fr\xe5n chatt";
    },
    lastActiveAgo$1(localizedTimeShort) {
      return "Senast aktiv: " + localizedTimeShort;
    },
    get$leave() {
      return "L\xe4mna";
    },
    get$leftTheChat() {
      return "L\xe4mnade chatten";
    },
    get$lightTheme() {
      return "Ljust";
    },
    get$dehydrate() {
      return "Exportera sessionen och rensa enheten";
    },
    get$dehydrateWarning() {
      return "Denna \xe5tg\xe4rd kan inte \xe5ngras. F\xf6rs\xe4kra dig om att backupen \xe4r i s\xe4kert f\xf6rvar.";
    },
    get$dehydrateTor() {
      return "TOR-anv\xe4ndare: Exportera session";
    },
    get$dehydrateTorLong() {
      return "TOR-anv\xe4ndare rekommenderas att exportera sessionen innan f\xf6nstret st\xe4ngs.";
    },
    get$loadingPleaseWait() {
      return "Laddar... Var god v\xe4nta.";
    },
    get$loadMore() {
      return "Ladda mer\u2026";
    },
    get$locationDisabledNotice() {
      return "Platstj\xe4nster \xe4r inaktiverade. Var god aktivera dom f\xf6r att kunna dela din plats.";
    },
    get$locationPermissionDeniedNotice() {
      return "Plats \xe5tkomst nekad. Var god godk\xe4n detta f\xf6r att kunna dela din plats.";
    },
    get$login() {
      return "Logga in";
    },
    get$logout() {
      return "Logga ut";
    },
    get$mention() {
      return "N\xe4mn";
    },
    get$messages() {
      return "Meddelanden";
    },
    get$messagesStyle() {
      return "Meddelanden:";
    },
    get$moderator() {
      return "Moderator";
    },
    get$newChat() {
      return "Ny chatt";
    },
    get$newVerificationRequest() {
      return "Ny verifikationsbeg\xe4ran!";
    },
    get$next(_) {
      return "N\xe4sta";
    },
    get$no() {
      return "Nej";
    },
    get$noConnectionToTheServer() {
      return "Ingen anslutning till servern";
    },
    get$noEmotesFound() {
      return "Hittade inga dekaler. \ud83d\ude15";
    },
    get$shareInviteLink() {
      return "Dela inbjudningsl\xe4nk";
    },
    get$none() {
      return "Ingen";
    },
    get$noPasswordRecoveryDescription() {
      return "Du har inte lagt till n\xe5got s\xe4tt f\xf6r att \xe5terst\xe4lla ditt l\xf6senord \xe4n.";
    },
    get$noPermission() {
      return "Ingen beh\xf6righet";
    },
    get$noRoomsFound() {
      return "Hittade inga rum\u2026";
    },
    get$notifications() {
      return "Aviseringar";
    },
    get$obtainingLocation() {
      return "Erh\xe5ller plats\u2026";
    },
    get$offensive() {
      return "St\xf6tande";
    },
    get$ok() {
      return "OK";
    },
    get$oopsSomethingWentWrong() {
      return "Hoppsan, n\xe5got gick fel\u2026";
    },
    get$oneClientLoggedOut() {
      return "En av dina klienter har loggats ut";
    },
    get$openInMaps() {
      return "\xd6ppna i karta";
    },
    get$link() {
      return "L\xe4nk";
    },
    get$serverRequiresEmail() {
      return "Servern beh\xf6ver validera din e-postadress f\xf6r registrering.";
    },
    get$participant() {
      return "Deltagare";
    },
    get$passphraseOrKey() {
      return "l\xf6senord eller \xe5terst\xe4llningsnyckel";
    },
    get$password(_) {
      return "L\xf6senord";
    },
    get$passwordForgotten() {
      return "Gl\xf6mt l\xf6senord";
    },
    get$passwordHasBeenChanged() {
      return "L\xf6senordet har \xe4ndrats";
    },
    get$overview() {
      return "Overview";
    },
    get$passwordRecoverySettings() {
      return "Password recovery settings";
    },
    get$passwordRecovery() {
      return "\xc5terst\xe4ll l\xf6senord";
    },
    get$pickImage() {
      return "V\xe4lj en bild";
    },
    get$pin() {
      return "N\xe5la fast";
    },
    get$pleaseChoose() {
      return "Var god v\xe4lj";
    },
    get$pleaseEnterYourPassword() {
      return "Ange ditt l\xf6senord";
    },
    get$pleaseEnterYourPin() {
      return "Ange din pin-kod";
    },
    get$pleaseEnterYourUsername() {
      return "Ange ditt anv\xe4ndarnamn";
    },
    get$pleaseFollowInstructionsOnWeb() {
      return "F\xf6lj instruktionerna p\xe5 hemsidan och tryck p\xe5 n\xe4sta.";
    },
    get$privacy() {
      return "Integritet";
    },
    get$reason(_) {
      return "Anledning";
    },
    redactedBy$1(username) {
      return "Borttaget av " + username;
    },
    get$directChat() {
      return "Direktchatt";
    },
    redactedByBecause$2(username, reason) {
      return "Borttaget av " + username + " p\xe5 grund av: \u201d" + reason + "\u201d";
    },
    redactedAnEvent$1(username) {
      return username + " redigerade en h\xe4ndelse";
    },
    get$redactMessage() {
      return "Redigera meddelande";
    },
    get$reject() {
      return "Avb\xf6j";
    },
    rejectedTheInvitation$1(username) {
      return username + " avb\xf6jde inbjudan";
    },
    get$removeAllOtherDevices() {
      return "Ta bort alla andra enheter";
    },
    get$unbanFromChat() {
      return "Ta bort chatt-blockering";
    },
    get$removeYourAvatar() {
      return "Ta bort din avatar";
    },
    get$replaceRoomWithNewerVersion() {
      return "Ers\xe4tt rum med nyare version";
    },
    get$reply(_) {
      return "Svara";
    },
    get$reportMessage() {
      return "Rapportera meddelande";
    },
    get$roomHasBeenUpgraded() {
      return "Rummet har blivit uppgraderat";
    },
    get$search(_) {
      return "S\xf6k";
    },
    get$security() {
      return "S\xe4kerhet";
    },
    get$send(_) {
      return "Skicka";
    },
    get$sendAMessage() {
      return "Skicka ett meddelande";
    },
    get$sendAudio() {
      return "Skicka ljud";
    },
    get$sendFile() {
      return "Skicka fil";
    },
    get$sendImage() {
      return "Skicka bild";
    },
    sendImages$1(count) {
      return "Send " + count + " image";
    },
    get$sendMessages() {
      return "Skickade meddelanden";
    },
    get$sendVideo() {
      return "Skicka video";
    },
    sentAFile$1(username) {
      return "\ud83d\udcc1 " + username + " skickade en fil";
    },
    sentAnAudio$1(username) {
      return "\ud83c\udfa4 " + username + " skickade ett ljudklipp";
    },
    sentAPicture$1(username) {
      return "\ud83d\uddbc\ufe0f " + username + " skickade en bild";
    },
    sentASticker$1(username) {
      return "\ud83d\ude0a " + username + " skickade ett klisterm\xe4rke";
    },
    sentAVideo$1(username) {
      return "\ud83c\udfa5 " + username + " skickade en video";
    },
    sentCallInformations$1(senderName) {
      return senderName + " skickade samtalsinformation";
    },
    get$separateChatTypes() {
      return "Separata direktchattar och grupper";
    },
    get$setChatDescription() {
      return "\xc4ndra chattens beskrivning";
    },
    get$setStatus() {
      return "St\xe4ll in status";
    },
    get$settings() {
      return "Inst\xe4llningar";
    },
    get$share(_) {
      return "Dela";
    },
    sharedTheLocation$1(username) {
      return username + " delade sin position";
    },
    get$shareLocation() {
      return "Dela plats";
    },
    get$presencesToggle() {
      return "Visa statusmeddelanden fr\xe5n andra anv\xe4ndare";
    },
    get$skip(_) {
      return "Hoppa \xf6ver";
    },
    get$sourceCode() {
      return "K\xe4llkod";
    },
    startedACall$1(senderName) {
      return senderName + " startade ett samtal";
    },
    get$status(_) {
      return "Status";
    },
    get$statusExampleMessage() {
      return "Hur m\xe5r du i dag?";
    },
    get$submit(_) {
      return "Skicka in";
    },
    get$synchronizingPleaseWait() {
      return "Synkroniserar\u2026 Var god v\xe4nta.";
    },
    synchronizingPleaseWaitCounter$1(percentage) {
      return " Synchronizing\u2026 (" + percentage + "%)";
    },
    get$systemTheme() {
      return "System";
    },
    get$theyDontMatch() {
      return "Dom Matchar Inte";
    },
    get$theyMatch() {
      return "Dom Matchar";
    },
    get$tooManyRequestsWarning() {
      return "F\xf6r m\xe5nga f\xf6rfr\xe5gningar. V\xe4nligen f\xf6rs\xf6k senare!";
    },
    get$tryToSendAgain() {
      return "F\xf6rs\xf6k att skicka igen";
    },
    get$unavailable() {
      return "Upptagen";
    },
    unbannedUser$2(username, targetName) {
      return username + " avbannade " + targetName;
    },
    get$unblockDevice() {
      return "Avblockera enhet";
    },
    get$unknownDevice() {
      return "Ok\xe4nd enhet";
    },
    get$unknownEncryptionAlgorithm() {
      return "Ok\xe4nd krypteringsalgoritm";
    },
    unknownEvent$1(type) {
      return "Ok\xe4nd h\xe4ndelse '" + type + "'";
    },
    get$unpin() {
      return "Avn\xe5la";
    },
    userAndOthersAreTyping$2(username, count) {
      return username + " och " + count + " andra skriver\u2026";
    },
    userAndUserAreTyping$2(username, username2) {
      return username + " och " + username2 + " skriver\u2026";
    },
    userIsTyping$1(username) {
      return username + " skriver\u2026";
    },
    userLeftTheChat$1(username) {
      return "\ud83d\udeaa " + username + " l\xe4mnade chatten";
    },
    get$username(_) {
      return "Anv\xe4ndarnamn";
    },
    userSentUnknownEvent$2(username, type) {
      return username + " skickade en " + type + " h\xe4ndelse";
    },
    get$unverified() {
      return "Ej verifierad";
    },
    get$verified() {
      return "Verifierad";
    },
    get$verifyStart() {
      return "Starta verifiering";
    },
    get$verifySuccess() {
      return "Du har lyckats verifiera!";
    },
    get$verifyTitle() {
      return "Verifiera andra konton";
    },
    get$visibleForAllParticipants() {
      return "Synlig f\xf6r alla deltagare";
    },
    get$visibleForEveryone() {
      return "Synlig f\xf6r alla";
    },
    get$voiceMessage() {
      return "R\xf6stmeddelande";
    },
    get$waitingPartnerAcceptRequest() {
      return "V\xe4ntar p\xe5 att deltagaren accepterar beg\xe4ran\u2026";
    },
    get$waitingPartnerEmoji() {
      return "V\xe4ntar p\xe5 att deltagaren accepterar emojien\u2026";
    },
    get$waitingPartnerNumbers() {
      return "V\xe4ntar p\xe5 att deltagaren accepterar nummer\u2026";
    },
    get$warning() {
      return "Varning!";
    },
    get$weSentYouAnEmail() {
      return "Vi skickade dig ett e-postmeddelande";
    },
    get$whyDoYouWantToReportThis() {
      return "Varf\xf6r vill du rapportera detta?";
    },
    get$withTheseAddressesRecoveryDescription() {
      return "Med dessa addresser kan du \xe5terst\xe4lla ditt l\xf6senord.";
    },
    get$writeAMessage() {
      return "Skriv ett meddelande\u2026";
    },
    get$yes() {
      return "Ja";
    },
    get$you() {
      return "Du";
    },
    get$youAreNoLongerParticipatingInThisChat() {
      return "Du deltar inte l\xe4ngre i denna chatt";
    },
    get$youHaveBeenBannedFromThisChat() {
      return "Du har blivit bannad fr\xe5n denna chatt";
    },
    get$yourPublicKey() {
      return "Din publika nyckel";
    },
    get$messageInfo() {
      return "Meddelandeinformation";
    },
    get$time(_) {
      return "Tid";
    },
    get$sender() {
      return "Avs\xe4ndare";
    },
    get$openGallery() {
      return "\xd6ppna galleri";
    },
    get$start(_) {
      return "Starta";
    },
    get$markAsRead() {
      return "Markera som l\xe4st";
    },
    reactedWith$2(sender, reaction) {
      return sender + " reagerade med " + reaction;
    },
    get$pinMessage() {
      return "F\xe4st i rum";
    },
    get$emojis() {
      return "Uttryckssymboler";
    },
    get$youRejectedTheInvitation() {
      return "Du avvisade inbjudan";
    },
    get$youJoinedTheChat() {
      return "Du gick med i chatten";
    },
    get$youAcceptedTheInvitation() {
      return "\ud83d\udc4d Du accepterade inbjudan";
    },
    youBannedUser$1(user) {
      return "Du f\xf6rbj\xf6d " + user;
    },
    youHaveWithdrawnTheInvitationFor$1(user) {
      return "Du har \xe5terkallat inbjudan till " + user;
    },
    youInvitedBy$1(user) {
      return "\ud83d\udce9 Du har blivit inbjuden av " + user;
    },
    youInvitedUser$1(user) {
      return "\ud83d\udce9 Du bj\xf6d in " + user;
    },
    youKicked$1(user) {
      return "\ud83d\udc5e Du sparkade ut " + user;
    },
    youUnbannedUser$1(user) {
      return "Du \xe5terkallade f\xf6rbudet f\xf6r " + user;
    },
    hasKnocked$1(user) {
      return user + " har knackat";
    },
    get$users() {
      return "Anv\xe4ndare";
    },
    countFiles$1(count) {
      return "" + count + " filer";
    },
    get$user() {
      return "Anv\xe4ndare";
    },
    get$custom() {
      return "Anpassad";
    },
    get$noKeyForThisMessage() {
      return "Detta kan h\xe4nda om meddelandet skickades innan du loggade in p\xe5 ditt konto i den h\xe4r enheten.\n\nDet kan ocks\xe5 vara s\xe5 att avs\xe4ndaren har blockerat din enhet eller att n\xe5got gick fel med internetanslutningen.\n\nKan du l\xe4sa meddelandet i en annan session? I s\xe5dana fall kan du \xf6verf\xf6ra meddelandet fr\xe5n den sessionen! G\xe5 till Inst\xe4llningar > Enhet och s\xe4kerst\xe4ll att dina enheter har verifierat varandra. N\xe4r du \xf6ppnar rummet n\xe4sta g\xe5ng och b\xe5da sessionerna \xe4r i f\xf6rgrunden, s\xe5 kommer nycklarna att \xf6verf\xf6ras automatiskt.\n\nVill du inte f\xf6rlora nycklarna vid utloggning eller n\xe4r du byter enhet? S\xe4kerst\xe4ll att du har aktiverat s\xe4kerhetskopiering f\xf6r chatten i inst\xe4llningarna.";
    },
    wasDirectChatDisplayName$1(oldDisplayName) {
      return "Tom chatt (var " + oldDisplayName + ")";
    },
    get$reopenChat() {
      return "\xc5ter\xf6ppna chatt";
    },
    get$noOtherDevicesFound() {
      return "Inga andra enheter hittades";
    },
    fileIsTooBigForServer$1(max) {
      return "Servern informerar om att filen \xe4r f\xf6r stor f\xf6r att skickas.";
    },
    get$jumpToLastReadMessage() {
      return "Hoppa till det senast l\xe4sta meddelandet";
    },
    get$readUpToHere() {
      return "L\xe4s upp till hit";
    },
    get$jump() {
      return "Hoppa";
    },
    get$openLinkInBrowser() {
      return "\xd6ppna l\xe4nk i webbl\xe4sare";
    },
    get$setColorTheme() {
      return "V\xe4lj f\xe4rgtema:";
    },
    get$invite() {
      return "Bjud in";
    },
    get$invalidInput() {
      return "Ogiltig input!";
    },
    wrongPinEntered$1(seconds) {
      return "Fel pin-kod inslagen! F\xf6rs\xf6k igen om " + seconds + " sekunder\u2026";
    },
    get$pleaseEnterANumber() {
      return "V\xe4nligen ange ett nummer st\xf6rre \xe4n 0";
    },
    get$removeDevicesDescription() {
      return "Du kommer att bli utloggad fr\xe5n den h\xe4r enheten och kommer inte l\xe4ngre kunna f\xe5 meddelanden.";
    },
    get$banUserDescription() {
      return "Anv\xe4ndaren kommer bannlysas fr\xe5n chatten och kommer inte kunna g\xe5 med i chatten igen tills bannlysningen avslutas.";
    },
    get$unbanUserDescription() {
      return "Anv\xe4ndaren kommer kunna g\xe5 med i chatten igen om den f\xf6rs\xf6ker.";
    },
    get$kickUserDescription() {
      return "Anv\xe4ndaren sparkas ut ur chatten men bannlyses inte. I offentliga chattar kan anv\xe4ndaren g\xe5 med igen n\xe4r som helst.";
    },
    get$makeAdminDescription() {
      return "N\xe4r du g\xf6r denna anv\xe4ndare till administrat\xf6r kommer du inte kunna \xe5ngra det eftersom de kommer ha samma beh\xf6righeter som du.";
    },
    get$yourGlobalUserIdIs() {
      return "Ditt globala anv\xe4ndar-ID \xe4r: ";
    },
    noUsersFoundWithQuery$1(query) {
      return "Tyv\xe4rr kunde ingen anv\xe4ndare hittas med \u201d" + query + "\u201d. V\xe4nligen kontrollera om du gjort ett stavfel.";
    },
    get$knocking() {
      return "Knocking";
    },
    get$nothingFound() {
      return "Inget hittades\u2026";
    },
    get$groupName() {
      return "Gruppnamn";
    },
    get$wrongRecoveryKey() {
      return "Tyv\xe4rr verkar detta inte vara den korrekta \xe5terst\xe4llningsnyckeln.";
    },
    get$startConversation() {
      return "Starta konversation";
    },
    get$commandHint_sendraw() {
      return "Skicka r\xe5 json";
    },
    get$leaveEmptyToClearStatus() {
      return "L\xe4mna tom f\xf6r att ta bort din status.";
    },
    get$searchForUsers() {
      return "S\xf6k efter @anv\xe4ndare\u2026";
    },
    get$pleaseEnterYourCurrentPassword() {
      return "V\xe4nligen skriv ditt nuvarande l\xf6senord";
    },
    get$newPassword() {
      return "Nytt l\xf6senord";
    },
    get$pleaseChooseAStrongPassword() {
      return "V\xe4nligen v\xe4lj ett starkt l\xf6senord";
    },
    get$passwordsDoNotMatch() {
      return "L\xf6senorden passar inte";
    },
    get$passwordIsWrong() {
      return "Det angivna l\xf6senordet \xe4r fel";
    },
    get$decline() {
      return "Neka";
    },
    get$thisDevice() {
      return "Denna enhet:";
    },
    get$initAppError() {
      return "Ett problem skedde n\xe4r appen initierades";
    },
    searchIn$1(chat) {
      return 'Search in chat "' + chat + '"...';
    },
    get$searchMore() {
      return "Search more...";
    },
    get$gallery() {
      return "Gallery";
    },
    get$files(_) {
      return "Files";
    },
    sessionLostBody$2(url, error) {
      return "Din session \xe4r f\xf6rlorad. V\xe4nligen rapportera detta fel till utvecklarna h\xe4r: " + url + ". Felmeddelandet \xe4r: " + error;
    },
    restoreSessionBody$2(url, error) {
      return "Appen f\xf6rs\xf6ker nu f\xe5 tillbaks din session fr\xe5n backupen. V\xe4nligen rapportera detta problem till utvecklarna h\xe4r: " + url + ". Felmeddelandet \xe4r: " + error;
    },
    get$sendReadReceipts() {
      return "Skicka l\xe4skvitton";
    },
    get$sendTypingNotificationsDescription() {
      return "Andra deltagare i en diskussion kan se n\xe4r du skriver.";
    },
    get$sendReadReceiptsDescription() {
      return "Andra deltagare i en diskussion kan se n\xe4r du l\xe4st ett meddelande.";
    },
    get$verifyOtherDevice() {
      return "\ud83d\udd10 Verifiera enhet";
    },
    get$verifyOtherDeviceDescription() {
      return "N\xe4r du verifierar en enhet s\xe5 kan era enheter utv\xe4xla nycklar, vilket f\xf6rb\xe4ttrar s\xe4kerheten. \ud83d\udcaa N\xe4r du p\xe5b\xf6rjar en verifiering s\xe5 ser du en popup-ruta p\xe5 b\xe5da enheterna. I den rutan ser du ett antal tecken som du j\xe4mf\xf6r med det som visas p\xe5 den andra enheten. Det \xe4r b\xe4st att ha b\xe5da enheterna till hands innan du p\xe5b\xf6rjar verifieringen. \ud83e\udd33";
    },
    acceptedKeyVerification$1(sender) {
      return sender + " accepterade nyckelverifieringen";
    },
    canceledKeyVerification$1(sender) {
      return sender + " avbr\xf6t nyckelverifieringen";
    },
    completedKeyVerification$1(sender) {
      return sender + " fullbordade nyckelverifieringen";
    },
    isReadyForKeyVerification$1(sender) {
      return sender + " \xe4r redo f\xf6r nyckelverifiering";
    },
    requestedKeyVerification$1(sender) {
      return sender + " beg\xe4rde nyckelverifiering";
    },
    startedKeyVerification$1(sender) {
      return sender + " p\xe5b\xf6rjade nyckelverifiering";
    },
    get$stickers() {
      return "Klisterm\xe4rken";
    },
    get$commandHint_ignore() {
      return "Ignore the given matrix ID";
    },
    get$commandHint_unignore() {
      return "Unignore the given matrix ID";
    },
    thereAreCountUsersBlocked$1(count) {
      return "Right now there are " + count + " users blocked.";
    },
    get$restricted() {
      return "Restricted";
    },
    get$markAsUnread() {
      return "Mark as unread";
    },
    userLevel$1(level) {
      return "" + level + " - User";
    },
    moderatorLevel$1(level) {
      return "" + level + " - Moderator";
    },
    adminLevel$1(level) {
      return "" + level + " - Admin";
    },
    get$changeTheVisibilityOfChatHistory() {
      return "Change the visibility of the chat history";
    },
    get$changeTheCanonicalRoomAlias() {
      return "Change the main public chat address";
    },
    get$sendRoomNotifications() {
      return "Send a @room notifications";
    },
    get$chatPermissionsDescription() {
      return "Define which power level is necessary for certain actions in this chat. The power levels 0, 50 and 100 are usually representing users, moderators and admins, but any gradation is possible.";
    },
    updateInstalled$1(version) {
      return "\ud83c\udf89 Update " + version + " installed!";
    },
    get$sendCanceled() {
      return "Sending canceled";
    },
    get$doesNotSeemToBeAValidHomeserver() {
      return "Doesn't seem to be a compatible homeserver. Wrong URL?";
    },
    get$calculatingFileSize() {
      return "Calculating file size...";
    },
    get$prepareSendingAttachment() {
      return "Prepare sending attachment...";
    },
    get$sendingAttachment() {
      return "Sending attachment...";
    },
    sendingAttachmentCountOfCount$2(index, $length) {
      return "Sending attachment " + index + " of " + $length + "...";
    },
    serverLimitReached$1(seconds) {
      return "Server limit reached! Waiting " + seconds + " seconds...";
    },
    get$noticeChatBackupDeviceVerification() {
      return "Note: When you connect all your devices to the chat backup, they are automatically verified.";
    },
    get$continueText() {
      return "Continue";
    },
    get$blur(_) {
      return "Blur:";
    },
    get$opacity(_) {
      return "Opacity:";
    },
    get$setWallpaper() {
      return "Set wallpaper";
    },
    get$noContactInformationProvided() {
      return "Server does not provide any valid contact information";
    },
    get$contactServerAdmin() {
      return "Contact server admin";
    },
    get$contactServerSecurity() {
      return "Contact server security";
    },
    get$supportPage() {
      return "Support page";
    },
    get$serverInformation() {
      return "Server information:";
    },
    get$name(_) {
      return "Name";
    },
    get$version(_) {
      return "Version";
    },
    get$compress() {
      return "Compress";
    },
    get$boldText() {
      return "Bold text";
    },
    get$italicText() {
      return "Italic text";
    },
    get$strikeThrough() {
      return "Strikethrough";
    },
    get$pleaseFillOut() {
      return "Please fill out";
    },
    get$invalidUrl() {
      return "Invalid url";
    },
    get$addLink() {
      return "Add link";
    },
    get$unableToJoinChat() {
      return "Unable to join chat. Maybe the other party has already closed the conversation.";
    },
    get$previous() {
      return "Previous";
    },
    get$otherPartyNotLoggedIn() {
      return "The other party is currently not logged in and therefore cannot receive messages!";
    },
    get$open(_) {
      return "Open";
    },
    get$waitingForServer() {
      return "Waiting for server...";
    },
    get$newChatRequest() {
      return "\ud83d\udce9 New chat request";
    },
    get$contentNotificationSettings() {
      return "Content notification settings";
    },
    get$generalNotificationSettings() {
      return "General notification settings";
    },
    get$roomNotificationSettings() {
      return "Room notification settings";
    },
    get$userSpecificNotificationSettings() {
      return "User specific notification settings";
    },
    get$otherNotificationSettings() {
      return "Other notification settings";
    },
    get$notificationRuleContainsUserName() {
      return "Contains User Name";
    },
    get$notificationRuleContainsUserNameDescription() {
      return "Notifies the user when a message contains their username.";
    },
    get$notificationRuleMaster() {
      return "Mute all notifications";
    },
    get$notificationRuleMasterDescription() {
      return "Overrides all other rules and disables all notifications.";
    },
    get$notificationRuleSuppressNotices() {
      return "Suppress Automated Messages";
    },
    get$notificationRuleSuppressNoticesDescription() {
      return "Suppresses notifications from automated clients like bots.";
    },
    get$notificationRuleInviteForMe() {
      return "Invite for Me";
    },
    get$notificationRuleInviteForMeDescription() {
      return "Notifies the user when they are invited to a room.";
    },
    get$notificationRuleMemberEvent() {
      return "Member Event";
    },
    get$notificationRuleMemberEventDescription() {
      return "Suppresses notifications for membership events.";
    },
    get$notificationRuleIsUserMention() {
      return "User Mention";
    },
    get$notificationRuleIsUserMentionDescription() {
      return "Notifies the user when they are directly mentioned in a message.";
    },
    get$notificationRuleContainsDisplayName() {
      return "Contains Display Name";
    },
    get$notificationRuleContainsDisplayNameDescription() {
      return "Notifies the user when a message contains their display name.";
    },
    get$notificationRuleIsRoomMention() {
      return "Room Mention";
    },
    get$notificationRuleIsRoomMentionDescription() {
      return "Notifies the user when there is a room mention.";
    },
    get$notificationRuleRoomnotif() {
      return "Room Notification";
    },
    get$notificationRuleRoomnotifDescription() {
      return "Notifies the user when a message contains '@room'.";
    },
    get$notificationRuleTombstone() {
      return "Tombstone";
    },
    get$notificationRuleTombstoneDescription() {
      return "Notifies the user about room deactivation messages.";
    },
    get$notificationRuleReaction() {
      return "Reaction";
    },
    get$notificationRuleReactionDescription() {
      return "Suppresses notifications for reactions.";
    },
    get$notificationRuleRoomServerAcl() {
      return "Room Server ACL";
    },
    get$notificationRuleRoomServerAclDescription() {
      return "Suppresses notifications for room server access control lists (ACL).";
    },
    get$notificationRuleSuppressEdits() {
      return "Suppress Edits";
    },
    get$notificationRuleSuppressEditsDescription() {
      return "Suppresses notifications for edited messages.";
    },
    get$notificationRuleCall() {
      return "Call";
    },
    get$notificationRuleCallDescription() {
      return "Notifies the user about calls.";
    },
    get$notificationRuleEncryptedRoomOneToOne() {
      return "Encrypted Room One-to-One";
    },
    get$notificationRuleEncryptedRoomOneToOneDescription() {
      return "Notifies the user about messages in encrypted one-to-one rooms.";
    },
    get$notificationRuleRoomOneToOne() {
      return "Room One-to-One";
    },
    get$notificationRuleRoomOneToOneDescription() {
      return "Notifies the user about messages in one-to-one rooms.";
    },
    get$notificationRuleMessage() {
      return "Message";
    },
    get$notificationRuleMessageDescription() {
      return "Notifies the user about general messages.";
    },
    get$notificationRuleEncrypted() {
      return "Encrypted";
    },
    get$notificationRuleEncryptedDescription() {
      return "Notifies the user about messages in encrypted rooms.";
    },
    get$notificationRuleJitsi() {
      return "Jitsi";
    },
    get$notificationRuleJitsiDescription() {
      return "Notifies the user about Jitsi widget events.";
    },
    get$notificationRuleServerAcl() {
      return "Suppress Server ACL Events";
    },
    get$notificationRuleServerAclDescription() {
      return "Suppresses notifications for Server ACL events.";
    },
    unknownPushRule$1(rule) {
      return "Unknown push rule '" + rule + "'";
    },
    sentVoiceMessage$2(sender, duration) {
      return "\ud83c\udf99\ufe0f " + duration + " - Voice message from " + sender;
    },
    get$deletePushRuleCanNotBeUndone() {
      return "If you delete this notification setting, this can not be undone.";
    },
    get$more() {
      return "More";
    },
    get$shareKeysWith() {
      return "Share keys with...";
    },
    get$shareKeysWithDescription() {
      return "Which devices should be trusted so that they can read along your messages in encrypted chats?";
    },
    get$allDevices() {
      return "All devices";
    },
    get$crossVerifiedDevicesIfEnabled() {
      return "Cross verified devices if enabled";
    },
    get$crossVerifiedDevices() {
      return "Cross verified devices";
    },
    get$verifiedDevicesOnly() {
      return "Verified devices only";
    },
    get$optionalMessage() {
      return "(Optional) message...";
    },
    get$notSupportedOnThisDevice() {
      return "Not supported on this device";
    },
    get$enterNewChat() {
      return "Enter new chat";
    },
    get$approve() {
      return "Approve";
    },
    get$commandHint_logout() {
      return "Logout your current device";
    },
    get$commandHint_logoutall() {
      return "Logout all active devices";
    },
    get$customReaction() {
      return "Custom reaction";
    },
    writeAMessageLangCodes$2(l1, l2) {
      return "Type in " + l1 + " or " + l2 + "...";
    },
    get$holdForInfo() {
      return "Click and hold for word info.";
    },
    get$greenFeedback() {
      return "That's what I would put!";
    },
    get$yellowFeedback() {
      return "Hm, you can try that and see if it works! To use this word, just click it again.";
    },
    get$redFeedback() {
      return "I don't think that's right...";
    },
    get$itInstructionsTitle() {
      return "I can help you translate!";
    },
    get$itInstructionsBody() {
      return "You can click and hold choices for word info.";
    },
    get$gaTooltip() {
      return "L2 use with grammar assistance";
    },
    get$taTooltip() {
      return "L2 use with translation assistance";
    },
    get$interactiveTranslatorSliderHeader() {
      return "Interactive Translator";
    },
    get$interactiveGrammarSliderHeader() {
      return "Interactive Grammar Checker";
    },
    get$waTooltip() {
      return "L2 use without assistance";
    },
    get$noIdenticalLanguages() {
      return "Please choose different base and target languages";
    },
    get$joinWithClassCode() {
      return "Join course";
    },
    get$languageLevelPreA1() {
      return "True Beginner (Pre A1)";
    },
    get$languageLevelA1() {
      return "Beginner (A1)";
    },
    get$languageLevelA2() {
      return "Elementary (A2)";
    },
    get$languageLevelB1() {
      return "Intermediate (B1)";
    },
    get$languageLevelB2() {
      return "Upper Intermediate (B2)";
    },
    get$languageLevelC1() {
      return "Advanced (C1)";
    },
    get$languageLevelC2() {
      return "Mastery (C2)";
    },
    get$changeTheNameOfTheClass() {
      return "Change the name";
    },
    get$changeTheNameOfTheChat() {
      return "Change the name of the chat";
    },
    get$sorryNoResults() {
      return "Sorry, no results.";
    },
    get$ignoreInThisText() {
      return "Ignore";
    },
    needsItMessage$1(targetLanguage) {
      return "Wait, that's not " + targetLanguage + "! Do you need help translating?";
    },
    get$countryInformation() {
      return "My country";
    },
    get$targetLanguage() {
      return "Target Language";
    },
    get$updateLanguage() {
      return "My languages";
    },
    get$whatLanguageYouWantToLearn() {
      return "What language do you want to learn?";
    },
    get$whatIsYourBaseLanguage() {
      return "What is your base language?";
    },
    get$saveChanges() {
      return "Save changes";
    },
    get$publicProfileTitle() {
      return "Allow my profile to be found in search";
    },
    get$publicProfileDesc() {
      return "By turning on, you enable other users to find your profile in the global search bar and send requests to chat. At this point, you can choose to accept or deny the request.";
    },
    get$errorDisableIT() {
      return "Translation assistance is turned off.";
    },
    get$errorDisableIGC() {
      return "Grammar assistance is turned off.";
    },
    get$errorDisableLanguageAssistance() {
      return "Translation assistance and grammar assistance are turned off.";
    },
    get$errorDisableITUserDesc() {
      return "Click here to update translation assistance settings";
    },
    get$errorDisableIGCUserDesc() {
      return "Click here to update grammar assistance settings";
    },
    get$errorDisableLanguageAssistanceUserDesc() {
      return "Click here to update translation assistance and grammar assistance settings";
    },
    get$errorDisableITClassDesc() {
      return "Translation assistance is turned off for the course that this chat is in.";
    },
    get$errorDisableIGCClassDesc() {
      return "Grammar assistance is turned off for the course that this chat is in.";
    },
    get$error405Title() {
      return "Languages not set";
    },
    get$error405Desc() {
      return "Please set your languages in Main Menu > Learning Settings.";
    },
    get$termsAndConditions() {
      return "Terms and Conditions";
    },
    get$andCertifyIAmAtLeast13YearsOfAge() {
      return " and certify I am at least 16 years of age.";
    },
    get$error502504Title() {
      return "Wow, there are a lot of students online!";
    },
    get$error502504Desc() {
      return "Translation and grammar tools may be slow or unavailable while the Pangea bots catch up.";
    },
    get$error404Title() {
      return "Translation error!";
    },
    get$error404Desc() {
      return "Pangea Bot isn't sure how to translate that...";
    },
    get$errorPleaseRefresh() {
      return "We're looking into it! Please reload and try again.";
    },
    get$connectedToStaging() {
      return "Connected to Staging";
    },
    get$learningSettings() {
      return "Learning settings";
    },
    get$participants() {
      return "Participants";
    },
    get$clickMessageTitle() {
      return "Need help?";
    },
    get$clickMessageBody() {
      return "Click a message for language tools like translation, play back and more!";
    },
    get$allDone() {
      return "All done!";
    },
    get$vocab() {
      return "Vocab";
    },
    get$subscribe(_) {
      return "Subscribe";
    },
    get$getAccess() {
      return "Subscribe now!";
    },
    get$subscriptionDesc() {
      return "Messaging is free! Subscribe to unlock interactive translation, grammar checking and learning analytics.";
    },
    get$subscriptionManagement() {
      return "Subscription Management";
    },
    get$currentSubscription() {
      return "Current Subscription";
    },
    get$cancelSubscription() {
      return "Cancel your subscription";
    },
    get$selectYourPlan() {
      return "Select Your Plan";
    },
    get$subsciptionPlatformTooltip() {
      return "Please login to your original device to manage your subscription plan";
    },
    get$subscriptionManagementUnavailable() {
      return "Subscription management not available";
    },
    get$paymentMethod() {
      return "Payment Method";
    },
    get$paymentHistory() {
      return "Payment History";
    },
    get$emptyChatDownloadWarning() {
      return "Cannot download empty chat";
    },
    get$toggleImmersionMode() {
      return "Immersion Mode";
    },
    get$toggleImmersionModeDesc() {
      return "When enabled, all messages are displayed in your target language. This setting is most useful in language exchanges.";
    },
    get$itToggleDescription() {
      return "This language learning tool will identify words in your base language and help you translate them to your target language. Though rare, the AI can make translation errors.";
    },
    get$igcToggleDescription() {
      return "This language learning tool will identify common spelling, grammar and punctuation errors in your message and suggest corrections. Though rare, the AI can make correction errors.";
    },
    get$originalMessage() {
      return "Original Message";
    },
    get$sentMessage() {
      return "Sent Message";
    },
    get$useType() {
      return "Use Type";
    },
    get$notAvailable() {
      return "Not Available";
    },
    get$taAndGaTooltip() {
      return "L2 use with translation assistance and grammar assistance";
    },
    get$definitionsToolName() {
      return "Word Definitions";
    },
    get$definitionsToolDescription() {
      return "When enabled, words underlined in blue can be clicked for definitions. Click messages to access definitions.";
    },
    get$welcomeBack() {
      return "Welcome back! If you were part of the 2023-2024 pilot, please contact us for your special pilot subscription. If you are a teacher who has (or whose institution has) purchased licenses for your class, contact us for your teacher subscription.";
    },
    get$downloadTxtFile() {
      return "Download Text File";
    },
    get$downloadCSVFile() {
      return "Download CSV File";
    },
    get$promotionalSubscriptionDesc() {
      return "You currently have a lifetime promotional subscription. Message support@pangea.chat for help changing your subscription.";
    },
    originalSubscriptionPlatform$1(purchasePlatform) {
      return "Subscription purchased through " + purchasePlatform;
    },
    get$oneWeekTrial() {
      return "One Week Trial";
    },
    get$downloadXLSXFile() {
      return "Download Excel File";
    },
    get$unkDisplayName() {
      return "Unknown";
    },
    get$wwCountryDisplayName() {
      return "World Wide";
    },
    get$afCountryDisplayName() {
      return "Afghanistan";
    },
    get$axCountryDisplayName() {
      return "Aland Islands";
    },
    get$alCountryDisplayName() {
      return "Albania";
    },
    get$dzCountryDisplayName() {
      return "Algeria";
    },
    get$asCountryDisplayName() {
      return "American Samoa";
    },
    get$adCountryDisplayName() {
      return "Andorra";
    },
    get$aoCountryDisplayName() {
      return "Angola";
    },
    get$aiCountryDisplayName() {
      return "Anguilla";
    },
    get$agCountryDisplayName() {
      return "Antigua and Barbuda";
    },
    get$arCountryDisplayName() {
      return "Argentina";
    },
    get$amCountryDisplayName() {
      return "Armenia";
    },
    get$awCountryDisplayName() {
      return "Aruba";
    },
    get$acCountryDisplayName() {
      return "Ascension Island";
    },
    get$auCountryDisplayName() {
      return "Australia";
    },
    get$atCountryDisplayName() {
      return "Austria";
    },
    get$azCountryDisplayName() {
      return "Azerbaijan";
    },
    get$bsCountryDisplayName() {
      return "Bahamas";
    },
    get$bhCountryDisplayName() {
      return "Bahrain";
    },
    get$bdCountryDisplayName() {
      return "Bangladesh";
    },
    get$bbCountryDisplayName() {
      return "Barbados";
    },
    get$byCountryDisplayName() {
      return "Belarus";
    },
    get$beCountryDisplayName() {
      return "Belgium";
    },
    get$bzCountryDisplayName() {
      return "Belize";
    },
    get$bjCountryDisplayName() {
      return "Benin";
    },
    get$bmCountryDisplayName() {
      return "Bermuda";
    },
    get$btCountryDisplayName() {
      return "Bhutan";
    },
    get$boCountryDisplayName() {
      return "Bolivia";
    },
    get$baCountryDisplayName() {
      return "Bosnia and Herzegovina";
    },
    get$bwCountryDisplayName() {
      return "Botswana";
    },
    get$brCountryDisplayName() {
      return "Brazil";
    },
    get$ioCountryDisplayName() {
      return "British Indian Ocean Territory";
    },
    get$vgCountryDisplayName() {
      return "British Virgin Islands";
    },
    get$bnCountryDisplayName() {
      return "Brunei";
    },
    get$bgCountryDisplayName() {
      return "Bulgaria";
    },
    get$bfCountryDisplayName() {
      return "Burkina Faso";
    },
    get$biCountryDisplayName() {
      return "Burundi";
    },
    get$khCountryDisplayName() {
      return "Cambodia";
    },
    get$cmCountryDisplayName() {
      return "Cameroon";
    },
    get$caCountryDisplayName() {
      return "Canada";
    },
    get$cvCountryDisplayName() {
      return "Cape Verde";
    },
    get$bqCountryDisplayName() {
      return "Caribbean Netherlands";
    },
    get$kyCountryDisplayName() {
      return "Cayman Islands";
    },
    get$cfCountryDisplayName() {
      return "Central African Republic";
    },
    get$tdCountryDisplayName() {
      return "Chad";
    },
    get$clCountryDisplayName() {
      return "Chile";
    },
    get$cnCountryDisplayName() {
      return "China";
    },
    get$cxCountryDisplayName() {
      return "Christmas Island";
    },
    get$ccCountryDisplayName() {
      return "Cocos [Keeling] Islands";
    },
    get$coCountryDisplayName() {
      return "Colombia";
    },
    get$kmCountryDisplayName() {
      return "Comoros";
    },
    get$cdCountryDisplayName() {
      return "Democratic Republic Congo";
    },
    get$cgCountryDisplayName() {
      return "Republic of Congo";
    },
    get$ckCountryDisplayName() {
      return "Cook Islands";
    },
    get$crCountryDisplayName() {
      return "Costa Rica";
    },
    get$ciCountryDisplayName() {
      return "C\xf4te d'Ivoire";
    },
    get$hrCountryDisplayName() {
      return "Croatia";
    },
    get$cuCountryDisplayName() {
      return "Cuba";
    },
    get$cwCountryDisplayName() {
      return "Cura\xe7ao";
    },
    get$cyCountryDisplayName() {
      return "Cyprus";
    },
    get$czCountryDisplayName() {
      return "Czech Republic";
    },
    get$dkCountryDisplayName() {
      return "Denmark";
    },
    get$djCountryDisplayName() {
      return "Djibouti";
    },
    get$dmCountryDisplayName() {
      return "Dominica";
    },
    get$doCountryDisplayName() {
      return "Dominican Republic";
    },
    get$tlCountryDisplayName() {
      return "East Timor";
    },
    get$ecCountryDisplayName() {
      return "Ecuador";
    },
    get$egCountryDisplayName() {
      return "Egypt";
    },
    get$svCountryDisplayName() {
      return "El Salvador";
    },
    get$gqCountryDisplayName() {
      return "Equatorial Guinea";
    },
    get$erCountryDisplayName() {
      return "Eritrea";
    },
    get$eeCountryDisplayName() {
      return "Estonia";
    },
    get$szCountryDisplayName() {
      return "Eswatini";
    },
    get$etCountryDisplayName() {
      return "Ethiopia";
    },
    get$fkCountryDisplayName() {
      return "Falkland Islands";
    },
    get$foCountryDisplayName() {
      return "Faroe Islands";
    },
    get$fjCountryDisplayName() {
      return "Fiji";
    },
    get$fiCountryDisplayName() {
      return "Finland";
    },
    get$frCountryDisplayName() {
      return "France";
    },
    get$gfCountryDisplayName() {
      return "French Guiana";
    },
    get$pfCountryDisplayName() {
      return "French Polynesia";
    },
    get$gaCountryDisplayName() {
      return "Gabon";
    },
    get$gmCountryDisplayName() {
      return "Gambia";
    },
    get$geCountryDisplayName() {
      return "Georgia";
    },
    get$deCountryDisplayName() {
      return "Germany";
    },
    get$ghCountryDisplayName() {
      return "Ghana";
    },
    get$giCountryDisplayName() {
      return "Gibraltar";
    },
    get$grCountryDisplayName() {
      return "Greece";
    },
    get$glCountryDisplayName() {
      return "Greenland";
    },
    get$gdCountryDisplayName() {
      return "Grenada";
    },
    get$gpCountryDisplayName() {
      return "Guadeloupe";
    },
    get$guCountryDisplayName() {
      return "Guam";
    },
    get$gtCountryDisplayName() {
      return "Guatemala";
    },
    get$ggCountryDisplayName() {
      return "Guernsey";
    },
    get$gnCountryDisplayName() {
      return "Guinea Conakry";
    },
    get$gwCountryDisplayName() {
      return "Guinea-Bissau";
    },
    get$gyCountryDisplayName() {
      return "Guyana";
    },
    get$htCountryDisplayName() {
      return "Haiti";
    },
    get$hmCountryDisplayName() {
      return "Heard Island and McDonald Islands";
    },
    get$hnCountryDisplayName() {
      return "Honduras";
    },
    get$hkCountryDisplayName() {
      return "Hong Kong";
    },
    get$huCountryDisplayName() {
      return "Hungary";
    },
    get$isCountryDisplayName() {
      return "Iceland";
    },
    get$inCountryDisplayName() {
      return "India";
    },
    get$idCountryDisplayName() {
      return "Indonesia";
    },
    get$irCountryDisplayName() {
      return "Iran";
    },
    get$iqCountryDisplayName() {
      return "Iraq";
    },
    get$ieCountryDisplayName() {
      return "Ireland";
    },
    get$imCountryDisplayName() {
      return "Isle of Man";
    },
    get$ilCountryDisplayName() {
      return "Israel";
    },
    get$itCountryDisplayName() {
      return "Italy";
    },
    get$jmCountryDisplayName() {
      return "Jamaica";
    },
    get$jpCountryDisplayName() {
      return "Japan";
    },
    get$jeCountryDisplayName() {
      return "Jersey";
    },
    get$joCountryDisplayName() {
      return "Jordan";
    },
    get$kzCountryDisplayName() {
      return "Kazakhstan";
    },
    get$keCountryDisplayName() {
      return "Kenya";
    },
    get$kiCountryDisplayName() {
      return "Kiribati";
    },
    get$xkCountryDisplayName() {
      return "Kosovo";
    },
    get$kwCountryDisplayName() {
      return "Kuwait";
    },
    get$kgCountryDisplayName() {
      return "Kyrgyzstan";
    },
    get$laCountryDisplayName() {
      return "Laos";
    },
    get$lvCountryDisplayName() {
      return "Latvia";
    },
    get$lbCountryDisplayName() {
      return "Lebanon";
    },
    get$lsCountryDisplayName() {
      return "Lesotho";
    },
    get$lrCountryDisplayName() {
      return "Liberia";
    },
    get$lyCountryDisplayName() {
      return "Libya";
    },
    get$liCountryDisplayName() {
      return "Liechtenstein";
    },
    get$ltCountryDisplayName() {
      return "Lithuania";
    },
    get$luCountryDisplayName() {
      return "Luxembourg";
    },
    get$moCountryDisplayName() {
      return "Macau";
    },
    get$mkCountryDisplayName() {
      return "Macedonia";
    },
    get$mgCountryDisplayName() {
      return "Madagascar";
    },
    get$mwCountryDisplayName() {
      return "Malawi";
    },
    get$myCountryDisplayName() {
      return "Malaysia";
    },
    get$mvCountryDisplayName() {
      return "Maldives";
    },
    get$mlCountryDisplayName() {
      return "Mali";
    },
    get$mtCountryDisplayName() {
      return "Malta";
    },
    get$mhCountryDisplayName() {
      return "Marshall Islands";
    },
    get$mqCountryDisplayName() {
      return "Martinique";
    },
    get$mrCountryDisplayName() {
      return "Mauritania";
    },
    get$muCountryDisplayName() {
      return "Mauritius";
    },
    get$ytCountryDisplayName() {
      return "Mayotte";
    },
    get$mxCountryDisplayName() {
      return "Mexico";
    },
    get$fmCountryDisplayName() {
      return "Micronesia";
    },
    get$mdCountryDisplayName() {
      return "Moldova";
    },
    get$mcCountryDisplayName() {
      return "Monaco";
    },
    get$mnCountryDisplayName() {
      return "Mongolia";
    },
    get$meCountryDisplayName() {
      return "Montenegro";
    },
    get$msCountryDisplayName() {
      return "Montserrat";
    },
    get$maCountryDisplayName() {
      return "Morocco";
    },
    get$mzCountryDisplayName() {
      return "Mozambique";
    },
    get$mmCountryDisplayName() {
      return "Myanmar (Burma)";
    },
    get$naCountryDisplayName() {
      return "Namibia";
    },
    get$nrCountryDisplayName() {
      return "Nauru";
    },
    get$npCountryDisplayName() {
      return "Nepal";
    },
    get$nlCountryDisplayName() {
      return "Netherlands";
    },
    get$ncCountryDisplayName() {
      return "New Caledonia";
    },
    get$nzCountryDisplayName() {
      return "New Zealand";
    },
    get$niCountryDisplayName() {
      return "Nicaragua";
    },
    get$neCountryDisplayName() {
      return "Niger";
    },
    get$ngCountryDisplayName() {
      return "Nigeria";
    },
    get$nuCountryDisplayName() {
      return "Niue";
    },
    get$nfCountryDisplayName() {
      return "Norfolk Island";
    },
    get$kpCountryDisplayName() {
      return "North Korea";
    },
    get$mpCountryDisplayName() {
      return "Northern Mariana Islands";
    },
    get$noCountryDisplayName() {
      return "Norway";
    },
    get$omCountryDisplayName() {
      return "Oman";
    },
    get$pkCountryDisplayName() {
      return "Pakistan";
    },
    get$pwCountryDisplayName() {
      return "Palau";
    },
    get$psCountryDisplayName() {
      return "Palestinian Territories";
    },
    get$paCountryDisplayName() {
      return "Panama";
    },
    get$pgCountryDisplayName() {
      return "Papua New Guinea";
    },
    get$pyCountryDisplayName() {
      return "Paraguay";
    },
    get$peCountryDisplayName() {
      return "Peru";
    },
    get$phCountryDisplayName() {
      return "Philippines";
    },
    get$plCountryDisplayName() {
      return "Poland";
    },
    get$ptCountryDisplayName() {
      return "Portugal";
    },
    get$prCountryDisplayName() {
      return "Puerto Rico";
    },
    get$qaCountryDisplayName() {
      return "Qatar";
    },
    get$reCountryDisplayName() {
      return "R\xe9union";
    },
    get$roCountryDisplayName() {
      return "Romania";
    },
    get$ruCountryDisplayName() {
      return "Russia";
    },
    get$rwCountryDisplayName() {
      return "Rwanda";
    },
    get$blCountryDisplayName() {
      return "Saint Barth\xe9lemy";
    },
    get$shCountryDisplayName() {
      return "Saint Helena";
    },
    get$knCountryDisplayName() {
      return "St. Kitts";
    },
    get$lcCountryDisplayName() {
      return "St. Lucia";
    },
    get$mfCountryDisplayName() {
      return "Saint Martin";
    },
    get$pmCountryDisplayName() {
      return "Saint Pierre and Miquelon";
    },
    get$vcCountryDisplayName() {
      return "St. Vincent";
    },
    get$wsCountryDisplayName() {
      return "Samoa";
    },
    get$smCountryDisplayName() {
      return "San Marino";
    },
    get$stCountryDisplayName() {
      return "S\xe3o Tom\xe9 and Pr\xedncipe";
    },
    get$saCountryDisplayName() {
      return "Saudi Arabia";
    },
    get$snCountryDisplayName() {
      return "Senegal";
    },
    get$rsCountryDisplayName() {
      return "Serbia";
    },
    get$scCountryDisplayName() {
      return "Seychelles";
    },
    get$slCountryDisplayName() {
      return "Sierra Leone";
    },
    get$sgCountryDisplayName() {
      return "Singapore";
    },
    get$sxCountryDisplayName() {
      return "Sint Maarten";
    },
    get$skCountryDisplayName() {
      return "Slovakia";
    },
    get$siCountryDisplayName() {
      return "Slovenia";
    },
    get$sbCountryDisplayName() {
      return "Solomon Islands";
    },
    get$soCountryDisplayName() {
      return "Somalia";
    },
    get$zaCountryDisplayName() {
      return "South Africa";
    },
    get$gsCountryDisplayName() {
      return "South Georgia and the South Sandwich Islands";
    },
    get$krCountryDisplayName() {
      return "South Korea";
    },
    get$ssCountryDisplayName() {
      return "South Sudan";
    },
    get$esCountryDisplayName() {
      return "Spain";
    },
    get$lkCountryDisplayName() {
      return "Sri Lanka";
    },
    get$sdCountryDisplayName() {
      return "Sudan";
    },
    get$srCountryDisplayName() {
      return "Suriname";
    },
    get$sjCountryDisplayName() {
      return "Svalbard and Jan Mayen";
    },
    get$seCountryDisplayName() {
      return "Sweden";
    },
    get$chCountryDisplayName() {
      return "Switzerland";
    },
    get$syCountryDisplayName() {
      return "Syria";
    },
    get$twCountryDisplayName() {
      return "Taiwan";
    },
    get$tjCountryDisplayName() {
      return "Tajikistan";
    },
    get$tzCountryDisplayName() {
      return "Tanzania";
    },
    get$thCountryDisplayName() {
      return "Thailand";
    },
    get$tgCountryDisplayName() {
      return "Togo";
    },
    get$tkCountryDisplayName() {
      return "Tokelau";
    },
    get$toCountryDisplayName() {
      return "Tonga";
    },
    get$ttCountryDisplayName() {
      return "Trinidad/Tobago";
    },
    get$tnCountryDisplayName() {
      return "Tunisia";
    },
    get$trCountryDisplayName() {
      return "Turkey";
    },
    get$tmCountryDisplayName() {
      return "Turkmenistan";
    },
    get$tcCountryDisplayName() {
      return "Turks and Caicos Islands";
    },
    get$tvCountryDisplayName() {
      return "Tuvalu";
    },
    get$viCountryDisplayName() {
      return "U.S. Virgin Islands";
    },
    get$ugCountryDisplayName() {
      return "Uganda";
    },
    get$uaCountryDisplayName() {
      return "Ukraine";
    },
    get$aeCountryDisplayName() {
      return "United Arab Emirates";
    },
    get$gbCountryDisplayName() {
      return "United Kingdom";
    },
    get$usCountryDisplayName() {
      return "United States";
    },
    get$uyCountryDisplayName() {
      return "Uruguay";
    },
    get$uzCountryDisplayName() {
      return "Uzbekistan";
    },
    get$vuCountryDisplayName() {
      return "Vanuatu";
    },
    get$vaCountryDisplayName() {
      return "Vatican City";
    },
    get$veCountryDisplayName() {
      return "Venezuela";
    },
    get$vnCountryDisplayName() {
      return "Vietnam";
    },
    get$wfCountryDisplayName() {
      return "Wallis and Futuna";
    },
    get$ehCountryDisplayName() {
      return "Western Sahara";
    },
    get$yeCountryDisplayName() {
      return "Yemen";
    },
    get$zmCountryDisplayName() {
      return "Zambia";
    },
    get$zwCountryDisplayName() {
      return "Zimbabwe";
    },
    get$pay() {
      return "Pay";
    },
    invitedToSpace$2(space, user) {
      return user + " has invited you to join a course: " + space + "! Do you wish to accept?";
    },
    get$youreInvited() {
      return "\ud83d\udce9 You're invited!";
    },
    invitedToChat$2($name, user) {
      return user + " has invited you to join a chat: " + $name + "! Do you wish to accept?";
    },
    get$monthlySubscription() {
      return "Monthly";
    },
    get$yearlySubscription() {
      return "Yearly";
    },
    get$defaultSubscription() {
      return "Pangea Chat Subscription";
    },
    get$freeTrial() {
      return "Free Trial";
    },
    get$noDataFound() {
      return "No data found";
    },
    get$blurMeansTranslateTitle() {
      return "Why is the message blurred?";
    },
    get$blurMeansTranslateBody() {
      return "While Immersion Mode is on, messages that are sent in your base language will be blurred while Pangea Bot translates them to your target language. Immersion Mode can be toggled in individual and course settings.";
    },
    get$bestCorrectionFeedback() {
      return "That's correct!";
    },
    get$distractorFeedback() {
      return "That's not quite right.";
    },
    get$bestAnswerFeedback() {
      return "That's correct!";
    },
    get$definitionDefaultPrompt() {
      return "What does this word mean?";
    },
    get$practiceDefaultPrompt() {
      return "What is the best answer?";
    },
    get$correctionDefaultPrompt() {
      return "What is the best replacement?";
    },
    get$reportToTeacher() {
      return "Who do you want to report this message to?";
    },
    reportMessageTitle$3(reportingUserId, reportedUserId, roomName) {
      return reportingUserId + " has reported a message from " + reportedUserId + " in the chat " + roomName;
    },
    reportMessageBody$2(reportedMessage, reason) {
      return "Message: " + reportedMessage + "\nReason: " + reason;
    },
    get$noTeachersFound() {
      return "No teachers found to report to";
    },
    trialExpiration$1(expiration) {
      return "Your free trial expires on " + expiration;
    },
    get$freeTrialDesc() {
      return "New users recieve a one week free trial of Pangea Chat";
    },
    get$activateTrial() {
      return "Free 7-Day Trial";
    },
    get$successfullySubscribed() {
      return "You have successfully subscribed!";
    },
    get$clickToManageSubscription() {
      return "Click here to manage your subscription.";
    },
    pleaseChooseAtLeastChars$1(min) {
      return "Please choose at least " + min + " characters.";
    },
    get$pleaseEnterValidEmail() {
      return "Please enter a valid email address.";
    },
    get$pleaseChooseAUsername() {
      return "Please choose a username";
    },
    get$listen() {
      return "Listen";
    },
    get$trialPeriodExpired() {
      return "Your trial period has expired";
    },
    get$subscribedToUnlockTools() {
      return "Subscribe to unlock interactive translation and grammar checking, audio playback, personalized practice activities, and learning analytics!";
    },
    get$translationTooltip() {
      return "Translate";
    },
    get$speechToTextTooltip() {
      return "Transcript";
    },
    get$kickBotWarning() {
      return "Kicking Pangea Bot will remove the conversation bot from this chat.";
    },
    get$refresh(_) {
      return "Refresh";
    },
    get$updatePhoneOS() {
      return "You may need to update your device's OS version.";
    },
    get$autoIGCToolName() {
      return "Run Pangea writing assistance automatically";
    },
    get$autoIGCToolDescription() {
      return "Automatically run Pangea Chat grammar and translation writing assistance before sending my message.";
    },
    get$tooltipInstructionsTitle() {
      return "Not sure what that does?";
    },
    get$tooltipInstructionsBrowserBody() {
      return "Hover over items to view tooltips.";
    },
    get$chatCapacity() {
      return "Chat capacity";
    },
    get$roomFull() {
      return "This room is already at capacity.";
    },
    get$chatCapacityHasBeenChanged() {
      return "Chat capacity changed";
    },
    chatCapacitySetTooLow$1(count) {
      return "Chat capacity must be at least " + count + ".";
    },
    get$chatCapacityExplanation() {
      return "Chat capacity limits the number of members allowed in a chat.";
    },
    get$enterNumber() {
      return "Please enter a whole number value.";
    },
    get$buildTranslation() {
      return "Build your translation from the choices above";
    },
    get$practice() {
      return "Practice";
    },
    get$noLanguagesSet() {
      return "No languages set";
    },
    get$speechToTextBody() {
      return "For voice messages, you can see a transcript as well as the speaker's Words Per Minute score.";
    },
    get$versionNotFound() {
      return "Version Not Found";
    },
    get$fetchingVersion() {
      return "Fetching version...";
    },
    get$versionFetchError() {
      return "Error fetching version";
    },
    versionText$2(version, buildNumber) {
      return "Version: " + version + "+" + buildNumber;
    },
    get$l1TranslationBody() {
      return "Messages in your base language will not be translated.";
    },
    get$deleteSubscriptionWarningTitle() {
      return "You have an active subscription";
    },
    get$deleteSubscriptionWarningBody() {
      return "Deleting your account will not automatically cancel your subscription.";
    },
    get$manageSubscription() {
      return "Manage Subscription";
    },
    get$error520Title() {
      return "Please try again.";
    },
    get$error520Desc() {
      return "Sorry, we could not understand your message...";
    },
    get$level(_) {
      return "Level";
    },
    get$translationChoicesBody() {
      return "Click and hold an option for a hint.";
    },
    get$grammar() {
      return "Grammar";
    },
    get$contactHasBeenInvitedToTheChat() {
      return "Contact has been invited to the chat";
    },
    get$inviteChat() {
      return "\ud83d\udce8 Invite chat";
    },
    get$chatName() {
      return "Chat name";
    },
    get$clickTheWordAgainToDeselect() {
      return "Click the selected word to deselect it.";
    },
    get$l2SupportNa() {
      return "Not Available";
    },
    get$l2SupportAlpha() {
      return "Alpha";
    },
    get$l2SupportBeta() {
      return "Beta";
    },
    get$l2SupportFull() {
      return "Full";
    },
    get$missingVoiceTitle() {
      return "Missing voice";
    },
    get$voiceNotAvailable() {
      return "You don't have a voice installed for this language.";
    },
    get$playAudio() {
      return "Play";
    },
    get$stop(_) {
      return "Stop";
    },
    get$grammarCopyPOSsconj() {
      return "Subordinating Conjunction";
    },
    get$grammarCopyPOSnum() {
      return "Number";
    },
    get$grammarCopyPOSverb() {
      return "Verb";
    },
    get$grammarCopyPOSaffix() {
      return "Affix";
    },
    get$grammarCopyPOSpart() {
      return "Particle";
    },
    get$grammarCopyPOSadj() {
      return "Adjective";
    },
    get$grammarCopyPOScconj() {
      return "Coordinating Conjunction";
    },
    get$grammarCopyPOSpunct() {
      return "Punctuation";
    },
    get$grammarCopyPOSadv() {
      return "Adverb";
    },
    get$grammarCopyPOSaux() {
      return "Auxiliary";
    },
    get$grammarCopyPOSspace() {
      return "Space";
    },
    get$grammarCopyPOSsym() {
      return "Symbol";
    },
    get$grammarCopyPOSdet() {
      return "Determiner";
    },
    get$grammarCopyPOSpron() {
      return "Pronoun";
    },
    get$grammarCopyPOSadp() {
      return "Adposition";
    },
    get$grammarCopyPOSpropn() {
      return "Proper Noun";
    },
    get$grammarCopyPOSnoun() {
      return "Noun";
    },
    get$grammarCopyPOSintj() {
      return "Interjection";
    },
    get$grammarCopyPOSx() {
      return "Other";
    },
    get$grammarCopyGENDERfem() {
      return "Feminine";
    },
    get$grammarCopyPERSON2() {
      return "Second Person";
    },
    get$grammarCopyMOODimp() {
      return "Imperative";
    },
    get$grammarCopyPUNCTTYPEqest() {
      return "Question";
    },
    get$grammarCopyASPECTperf() {
      return "Perfect";
    },
    get$grammarCopyCASEaccnom() {
      return "Accusative, Nominative";
    },
    get$grammarCopyCASEobl() {
      return "Oblique";
    },
    get$grammarCopyVOICEact() {
      return "Active";
    },
    get$grammarCopyPUNCTTYPEbrck() {
      return "Bracket";
    },
    get$grammarCopyNOUNTYPEart() {
      return "Article";
    },
    get$grammarCopyNUMBERsing() {
      return "Singular";
    },
    get$grammarCopyGENDERmasc() {
      return "Masculine";
    },
    get$grammarCopyVERBTYPEmod() {
      return "Modal";
    },
    get$grammarCopyADVTYPEadverbial() {
      return "Adverbial";
    },
    get$grammarCopyTENSEperi() {
      return "Periphrastic";
    },
    get$grammarCopyNUMFORMdigit() {
      return "Digit";
    },
    get$grammarCopyNOUNTYPEnot_proper() {
      return "Not Proper";
    },
    get$grammarCopyNUMTYPEcard() {
      return "Cardinal";
    },
    get$grammarCopyNOUNTYPEprop() {
      return "Proper";
    },
    get$grammarCopyPUNCTTYPEdash() {
      return "Dash";
    },
    get$grammarCopyPUNCTTYPEyes() {
      return "Yes";
    },
    get$grammarCopyPUNCTTYPEsemi() {
      return "Semicolon";
    },
    get$grammarCopyPUNCTTYPEcomm() {
      return "Comma";
    },
    get$grammarCopyMOODcnd() {
      return "Conditional";
    },
    get$grammarCopyCASEacc() {
      return "Accusative";
    },
    get$grammarCopyPARTTYPEpart() {
      return "Partitive";
    },
    get$grammarCopyTENSEpast() {
      return "Past";
    },
    get$grammarCopyDEGREEsup() {
      return "Superlative";
    },
    get$grammarCopyPUNCTTYPEcolo() {
      return "Colon";
    },
    get$grammarCopyPERSON3() {
      return "Third Person";
    },
    get$grammarCopyNUMBERplur() {
      return "Plural";
    },
    get$grammarCopyPRONTYPEnpr() {
      return "Proper Noun";
    },
    get$grammarCopyPRONTYPEinterrogative() {
      return "Interrogative";
    },
    get$grammarCopyPOLITEinfm() {
      return "Informal";
    },
    get$grammarCopyADVTYPEtim() {
      return "Time";
    },
    get$grammarCopyPOLARITYneg() {
      return "Negative";
    },
    get$grammarCopyNUMTYPEtot() {
      return "Total";
    },
    get$grammarCopyADVTYPEadnomial() {
      return "Adnominal";
    },
    get$grammarCopyASPECTprog() {
      return "Progressive";
    },
    get$grammarCopyMOODsub() {
      return "Subjunctive";
    },
    get$grammarCopyVERBFORMcomplementive() {
      return "Complementive";
    },
    get$grammarCopyCASEnom() {
      return "Nominative";
    },
    get$grammarCopyTENSEfut() {
      return "Future";
    },
    get$grammarCopyCASEdat() {
      return "Dative";
    },
    get$grammarCopyTENSEpres() {
      return "Present";
    },
    get$grammarCopyGENDERneut() {
      return "Neuter";
    },
    get$grammarCopyPRONTYPErel() {
      return "Relative";
    },
    get$grammarCopyVERBFORMfinalEnding() {
      return "Final Ending";
    },
    get$grammarCopyPRONTYPEdem() {
      return "Demonstrative";
    },
    get$grammarCopyPREPCASEpre() {
      return "Prepositional";
    },
    get$grammarCopyVERBFORMfin() {
      return "Finite";
    },
    get$grammarCopyDEGREEpos() {
      return "Positive";
    },
    get$grammarCopyPUNCTTYPEquot() {
      return "Quotation";
    },
    get$grammarCopyVERBFORMger() {
      return "Gerund";
    },
    get$grammarCopyVOICEpass() {
      return "Passive";
    },
    get$grammarCopyCASEgen() {
      return "Genitive";
    },
    get$grammarCopyTENSEprs() {
      return "Present";
    },
    get$grammarCopyDEFINITEdef() {
      return "Definite";
    },
    get$grammarCopyNUMTYPEord() {
      return "Ordinal";
    },
    get$grammarCopyCASEins() {
      return "Instrumental";
    },
    get$grammarCopyVERBFORMinf() {
      return "Infinitive";
    },
    get$grammarCopyVERBFORMaux() {
      return "Auxiliary";
    },
    get$grammarCopyNUMFORMlong() {
      return "Long";
    },
    get$grammarCopyCASEloc() {
      return "Locative";
    },
    get$grammarCopyMOODind() {
      return "Indicative";
    },
    get$grammarCopyDEGREEcmp() {
      return "Comparative";
    },
    get$grammarCopyCASErelativeCase() {
      return "Relative";
    },
    get$grammarCopyPUNCTTYPEexcl() {
      return "Exclamative";
    },
    get$grammarCopyPERSON1() {
      return "First Person";
    },
    get$grammarCopyPUNCTSIDEini() {
      return "Initial";
    },
    get$grammarCopyGENDERperson() {
      return "Person";
    },
    get$grammarCopyFOREIGNyes() {
      return "Foreign";
    },
    get$grammarCopyVOICEvoice() {
      return "Voice";
    },
    get$grammarCopyVERBTYPEverbType() {
      return "Verb";
    },
    get$grammarCopyPOSSpass() {
      return "Possessive";
    },
    get$grammarCopyPREPCASEprepCase() {
      return "Prepositional";
    },
    get$grammarCopyNUMTYPEnumType() {
      return "Numeral";
    },
    get$grammarCopyNOUNTYPEnounType() {
      return "Noun";
    },
    get$grammarCopyREFLEXreflex() {
      return "Reflexive";
    },
    get$grammarCopyPRONTYPEpronType() {
      return "Pronoun";
    },
    get$grammarCopyPUNCTSIDEpunctSide() {
      return "Punctuation Side";
    },
    get$grammarCopyVERBFORMverbForm() {
      return "Verb";
    },
    get$grammarCopyGENDERgender() {
      return "Gender";
    },
    get$grammarCopyMOODmood() {
      return "Mood";
    },
    get$grammarCopyASPECTaspect() {
      return "Aspect";
    },
    get$grammarCopyPUNCTTYPEpunctType() {
      return "Punctuation";
    },
    get$grammarCopyTENSEtense() {
      return "Tense";
    },
    get$grammarCopyDEGREEdegree() {
      return "Degree";
    },
    get$grammarCopyPOLITEpolite() {
      return "Politeness";
    },
    get$grammarCopyADVTYPEadvType() {
      return "Adverb";
    },
    get$grammarCopyNUMFORMnumber() {
      return "Number";
    },
    get$grammarCopyCONJTYPEconjType() {
      return "Conjunction";
    },
    get$grammarCopyPOLARITYpolarity() {
      return "Polarity";
    },
    get$grammarCopyCASEcase() {
      return "Case";
    },
    get$grammarCopyDEFINITEdefinite() {
      return "Definiteness";
    },
    get$grammarCopyNUMFORMnumForm() {
      return "Numeral";
    },
    get$grammarCopyPRONTYPEadn() {
      return "Adnominal";
    },
    get$grammarCopyVOCvoc() {
      return "Vocative";
    },
    get$grammarCopyCMPLcmpl() {
      return "Complementizer";
    },
    get$grammarCopyADVadv() {
      return "Adverbial";
    },
    get$grammarCopyMOODjus() {
      return "Jussive";
    },
    get$grammarCopyGENDERcom() {
      return "Common";
    },
    get$grammarCopyREFLEXrflx() {
      return "Reflexive";
    },
    get$grammarCopyPARTTYPEpar() {
      return "Partitive";
    },
    get$grammarCopySPCspc() {
      return "Specific";
    },
    get$grammarCopyTENSEpqp() {
      return "Pluperfect";
    },
    get$grammarCopyREFLEXref() {
      return "Reflexive";
    },
    get$grammarCopyPUNCTTYPEnshrt() {
      return "Short";
    },
    get$grammarCopyNUMBERdual() {
      return "Dual";
    },
    get$grammarCopyNUMFORMlng() {
      return "Long";
    },
    get$grammarCopyVOICEmid() {
      return "Middle";
    },
    get$grammarCopyINTRELintRel() {
      return "Interrogative, Relative";
    },
    get$grammarCopyINTint() {
      return "Interrogative";
    },
    get$grammarCopyVOICEcaus() {
      return "Causative";
    },
    get$grammarCopyUnknown() {
      return "Unknown";
    },
    get$grammarCopyEVIDENTevident() {
      return "Evidentiality";
    },
    get$grammarCopyNUMFORMnumberPsor() {
      return "Possessor's Number";
    },
    get$grammarCopyASPECThab() {
      return "Habitual";
    },
    get$grammarCopyCASEabl() {
      return "Ablative";
    },
    get$grammarCopyCASEall() {
      return "Allative";
    },
    get$grammarCopyCASEess() {
      return "Essive";
    },
    get$grammarCopyCASEtra() {
      return "Translative";
    },
    get$grammarCopyCASEequ() {
      return "Equative";
    },
    get$grammarCopyCASEdis() {
      return "Distributive";
    },
    get$grammarCopyCASEabs() {
      return "Absolutive";
    },
    get$grammarCopyCASEerg() {
      return "Ergative";
    },
    get$grammarCopyCASEcau() {
      return "Causal";
    },
    get$grammarCopyCASEben() {
      return "Benefactive";
    },
    get$grammarCopyCASEtem() {
      return "Temporal";
    },
    get$grammarCopyCONJTYPEcoord() {
      return "Coordinating";
    },
    get$grammarCopyDEFINITEcons() {
      return "Construct State";
    },
    get$grammarCopyDEGREEabs() {
      return "Absolute Degree";
    },
    get$grammarCopyEVIDENTfh() {
      return "Factual Evidentiality";
    },
    get$grammarCopyEVIDENTnfh() {
      return "Non-factual Evidentiality";
    },
    get$grammarCopyMOODopt() {
      return "Optative";
    },
    get$grammarCopyMOODadm() {
      return "Admirative";
    },
    get$grammarCopyMOODdes() {
      return "Desiderative";
    },
    get$grammarCopyMOODnec() {
      return "Necessitative";
    },
    get$grammarCopyMOODpot() {
      return "Potential";
    },
    get$grammarCopyMOODprp() {
      return "Propositive";
    },
    get$grammarCopyMOODqot() {
      return "Quotative";
    },
    get$grammarCopyNUMFORMword() {
      return "Word Form";
    },
    get$grammarCopyNUMFORMroman() {
      return "Roman Numeral";
    },
    get$grammarCopyNUMFORMletter() {
      return "Letter Form";
    },
    get$grammarCopyNUMTYPEmult() {
      return "Multiplicative";
    },
    get$grammarCopyNUMTYPEfrac() {
      return "Fractional";
    },
    get$grammarCopyNUMTYPEsets() {
      return "Set";
    },
    get$grammarCopyNUMTYPErange() {
      return "Range";
    },
    get$grammarCopyNUMTYPEdist() {
      return "Distributive";
    },
    get$grammarCopyNUMBERtri() {
      return "Trial";
    },
    get$grammarCopyNUMBERpauc() {
      return "Paucal";
    },
    get$grammarCopyNUMBERgrpa() {
      return "Greater Paucal";
    },
    get$grammarCopyNUMBERgrpl() {
      return "Greater Plural";
    },
    get$grammarCopyNUMBERinv() {
      return "Inverse";
    },
    get$grammarCopyPERSON0() {
      return "Zero";
    },
    get$grammarCopyPERSON4() {
      return "Fourth";
    },
    get$grammarCopyPOLITEform() {
      return "Formal";
    },
    get$grammarCopyPOLITEelev() {
      return "Elevated";
    },
    get$grammarCopyPOLITEhumb() {
      return "Humble";
    },
    get$grammarCopyPRONTYPEemp() {
      return "Emphatic";
    },
    get$grammarCopyPRONTYPEexc() {
      return "Exclamative";
    },
    get$grammarCopyPRONTYPErcp() {
      return "Reciprocal";
    },
    get$grammarCopyPRONTYPEintRelPronType() {
      return "Interrogative-Relative";
    },
    get$grammarCopyTENSEaor() {
      return "Aorist";
    },
    get$grammarCopyTENSEeps() {
      return "Epistemic";
    },
    get$grammarCopyTENSEprosp() {
      return "Prospective";
    },
    get$grammarCopyVERBFORMpart() {
      return "Participle";
    },
    get$grammarCopyVERBFORMconv() {
      return "Converb";
    },
    get$grammarCopyVERBFORMvnoun() {
      return "Verbal Noun";
    },
    get$grammarCopyVOICEantip() {
      return "Antipassive";
    },
    get$grammarCopyVOICEcauVoice() {
      return "Causative";
    },
    get$grammarCopyVOICedir() {
      return "Direct";
    },
    get$grammarCopyVOICEinvVoice() {
      return "Inverse";
    },
    get$grammarCopyVOICErcpVoice() {
      return "Reciprocal";
    },
    get$grammarCopyPOS() {
      return "Part of Speech";
    },
    get$grammarCopyGENDER() {
      return "Gender";
    },
    get$grammarCopyPERSON() {
      return "Person";
    },
    get$grammarCopyMOOD() {
      return "Mood";
    },
    get$grammarCopyPUNCTTYPE() {
      return "Punctuation Type";
    },
    get$grammarCopyASPECT() {
      return "Aspect";
    },
    get$grammarCopyCASE() {
      return "Case";
    },
    get$grammarCopyVOICE() {
      return "Voice";
    },
    get$grammarCopyNOUNTYPE() {
      return "Noun Type";
    },
    get$grammarCopyVERBTYPE() {
      return "Verb Type";
    },
    get$grammarCopyADVTYPE() {
      return "Adverb Type";
    },
    get$grammarCopyNUMFORM() {
      return "Numeral Form";
    },
    get$grammarCopyNUMTYPE() {
      return "Numeral Type";
    },
    get$grammarCopyNUMBER() {
      return "Number";
    },
    get$grammarCopyDEFINITE() {
      return "Definiteness";
    },
    get$grammarCopyDEGREE() {
      return "Degree";
    },
    get$grammarCopyEVIDENT() {
      return "Evidentiality";
    },
    get$grammarCopyFOREIGN() {
      return "Foreign";
    },
    get$grammarCopyPOLARITY() {
      return "Polarity";
    },
    get$grammarCopyPOLITE() {
      return "Politeness";
    },
    get$grammarCopyPREPCASE() {
      return "Prepositional Case";
    },
    get$grammarCopyPRONTYPE() {
      return "Pronoun Type";
    },
    get$grammarCopyPUNCTSIDE() {
      return "Punctuation Side";
    },
    get$grammarCopyREFLEX() {
      return "Reflexive";
    },
    get$grammarCopyTENSE() {
      return "Tense";
    },
    get$grammarCopyVERBFORM() {
      return "Verb Form";
    },
    get$grammarCopyCONJTYPE() {
      return "Conjunction Type";
    },
    get$grammarCopyUNKNOWN() {
      return "Unknown";
    },
    get$grammarCopyNUMBERPSOR() {
      return "Possessor's Number";
    },
    get$grammarCopyPOSS() {
      return "Possessive";
    },
    get$grammarCopyASPECTimp() {
      return "Imperfective Aspect";
    },
    get$grammarCopyCASEvoc() {
      return "Vocative";
    },
    get$grammarCopyCASEcom() {
      return "Comitative";
    },
    get$grammarCopyCASEpar() {
      return "Partitive";
    },
    get$grammarCopyCASEadv() {
      return "Adverbial";
    },
    get$grammarCopyCASEref() {
      return "Referential";
    },
    get$grammarCopyCASErel() {
      return "Relative";
    },
    get$grammarCopyCASEsub() {
      return "Subessive";
    },
    get$grammarCopyCASEsup() {
      return "Superessive";
    },
    get$grammarCopyCASEaccdat() {
      return "Accusative-Dative";
    },
    get$grammarCopyCASEpre() {
      return "Prepositional";
    },
    get$grammarCopyCONJTYPEsub() {
      return "Subordinating";
    },
    get$grammarCopyCONJTYPEcmp() {
      return "Comparative";
    },
    get$grammarCopyDEFINITEind() {
      return "Indefinite";
    },
    get$grammarCopyMOODint() {
      return "Interrogative Mood";
    },
    get$grammarCopyNOUNTYPEcomm() {
      return "Common Noun";
    },
    get$grammarCopyNUMBERPSORsing() {
      return "Possessor's Singular";
    },
    get$grammarCopyNUMBERPSORplur() {
      return "Possessor's Plural";
    },
    get$grammarCopyNUMBERPSORdual() {
      return "Possessor's Dual";
    },
    get$grammarCopyPOLARITYpos() {
      return "Positive Polarity";
    },
    get$grammarCopyPOSSyes() {
      return "Possessive";
    },
    get$grammarCopyPREPCASEnpr() {
      return "Non-prepositional";
    },
    get$grammarCopyPRONTYPEprs() {
      return "Personal";
    },
    get$grammarCopyPRONTYPEint() {
      return "Interrogative";
    },
    get$grammarCopyPRONTYPEtot() {
      return "Total";
    },
    get$grammarCopyPRONTYPEneg() {
      return "Negative";
    },
    get$grammarCopyPRONTYPEart() {
      return "Article";
    },
    get$grammarCopyPRONTYPEind() {
      return "Indefinite";
    },
    get$grammarCopyPRONTYPEintrel() {
      return "Interrogative-Relative";
    },
    get$grammarCopyPUNCTSIDEfin() {
      return "Final Punctuation";
    },
    get$grammarCopyPUNCTTYPEperi() {
      return "Period";
    },
    get$grammarCopyREFLEXyes() {
      return "Reflexive";
    },
    get$grammarCopyTENSEimp() {
      return "Imperfect";
    },
    get$grammarCopyVERBFORMsup() {
      return "Supine";
    },
    get$grammarCopyVERBFORMadn() {
      return "Adnominal";
    },
    get$grammarCopyVERBFORMlng() {
      return "Long";
    },
    get$grammarCopyVERBFORMshrt() {
      return "Short";
    },
    get$grammarCopyVERBTYPEcaus() {
      return "Causative Verb";
    },
    get$grammarCopyVOICEcau() {
      return "Causative";
    },
    get$grammarCopyVOICEdir() {
      return "Direct";
    },
    get$grammarCopyVOICEinv() {
      return "Inverse";
    },
    get$grammarCopyVOICErcp() {
      return "Reciprocal";
    },
    get$other() {
      return "Other";
    },
    levelShort$1(level) {
      return "LVL " + level;
    },
    get$clickBestOption() {
      return "Choose the best options to translate your message!";
    },
    get$completeActivitiesToUnlock() {
      return "Complete at least one activity to unlock the translation!";
    },
    get$downloadGroupText() {
      return "Download group text";
    },
    get$notificationsOn() {
      return "Notifications on";
    },
    get$notificationsOff() {
      return "Notifications off";
    },
    get$createChatAndInviteUsers() {
      return "Create chat and invite users";
    },
    get$updatedNewSpaceDescription() {
      return "Courses allow you to consolidate your chats and build private or public communities.";
    },
    get$updateNow() {
      return "Update Now";
    },
    get$updateLater() {
      return "Later";
    },
    get$constructUseWaDesc() {
      return "Used without help";
    },
    get$constructUseGaDesc() {
      return "Grammar assistance";
    },
    get$constructUseTaDesc() {
      return "Translation assistance";
    },
    get$constructUseUnkDesc() {
      return "Unknown";
    },
    get$constructUseCorITDesc() {
      return "Correct in translation";
    },
    get$constructUseIgnITDesc() {
      return "Ignored in translation";
    },
    get$constructUseIncITDesc() {
      return "Incorrect in translation";
    },
    get$constructUseIgnIGCDesc() {
      return "Ignored in grammar correction";
    },
    get$constructUseCorIGCDesc() {
      return "Correct in grammar correction";
    },
    get$constructUseIncIGCDesc() {
      return "Incorrect in grammar correction";
    },
    get$constructUseCorPADesc() {
      return "Correct in word meaning activity";
    },
    get$constructUseIgnPADesc() {
      return "Ignored in word meaning activity";
    },
    get$constructUseIncPADesc() {
      return "Incorrect in word meaning activity";
    },
    get$constructUseCorWLDesc() {
      return "Correct in word listening activity";
    },
    get$constructUseIncWLDesc() {
      return "Incorrect in word listening activity";
    },
    get$constructUseIngWLDesc() {
      return "Ignored in word listening activity";
    },
    get$constructUseCorHWLDesc() {
      return "Correct in hidden word activity";
    },
    get$constructUseIncHWLDesc() {
      return "Incorrect in hidden word activity";
    },
    get$constructUseIgnHWLDesc() {
      return "Ignored in hidden word activity";
    },
    get$constructUseCorLDesc() {
      return "Correct in lemma activity";
    },
    get$constructUseIncLDesc() {
      return "Incorrect in lemma activity";
    },
    get$constructUseIgnLDesc() {
      return "Ignored in lemma activity";
    },
    get$constructUseCorMDesc() {
      return "Correct in grammar activity";
    },
    get$constructUseIncMDesc() {
      return "Incorrect in grammar activity";
    },
    get$constructUseIgnMDesc() {
      return "Ignored in grammar activity";
    },
    get$constructUseEmojiDesc() {
      return "Correct in emoji activity";
    },
    get$constructUseCollected() {
      return "Collected in chat";
    },
    get$constructUseNanDesc() {
      return "Not applicable";
    },
    xpIntoLevel$2(currentXP, maxXP) {
      return "" + currentXP + " / " + maxXP + " XP";
    },
    get$enableTTSToolName() {
      return "Enabled text-to-speech";
    },
    get$enableTTSToolDescription() {
      return "Allow the app to generate text-to-speech output for portions of text in your target language.";
    },
    get$yourUsername() {
      return "Your username";
    },
    get$yourEmail() {
      return "Your email";
    },
    get$iWantToLearn() {
      return "I want to learn";
    },
    get$pleaseEnterEmail() {
      return "Please enter a valid email address.";
    },
    get$myBaseLanguage() {
      return "My base language";
    },
    get$meaningSectionHeader() {
      return "Meaning:";
    },
    get$formSectionHeader() {
      return "Forms used in chats:";
    },
    get$writingExercisesTooltip() {
      return "Writing";
    },
    get$listeningExercisesTooltip() {
      return "Listening";
    },
    get$readingExercisesTooltip() {
      return "Reading";
    },
    get$meaningNotFound() {
      return "Meaning could not be found.";
    },
    get$chooseBaseForm() {
      return "Choose the base form";
    },
    get$notTheCodeError() {
      return "Sorry, that's not the code!";
    },
    get$totalXP() {
      return "Total XP";
    },
    get$numLemmas() {
      return "Total number of lemmas";
    },
    get$numLemmasUsedCorrectly() {
      return "Number of lemmas used correctly at least once";
    },
    get$numLemmasUsedIncorrectly() {
      return "Number of lemmas used correctly 0 times";
    },
    get$numLemmasSmallXP() {
      return "Number of lemmas with 0 - 30 XP";
    },
    get$numLemmasMediumXP() {
      return "Number of lemmas with 31 - 200 XP";
    },
    get$numLemmasLargeXP() {
      return "Number of lemmas with > 200 XP";
    },
    get$numGrammarConcepts() {
      return "Number of grammar concepts";
    },
    get$listGrammarConcepts() {
      return "Grammar concepts";
    },
    get$listGrammarConceptsUsedCorrectly() {
      return "Grammar concepts used correctly in original messages at least 80% of the time";
    },
    get$listGrammarConceptsUsedIncorrectly() {
      return "Grammar concepts used correctly in original messages less than 80% of the time";
    },
    get$listGrammarConceptsUseCorrectlySystemGenerated() {
      return "Grammar concepts chosen correctly from system-generated suggestions at least 80% of the time";
    },
    get$listGrammarConceptsUseIncorrectlySystemGenerated() {
      return "Grammar concepts chosen correctly from system-generated suggestions less than 80% of the time";
    },
    get$listGrammarConceptsSmallXP() {
      return "Grammar concepts with 0-50 xp";
    },
    get$listGrammarConceptsMediumXP() {
      return "Grammar concepts with 51-200 xp";
    },
    get$listGrammarConceptsLargeXP() {
      return "Grammar concepts 201-500 xp";
    },
    get$listGrammarConceptsHugeXP() {
      return "Grammar concepts >500 xp";
    },
    get$numMessagesSent() {
      return "Number of messages sent";
    },
    get$numWordsTyped() {
      return "Number of words typed in original messages";
    },
    get$numCorrectChoices() {
      return "Number of correct words chosen from system-generated suggestions";
    },
    get$numIncorrectChoices() {
      return "Number of incorrect words chosen from system-generated suggestions";
    },
    get$commaSeparatedFile() {
      return "CSV";
    },
    get$excelFile() {
      return "Excel";
    },
    get$fileType() {
      return "File type";
    },
    get$download(_) {
      return "Download";
    },
    get$analyticsNotAvailable() {
      return "User analytics not available";
    },
    get$downloading() {
      return "Downloading...";
    },
    get$failedFetchUserAnalytics() {
      return "Failed to download user analytics";
    },
    get$downloadComplete() {
      return "Download complete!";
    },
    whatIsTheMorphTag$2(morphologicalFeature, wordForm) {
      return "What is the " + morphologicalFeature + " of '" + wordForm + "'?";
    },
    get$dataAvailable() {
      return "Data availability";
    },
    get$available(_) {
      return "Available";
    },
    get$pangeaBotIsFallible() {
      return "Pangea Bot makes mistakes too!";
    },
    whatIsMeaning$2(lemma, partOfSpeech) {
      return "What does '" + lemma + "' mean?";
    },
    get$chooseLemmaMeaningInstructionsBody() {
      return "Match meanings with the words in the message!";
    },
    get$doubleClickToEdit() {
      return "Double-click to edit.";
    },
    get$targetLanguageLabel() {
      return "Target language";
    },
    get$cefrLevelLabel() {
      return "CEFR level";
    },
    get$image(_) {
      return "Image";
    },
    get$activityPlannerOverviewInstructionsBody() {
      return "Choose a topic, mode, learning objective and generate an activity for the chat!";
    },
    get$constructUsePvmDesc() {
      return "Produced in voice message";
    },
    get$leaveSpaceDescription() {
      return "By leaving the course, you will leave all of the chats within it. Other users will see that you have left the course.";
    },
    get$constructUseCorMmDesc() {
      return "Correct message meaning";
    },
    get$constructUseIncMmDesc() {
      return "Incorrect message meaning";
    },
    get$constructUseIgnMmDesc() {
      return "Ignored message meaning";
    },
    get$meaning() {
      return "Meaning";
    },
    chatWith$1(displayname) {
      return "Group with " + displayname;
    },
    get$clickOnEmailLink() {
      return "Please click on the link in the email and then proceed.\n\nCheck your spam folder if the email hasn't arrived.";
    },
    get$dontForgetPassword() {
      return "Don't forget your password!";
    },
    get$enableAutocorrectToolName() {
      return "Enable device autocorrect";
    },
    get$enableAutocorrectDescription() {
      return "If your device supports the language you're learning, you can enable device autocorrect to fix common errors as you type.";
    },
    get$ttsDisbledTitle() {
      return "Text-to-speech disabled";
    },
    get$ttsDisabledBody() {
      return "You can enable text-to-speech in your learning settings";
    },
    get$noSpaceDescriptionYet() {
      return "No course description created yet.";
    },
    get$tooLargeToSend() {
      return "This message is too large to send";
    },
    get$exitWithoutSaving() {
      return "Are you sure you want to leave without saving?";
    },
    get$enableAutocorrectWarning() {
      return "Warning! Requires adding your target language keyboard";
    },
    get$leaveRoomDescription() {
      return "You're about to leave this chat. Other users will see that you have left the chat.";
    },
    get$confirmUserId() {
      return "Please confirm your Pangea Chat username in order to delete your account.";
    },
    paidSubscriptionStarts$1(startDate) {
      return "Starting " + startDate;
    },
    get$cancelInSubscriptionSettings() {
      return "\u2022 Cancel at any time in subscription settings";
    },
    get$autocorrectNotAvailable() {
      return "Unfortunately your platform is not currently supported for this feature. Stay tuned for further development!";
    },
    get$pleaseUpdateApp() {
      return "Please update the app to continue.";
    },
    get$chooseEmojiInstructionsBody() {
      return "Match emojis with the words they best represent. Don't worry! No points off for disagreeing. \ud83d\ude05";
    },
    get$analyticsVocabListBody() {
      return "This is all your vocabulary! As you earn XP for each word, they'll go from seedling to full bloom. Click on any word to see more details.";
    },
    get$morphAnalyticsListBody() {
      return "These are all the grammar concepts in the language you're learning! You'll unlock them as you encounter them while chatting. Click for details.";
    },
    get$knockSpaceSuccess() {
      return "You have requested to join this course! An admin will respond to your request when they receive it \ud83d\ude00";
    },
    get$chooseWordAudioInstructionsBody() {
      return "Listen to the complete message. Then match the audios with the words.";
    },
    get$chooseMorphsInstructionsBody() {
      return "Click the puzzle pieces for grammar questions!";
    },
    get$home() {
      return "Home";
    },
    get$join(_) {
      return "Join";
    },
    get$readingAssistanceOverviewBody() {
      return "Click the buttons below for mini-games on matching emojis, audios, word meanings, and grammar concepts. Or click on any word for details.";
    },
    get$resetInstructionTooltipsTitle() {
      return "Reset instruction tooltips";
    },
    get$resetInstructionTooltipsDesc() {
      return "Click to show instruction tooltips like for a brand new user.";
    },
    get$selectForGrammar() {
      return "Select a grammar icon for activities and details.";
    },
    get$translationProblem() {
      return "Translation problem";
    },
    get$niceJob() {
      return "Nice job!";
    },
    get$askToJoin() {
      return "Ask to join";
    },
    get$emptyChatWarningTitle() {
      return "Chat is empty";
    },
    get$emptyChatWarningDesc() {
      return "You haven't invited anyone to your chat. Go to Chat settings to invite your contacts or the Bot. You can also do this later.";
    },
    get$areYouLikeMe() {
      return "Are you like me?";
    },
    get$tryAgainLater() {
      return "Too many attempts made. Please try again in 5 minutes.";
    },
    get$enterSpaceCode() {
      return "Enter course code";
    },
    get$shareSpaceLink() {
      return "Share link";
    },
    get$byUsingPangeaChat() {
      return "By using Pangea Chat, I agree to the ";
    },
    get$details(_) {
      return "Details";
    },
    get$languageLevelPreA1Desc() {
      return "I have never learned or used the language.";
    },
    get$languageLevelA1Desc() {
      return "I can understand and use some familiar everyday expressions and very basic phrases.";
    },
    get$languageLevelA2Desc() {
      return "I can understand sentences and frequently used expressions related to areas of immediate relevance.";
    },
    get$languageLevelB1Desc() {
      return "I can deal with most familiar situations and can produce simple connected text on familiar topics.";
    },
    get$languageLevelB2Desc() {
      return "I can understand the mains ideas of complex texts and interact with a degree of fluency and spontaneity.";
    },
    get$languageLevelC1Desc() {
      return "I can express ideas fluently and spontaneously without much struggle and understand a wide range of demanding texts.";
    },
    get$languageLevelC2Desc() {
      return "I can understand virtually everything heard or read and express myself fluently and precisely.";
    },
    get$newVocab() {
      return "New vocab";
    },
    get$newGrammar() {
      return "New grammar concepts";
    },
    get$choosePracticeMode() {
      return "Click on one of the buttons above to start a practice activity";
    },
    get$ban() {
      return "Ban";
    },
    get$kick() {
      return "Kick";
    },
    get$lemma() {
      return "Lemma";
    },
    get$grammarFeature() {
      return "Grammar feature";
    },
    get$grammarTag() {
      return "Grammar tag";
    },
    get$forms() {
      return "Forms";
    },
    get$exampleMessages() {
      return "Example messages";
    },
    get$timesUsedIndependently() {
      return "Times used independently";
    },
    get$timesUsedWithAssistance() {
      return "Times used with assistance";
    },
    shareInviteCode$1(code) {
      return "Share invite code: " + code;
    },
    get$permissions(_) {
      return "Permissions";
    },
    get$spaceChildPermission() {
      return "Who can add new chats to this course";
    },
    get$addEnvironmentOverride() {
      return "Add environment override";
    },
    get$defaultOption() {
      return "Default";
    },
    get$deleteChatDesc() {
      return "Are you sure you want to delete this chat? It will be deleted for all participants and all messages within the chat will no longer be available for practice or learning analytics.";
    },
    get$deleteSpaceDesc() {
      return "The course and any selected chats will be deleted for all participants and all messages within the chat will no longer be available for practice or learning analytics. This action cannot be undone.";
    },
    get$configureSpace() {
      return "Configure course";
    },
    get$pinMessages() {
      return "Pin messages";
    },
    get$setJoinRules() {
      return "Set join rules";
    },
    get$changeGeneralSettings() {
      return "Change general settings";
    },
    get$inviteOtherUsersToRoom() {
      return "Invite other users";
    },
    get$changeTheNameOfTheSpace() {
      return "Change the name of the course";
    },
    get$changeTheDescription() {
      return "Change the description";
    },
    get$changeThePermissions() {
      return "Change the permissions";
    },
    get$introductions() {
      return "Introductions";
    },
    get$announcements() {
      return "Announcements";
    },
    get$activities() {
      return "Activities";
    },
    get$access() {
      return "Access";
    },
    get$howSpaceCanBeFound() {
      return "How this course can be found";
    },
    get$$private() {
      return "Private";
    },
    get$cannotBeFoundInSearch() {
      return "Cannot be found in search";
    },
    get$$public(_) {
      return "Public";
    },
    get$visibleToCommunity() {
      return 'Visible to the broader Pangea Chat community via "Find a course"';
    },
    get$howSpaceCanBeJoined() {
      return "How this course can be joined";
    },
    get$canBeFoundVia() {
      return "Can be found via:";
    },
    get$canBeFoundViaInvitation() {
      return "\u2022 invitation";
    },
    get$canBeFoundViaCodeOrLink() {
      return "\u2022 code or link";
    },
    get$canBeFoundViaKnock() {
      return "\u2022 request to join and admin approval";
    },
    get$youHaveLeveledUp() {
      return "You have leveled up!";
    },
    get$sendActivities() {
      return "Send activities";
    },
    get$directMessage() {
      return "Direct Message";
    },
    get$newDirectMessage() {
      return "New direct message";
    },
    get$speakingExercisesTooltip() {
      return "Speaking";
    },
    get$transcriptionFailed() {
      return "Failed to transcribe audio";
    },
    get$aUserIsKnocking() {
      return "1 user is requesting to join your course";
    },
    usersAreKnocking$1(users) {
      return "" + users + " users are requesting to join your course";
    },
    get$failedToFetchTranscription() {
      return "Failed to fetch transcription";
    },
    get$deleteEmptySpaceDesc() {
      return "The course will be deleted for all participants. This action cannot be undone.";
    },
    get$failedToPlayVideo() {
      return "Failed to play video";
    },
    get$done() {
      return "Done";
    },
    get$inThisSpace() {
      return "In this course";
    },
    get$myContacts() {
      return "My contacts";
    },
    get$inviteAllInSpace() {
      return "Invite all in this course";
    },
    get$spaceParticipantsHaveBeenInvitedToTheChat() {
      return "All course participants has been invited to the chat";
    },
    numKnocking$1(count) {
      return "" + count + " knocking";
    },
    numInvited$1(count) {
      return "" + count + " invited";
    },
    get$errorFetchingDefinition() {
      return "Failed to fetch definition";
    },
    get$errorProcessAnalytics() {
      return "Failed to process analytics";
    },
    get$errorDownloading() {
      return "Download failed";
    },
    get$errorFetchingLevelSummary() {
      return "Failed to fetch level summary";
    },
    get$errorLoadingSpaceChildren() {
      return "Failed to load chats within this course";
    },
    get$unexpectedError() {
      return "Unexpected error.";
    },
    get$pleaseReload() {
      return "Please reload and try again.";
    },
    get$translationError() {
      return "Translation error";
    },
    get$errorFetchingTranslation() {
      return "Failed to fetch translation";
    },
    get$errorFetchingActivity() {
      return "Failed to fetch activity";
    },
    get$check(_) {
      return "Check";
    },
    get$unableToFindRoom() {
      return "No chat or course found with that code. Please try again.";
    },
    get$numCompletedActivities() {
      return "Number of completed activities";
    },
    viewingAnalytics$2(visible, users) {
      return "Viewing " + visible + "/" + users + " Analytics";
    },
    get$request(_) {
      return "Request";
    },
    get$requestAll(_) {
      return "Request All";
    },
    get$confirmMessageUnpin() {
      return "Are you sure you want to unpin this message?";
    },
    get$pending(_) {
      return "Pending";
    },
    get$openRoleLabel() {
      return "OPEN";
    },
    joinedTheActivity$2(username, role) {
      return "\ud83d\udc4b " + username + " joined as " + role;
    },
    finishedTheActivity$1(username) {
      return "\ud83c\udfaf " + username + " wrapped up this activity";
    },
    get$endActivityTitle() {
      return "I'm done";
    },
    get$activitySummaryError() {
      return "Activity summaries unavailable";
    },
    get$requestSummaries() {
      return "Request summaries";
    },
    get$requestAccessTitle() {
      return "Request to analytics view access?";
    },
    get$requestAccessDesc() {
      return "Would you like to request access to view participant analytics?\n\nIf participants agree, admins of this course will be able to view their:\n    \u2022 total vocabulary\n    \u2022 total grammar concepts\n    \u2022 total activity sessions completed\n    \u2022 the specific grammar concepts used, correctly and incorrectly\n\nThey will not be able to view their:\n    \u2022 messages in chats outside the course\n    \u2022 vocabulary list";
    },
    get$analyticsInactiveTitle() {
      return "Requests to inactive users couldn\u2019t be sent";
    },
    get$analyticsInactiveDesc() {
      return "Inactive users who haven't logged in since this feature was introduced won't see your request.\n\nThe Request button will appear once they return. You can resend the request later by clicking the Request button under their name when it's available.";
    },
    get$accessRequestedTitle() {
      return "Analytics Access Request";
    },
    accessRequestedDesc$1(space) {
      return "The administrators of \u201c" + space + "\u201d are requesting to view your learning analytics.\n\nIf you agree, admins of this course will be able to view your:\n    \u2022 total vocabulary\n    \u2022 total grammar concepts\n    \u2022 total activity sessions completed\n    \u2022 the specific grammar concepts used, correctly and incorrectly\n\nThey will not be able to view your:\n    \u2022 messages in chats outside the course\n    \u2022 vocabulary list";
    },
    get$allowAccess() {
      return "Allow Access";
    },
    get$denyAccess() {
      return "Deny Access";
    },
    get$adminRequestedAccess() {
      return "Admins asked to view your analytics.";
    },
    lastUpdated$1(time) {
      return "Updated\n" + time;
    },
    get$activityFinishedMessage() {
      return "All Finished!";
    },
    get$endForAll() {
      return "End for all";
    },
    get$newCourse() {
      return "New course";
    },
    numModules$1(num) {
      return "" + num + " modules";
    },
    numActivityPlans$1(num) {
      return "" + num + " activity plans";
    },
    get$coursePlan() {
      return "Course Plan";
    },
    get$editCourseLater() {
      return "You can edit template title, descriptions, and course image later.";
    },
    get$newCourseAccess() {
      return "By default, courses are private and require admin approval to join. You can edit these settings at any time.";
    },
    get$createCourse() {
      return "Create course";
    },
    get$stats() {
      return "Stats";
    },
    get$createGroupChat() {
      return "Create group chat";
    },
    get$editCourse() {
      return "Edit course";
    },
    get$inviteDesc() {
      return "By username, by code or link";
    },
    get$editCourseDesc() {
      return "Here you can edit course title, description, etc.";
    },
    get$permissionsDesc() {
      return "Set permissions such as who can invite users, send messages, create chats, etc.";
    },
    get$accessDesc() {
      return "You can make your course open to the world! Or, make your course private and secure.";
    },
    get$createGroupChatDesc() {
      return "Whereas activity sessions start and end, group chats will stay open for routine communication.";
    },
    get$deleteDesc() {
      return "Only admins can delete a course. This is a destructive action which removes all users and deletes all selected chats within the course. Proceed with caution.";
    },
    get$noCourseFound() {
      return "Oh, this course needs a plan!\n\nCourse plans are a sequence of topics and conversation activities.";
    },
    additionalParticipants$1(num) {
      return "+ " + num + " others";
    },
    get$directMessages() {
      return "Direct Messages";
    },
    get$whatNow() {
      return "What now?";
    },
    get$chooseNextActivity() {
      return "Choose your next activity!";
    },
    get$letsGo() {
      return "Let's go";
    },
    get$chooseRole() {
      return "Choose a role!";
    },
    get$chooseRoleToParticipate() {
      return "Choose a role to participate!";
    },
    waitingToFillRole$1(num) {
      return "Waiting to fill " + num + " roles...";
    },
    get$pingParticipants() {
      return "Ping course participants";
    },
    get$playWithBot() {
      return "Play with Pangea Bot";
    },
    get$inviteFriendsToActivity() {
      return "Invite friends to activity";
    },
    get$inviteFriendsToActivityCourse() {
      return "Invite friends to activity and course";
    },
    get$waitNotDone() {
      return "Wait I\u2019m not done!";
    },
    get$waitingForOthersToFinish() {
      return "Waiting for the rest to finish up...";
    },
    get$saveToCompletedActivities() {
      return "Save to completed activities";
    },
    get$generatingSummary() {
      return "Analyzing chat and generating results";
    },
    get$findCourse() {
      return "Find a course";
    },
    get$activityCompletedDesc() {
      return "Your completed activity was added to analytics where you can review and practice the language you used.";
    },
    pingParticipantsNotification$2(user, room) {
      return user + " is looking for users to join the activity session in " + room;
    },
    get$courseName() {
      return "Course name";
    },
    get$createNewCourse() {
      return "New course";
    },
    get$publicCourses() {
      return "Public courses";
    },
    goToCourse$1(course) {
      return "Go to course: " + course;
    },
    get$startNewSession() {
      return "Start new session";
    },
    get$joinOpenSession() {
      return "Join open session";
    },
    get$activityNotFound() {
      return "Activity not found";
    },
    get$levelUp() {
      return "Level up";
    },
    get$myActivities() {
      return "My activities";
    },
    get$openToJoin() {
      return "Open to join";
    },
    get$activityDone() {
      return "Activity Done!";
    },
    get$promoCodeInfo() {
      return "Promo codes can be entered on the next page";
    },
    get$editsComingSoon() {
      return "The ability to edit cities and activities is coming soon.";
    },
    get$editing() {
      return "Editing";
    },
    get$activityNeedsOneMember() {
      return "Uh oh! This activity needs 1 more person.";
    },
    activityNeedsMembers$1(num) {
      return "Uh oh! This activity needs " + num + " more people.";
    },
    get$inviteFriendsToCourse() {
      return "Invite friends to my course";
    },
    get$subscribeToUnlockActivitySummaries() {
      return "Subscribe to unlock activity summaries";
    },
    get$subscribeToUnlockDefinitions() {
      return "Subscribe to unlock definitions";
    },
    get$subscribeToUnlockTranscriptions() {
      return "Subscribe to unlock transcriptions";
    },
    get$pingSent() {
      return "\ud83d\udd14 Course ping sent! \ud83d\udd14";
    },
    get$courseTitle() {
      return "Course title";
    },
    get$courseDesc() {
      return "Course description";
    },
    get$courseSavedSuccessfully() {
      return "Course saved successfully";
    },
    get$addCoursePlan() {
      return "Add a course plan";
    },
    get$activityStatsButtonInstruction() {
      return "Click here to view your activity stats and to close the activity when finished";
    },
    get$readingAnalyticsDesc() {
      return "Click practice on each message for reading activities.";
    },
    get$speakingAnalyticsDesc() {
      return "Record voice messages for speaking practice.";
    },
    get$audioAnalyticsDesc() {
      return "Click practice on each message for listening activities.";
    },
    get$loginToAccount() {
      return "Login to my account";
    },
    get$appDescription() {
      return "Learn a language\nwhile texting your friends.";
    },
    get$languages(_) {
      return "Languages";
    },
    get$chooseLanguage() {
      return "Choose a language.";
    },
    get$planTrip() {
      return "Plan your trip";
    },
    get$howAreYouTraveling() {
      return "How are you traveling?";
    },
    get$unlockPrivateTrip() {
      return "Unlock a private trip";
    },
    get$joinPublicTrip() {
      return "Join a public trip";
    },
    get$startOwnTrip() {
      return "Start my own";
    },
    get$tripPlanDesc() {
      return "Trips are courses. Each has 8-10 sequenced topics with a range of task-based language learning activities.";
    },
    get$unlockPrivateTripTitle() {
      return "Unlock private trip";
    },
    get$browsePublicTrips() {
      return "Browse public trips";
    },
    get$startOwnTripTitle() {
      return "Start my own trip";
    },
    get$courseCode() {
      return "What\u2019s the secret password?";
    },
    get$courseCodeHint() {
      return "Trip code or link";
    },
    get$unlockMyTrip() {
      return "Unlock my trip";
    },
    get$signupOption() {
      return "How do you want to sign up?";
    },
    get$withApple() {
      return "With Apple";
    },
    get$withGoogle() {
      return "With Google";
    },
    get$withEmail() {
      return "With Email";
    },
    get$createAccount() {
      return "Create account";
    },
    get$loginWithEmail() {
      return "Login with email";
    },
    get$usernameOrEmail() {
      return "Username or email";
    },
    get$email() {
      return "Email";
    },
    get$forgotPassword() {
      return "Forgot password?";
    },
    get$writingAnalyticsDesc() {
      return "Send messages to practice writing.";
    },
    get$endActivity() {
      return "End activity";
    },
    get$allLanguages() {
      return "All languages";
    },
    get$chatListTooltip() {
      return "Here you\u2019ll find your direct messages! Click on any user\u2019s avatar and \u201cstart conversation\u201d to send a DM.";
    },
    get$directMessageBotTitle() {
      return "Direct message Pangea Bot";
    },
    get$feedbackTitle() {
      return "Activity Feedback";
    },
    get$feedbackDesc() {
      return "How should the activity be improved? If you can provide some details, we\u2019ll make the change!";
    },
    get$feedbackRespDesc() {
      return "Check back tomorrow for activity updates.";
    },
    get$feedbackHint() {
      return "Your feedback";
    },
    get$feedbackButton() {
      return "Submit feedback";
    },
    get$directMessageBotDesc() {
      return "Talking to humans is more fun but... AI is always ready!";
    },
    get$inviteYourFriends() {
      return "Invite your friends";
    },
    get$playWithAI() {
      return "Play with AI for now";
    },
    get$courseStartDesc() {
      return "Pangea Bot is ready to go anytime!\n\n...but learning is better with friends!";
    },
    get$activityDropdownDesc() {
      return "When you\u2019re done with this activity, click below";
    },
    get$activityAnalyticsListBody() {
      return "These are your completed activities! After finishing activities, you can view them here.";
    },
    get$languageMismatchTitle() {
      return "Language mismatch";
    },
    get$languageMismatchDesc() {
      return "Your target language doesn't match the language of this activity. Update your target language?";
    },
    get$reportWordIssueTooltip() {
      return "Report word information issue";
    },
    get$tokenInfoFeedbackDialogTitle() {
      return "Word Information Feedback";
    },
    get$tokenInfoFeedbackDialogDesc() {
      return "AI makes mistakes. Please describe any issues you found with the information above.";
    },
    get$noPublicCoursesFound() {
      return "No public courses found. Would you like to create one?";
    },
    get$noCourseTemplatesFound() {
      return "We couldn't find any courses for your target language. You can chat with Pangea Bot in the meantime, and check back later for more courses.";
    },
    get$botActivityJoinFailMessage() {
      return "Pangea Bot is taking a while to respond. Please try again later, or invite a friend.";
    },
    get$unsubscribedResponseError() {
      return "This feature requires a subscription";
    },
    get$leaveDesc() {
      return "Leave this space and all chats within it";
    },
    remove$1($receiver, arg0) {
      return this.get$remove(this).call$1(arg0);
    }
  };
  var typesOffset = hunkHelpers.updateTypes([]);
  (function inheritance() {
    var _inherit = hunkHelpers.inherit;
    _inherit(A.L10nSv, C.L10n);
  })();
  B._Universe_addRules(init.typeUniverse, JSON.parse('{"L10nSv":{"L10n":[]}}'));
};
;
(d => {
  d["jw9BhATrHjQlVM4R55v6ECDGrnM="] = d.current;
})($__dart_deferred_initializers__);
;
//# sourceMappingURL=main.dart.js_258.part.js.map
