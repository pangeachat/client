// Generated by dart2js (, trust primitives, omit checks, lax runtime type, csp, intern-composite-values), the Dart to JavaScript compiler version: 3.9.2.
((s, d) => {
  s[d] = s[d] || {};
})(self, "$__dart_deferred_initializers__");
$__dart_deferred_initializers__.current = function(hunkHelpers, init, holdersList, $) {
  var B, C,
  A = {
    L10nNl$() {
      return new A.L10nNl(B.canonicalizedLocale("nl"));
    },
    L10nNl: function L10nNl(t0) {
      this.localeName = t0;
    }
  };
  B = holdersList[0];
  C = holdersList[54];
  A = hunkHelpers.updateHolder(holdersList[39], A);
  A.L10nNl.prototype = {
    get$alwaysUse24HourFormat() {
      return "true";
    },
    get$repeatPassword() {
      return "Wachtwoord herhalen";
    },
    get$notAnImage() {
      return "Geen afbeeldingsbestand.";
    },
    get$setCustomPermissionLevel() {
      return "Aangepast rechten-niveau instellen";
    },
    get$setPermissionsLevelDescription() {
      return "Kies hieronder een standaard rol of voer een aangepast rechten-niveau in tussen 0 en 100.";
    },
    get$ignoreUser() {
      return "Persoon negeren";
    },
    get$normalUser() {
      return "Normaal persoon";
    },
    get$remove(_) {
      return "Verwijder";
    },
    get$importNow() {
      return "Nu importeren";
    },
    get$importEmojis() {
      return "Emoji's importeren";
    },
    get$importFromZipFile() {
      return "Uit zip-bestand importeren";
    },
    get$exportEmotePack() {
      return "Emote-pakket als zip exporteren";
    },
    get$replace(_) {
      return "Vervang";
    },
    aboutHomeserver$1(homeserver) {
      return "Over " + homeserver;
    },
    get$accept(_) {
      return "Accepteren";
    },
    acceptedTheInvitation$1(username) {
      return "\ud83d\udc4d " + username + " heeft de uitnodiging geaccepteerd";
    },
    get$account() {
      return "Account";
    },
    activatedEndToEndEncryption$1(username) {
      return "\ud83d\udd10 " + username + " heeft eind-tot-eindversleuteling geactiveerd";
    },
    get$addEmail() {
      return "Email toevoegen";
    },
    supposedMxid$1(mxid) {
      return "Dit moet " + mxid + " zijn";
    },
    get$admin() {
      return "Beheerder";
    },
    get$commandHint_roomupgrade() {
      return "Upgradeer deze kamer naar de aangegeven kamerversie";
    },
    get$commandHint_googly() {
      return "Wiebel-ogen versturen";
    },
    get$commandHint_cuddle() {
      return "Een knuffel versturen";
    },
    get$commandHint_hug() {
      return "Een knuffel versturen";
    },
    googlyEyesContent$1(senderName) {
      return senderName + " stuurt je wiebelogen";
    },
    cuddleContent$1(senderName) {
      return senderName + " knuffelt je";
    },
    hugContent$1(senderName) {
      return senderName + " omhelst je";
    },
    answeredTheCall$1(senderName) {
      return senderName + " heeft de oproep beantwoord";
    },
    get$anyoneCanJoin() {
      return "Iedereen kan toetreden";
    },
    get$archive() {
      return "Archief";
    },
    get$areYouSure() {
      return "Weet je het zeker?";
    },
    get$areYouSureYouWantToLogout() {
      return "Weet je zeker dat je wilt uitloggen?";
    },
    get$askSSSSSign() {
      return "Voer je beveiligde opslag wachtwoordzin of herstelsleutel in om de andere persoon te kunnen ondertekenen.";
    },
    askVerificationRequest$1(username) {
      return "Accepteer je dit verificatieverzoek van " + username + "?";
    },
    badServerLoginTypesException$3(serverVersions, supportedVersions, suportedVersions) {
      return "De homeserver ondersteunt de login types:\n" + serverVersions + "\nMaar deze app ondersteunt alleen:\n" + supportedVersions;
    },
    get$sendTypingNotifications() {
      return "Typemeldingen verzenden";
    },
    get$swipeRightToLeftToReply() {
      return "Veeg van rechts naar links om te reageren";
    },
    get$sendOnEnter() {
      return "Verstuur met enter";
    },
    countChatsAndCountParticipants$2(chats, participants) {
      return "" + chats + " chats en " + participants + " deelnemers";
    },
    get$banFromChat() {
      return "Van chat verbannen";
    },
    get$banned() {
      return "Verbannen";
    },
    bannedUser$2(username, targetName) {
      return username + " verbant " + targetName;
    },
    get$blockDevice() {
      return "Apparaat blokkeren";
    },
    get$blocked() {
      return "Geblokkeerd";
    },
    get$cancel(_) {
      return "Annuleren";
    },
    cantOpenUri$1(uri) {
      return "Kan de URI " + uri + " niet openen";
    },
    get$changeDeviceName() {
      return "Apparaatnaam wijzigen";
    },
    changedTheChatAvatar$1(username) {
      return username + " heeft de chatavatar gewijzigd";
    },
    changedTheChatDescriptionTo$2(username, description) {
      return username + " heeft de chatomschrijving gewijzigd in: '" + description + "'";
    },
    changedTheChatNameTo$2(username, chatname) {
      return username + " heeft de chatnaam gewijzigd in: '" + chatname + "'";
    },
    changedTheChatPermissions$1(username) {
      return username + " heeft de chatrechten gewijzigd";
    },
    changedTheDisplaynameTo$2(username, displayname) {
      return username + "'s naam is nu '" + displayname + "'";
    },
    changedTheGuestAccessRules$1(username) {
      return username + " heeft de toegangsregels voor gasten gewijzigd";
    },
    changedTheGuestAccessRulesTo$2(username, rules) {
      return username + " heeft de gastenregels gewijzigd in: " + rules;
    },
    changedTheHistoryVisibility$1(username) {
      return username + " heeft de zichtbaarheid van de geschiedenis gewijzigd";
    },
    changedTheHistoryVisibilityTo$2(username, rules) {
      return username + " heeft de zichtbaarheid van de geschiedenis gewijzigd in: " + rules;
    },
    changedTheJoinRules$1(username) {
      return username + " heeft de toetredingsregels gewijzigd";
    },
    changedTheJoinRulesTo$2(username, joinRules) {
      return username + " heeft de toetredingsregels gewijzigd in: " + joinRules;
    },
    changedTheProfileAvatar$1(username) {
      return username + "'s avatar is gewijzigd";
    },
    changedTheRoomAliases$1(username) {
      return username + " heeft de kameraliassen gewijzigd";
    },
    changedTheRoomInvitationLink$1(username) {
      return username + " heeft de uitnodigingslink gewijzigd";
    },
    get$changePassword() {
      return "Wachtwoord wijzigen";
    },
    get$changeTheme() {
      return "Je stijl veranderen";
    },
    get$changeYourAvatar() {
      return "Jouw avatar veranderen";
    },
    get$channelCorruptedDecryptError() {
      return "De versleuteling is beschadigd";
    },
    get$chat() {
      return "Chat";
    },
    get$chatDetails() {
      return "Chatdetails";
    },
    get$chats() {
      return "Chats";
    },
    get$chooseAStrongPassword() {
      return "Kies een sterk wachtwoord";
    },
    get$clearArchive() {
      return "Archief wissen";
    },
    get$close(_) {
      return "Sluiten";
    },
    get$commandHint_markasdm() {
      return "Markeer als priv\xe9berichtenkamer voor Matrix ID";
    },
    get$commandHint_markasgroup() {
      return "Markeer als groep";
    },
    get$commandHint_ban() {
      return "Persoon uit deze kamer verbannen";
    },
    get$commandHint_clearcache() {
      return "Cache wissen";
    },
    get$commandHint_create() {
      return "Maak een lege groepschat\nGebruik --no-encryption om de versleuteling uit te schakelen";
    },
    get$commandHint_discardsession() {
      return "Sessie weggooien";
    },
    get$commandHint_dm() {
      return "Start een directe chat\nGebruik --no-encryption om de versleuteling uit te schakelen";
    },
    get$commandHint_html() {
      return "Tekst met HTML-opmaak versturen";
    },
    get$commandHint_invite() {
      return "Persoon in deze kamer uitnodigen";
    },
    get$commandHint_join() {
      return "Toetreden tot de vermelde kamer";
    },
    get$commandHint_kick() {
      return "Persoon uit deze kamer verwijderen";
    },
    get$commandHint_leave() {
      return "Deze kamer verlaten";
    },
    get$commandHint_me() {
      return "Beschrijf jezelf";
    },
    get$commandHint_myroomavatar() {
      return "Jouw avatar voor deze kamer instellen (met mxc-uri)";
    },
    get$commandHint_myroomnick() {
      return "Jouw naam voor deze kamer instellen";
    },
    get$commandHint_op() {
      return "Machtsniveau van de persoon instellen (standaard: 50)";
    },
    get$commandHint_plain() {
      return "Niet-opgemaakte tekst versturen";
    },
    get$commandHint_react() {
      return "Antwoord als reactie versturen";
    },
    get$commandHint_send() {
      return "Tekst versturen";
    },
    get$commandHint_unban() {
      return "Persoon weer in deze kamer toestaan";
    },
    get$compareEmojiMatch() {
      return "Vergelijk de emoji's";
    },
    get$compareNumbersMatch() {
      return "Vergelijk de cijfers";
    },
    get$configureChat() {
      return "Chat configureren";
    },
    get$confirm(_) {
      return "Bevestigen";
    },
    get$copiedToClipboard() {
      return "Gekopieerd naar klembord";
    },
    get$copy(_) {
      return "Bericht kopi\xebren";
    },
    couldNotDecryptMessage$1(error) {
      return "Kan het bericht niet ontsleutelen: " + error;
    },
    get$checkList() {
      return "Checklist";
    },
    countParticipants$1(count) {
      return "" + count + " personen";
    },
    countInvited$1(count) {
      return "" + count + " uitgenodigd";
    },
    get$create(_) {
      return "Aanmaken";
    },
    createdTheChat$1(username) {
      return "\ud83d\udcac " + username + " heeft de chat gemaakt";
    },
    get$createGroup() {
      return "Groep aanmaken";
    },
    get$currentlyActive() {
      return "Momenteel actief";
    },
    get$darkTheme() {
      return "Donker";
    },
    dateAndTimeOfDay$2(date, timeOfDay) {
      return date + ", " + timeOfDay;
    },
    get$deactivateAccountWarning() {
      return "Hierdoor wordt je account gedeactiveerd. Dit kan niet ongedaan gemaakt worden! Weet je het zeker?";
    },
    get$defaultPermissionLevel() {
      return "Standaard rechten-niveau voor nieuwe personen";
    },
    get$$delete(_) {
      return "Verwijderen";
    },
    get$deleteAccount() {
      return "Account verwijderen";
    },
    get$deleteMessage() {
      return "Bericht verwijderen";
    },
    get$devices() {
      return "Apparaten";
    },
    get$displaynameHasBeenChanged() {
      return "De naam is gewijzigd";
    },
    get$downloadFile() {
      return "Bestand downloaden";
    },
    get$edit() {
      return "Wijzig";
    },
    get$editBlockedServers() {
      return "Geblokkeerde servers wijzigen";
    },
    get$chatPermissions() {
      return "Chat rechten";
    },
    get$editDisplayname() {
      return "Naam wijzigen";
    },
    get$editRoomAvatar() {
      return "Kameravatar wijzigen";
    },
    get$emoteExists() {
      return "Emoticon bestaat al!";
    },
    get$emoteInvalid() {
      return "Ongeldige emoticon korte code!";
    },
    get$emoteKeyboardNoRecents() {
      return "Recent gebruikte emoticons zullen hier verschijnen...";
    },
    get$emotePacks() {
      return "Emoticonpakketten voor de kamer";
    },
    get$customEmojisAndStickers() {
      return "Aangepaste emoticons en stickers";
    },
    get$emoteShortcode() {
      return "Emoticon korte code";
    },
    get$emoteWarnNeedToPick() {
      return "Je moet een emoticon korte code en afbeelding kiezen!";
    },
    get$emptyChat() {
      return "Lege chat";
    },
    get$enableEmotesGlobally() {
      return "Emoticonpakket overal inschakelen";
    },
    get$enableEncryption() {
      return "Versleuteling inschakelen";
    },
    get$encrypted() {
      return "Versleuteld";
    },
    get$encryptionNotEnabled() {
      return "Versleuteling is niet ingeschakeld";
    },
    endedTheCall$1(senderName) {
      return senderName + " heeft het gesprek be\xebindigd";
    },
    get$enterAnEmailAddress() {
      return "Voer een email in";
    },
    errorObtainingLocation$1(error) {
      return "Locatie ophalen fout: " + error;
    },
    get$fontSize(_) {
      return "Lettergrootte";
    },
    get$forward(_) {
      return "Stuur door";
    },
    get$fromJoining() {
      return "Vanaf toetreden";
    },
    get$fromTheInvitation() {
      return "Vanaf uitnodiging";
    },
    get$guestsAreForbidden() {
      return "Gasten zijn verboden";
    },
    get$guestsCanJoin() {
      return "Gasten kunnen deelnemen";
    },
    hasWithdrawnTheInvitationFor$2(username, targetName) {
      return username + " heeft de uitnodiging voor " + targetName + " ingetrokken";
    },
    get$help() {
      return "Help";
    },
    get$hideRedactedMessages() {
      return "Verberg verwijderde berichten";
    },
    get$hideRedactedMessagesBody() {
      return "Als iemand een bericht verwijdert, is dit bericht niet meer zichtbaar in de chat.";
    },
    get$hideInvalidOrUnknownMessageFormats() {
      return "Verberg ongeldige of onbekende berichtformaten";
    },
    get$block() {
      return "Blokkeren";
    },
    get$blockedUsers() {
      return "Geblokkeerde personen";
    },
    get$blockListDescription() {
      return "Je kunt personen blokkeren die je lastig vallen. Je kan dan geen berichten meer ontvangen of kameruitnodigingen krijgen van de personen op je blokkeerlijst.";
    },
    get$blockUsername() {
      return "Negeer inlognaam";
    },
    get$iHaveClickedOnLink() {
      return "Ik heb op de link geklikt";
    },
    get$incorrectPassphraseOrKey() {
      return "Onjuiste wachtwoordzin of herstelsleutel";
    },
    get$inviteContact() {
      return "Contact uitnodigen";
    },
    get$noChatDescriptionYet() {
      return "Nog geen chatomschrijving gemaakt.";
    },
    get$tryAgain() {
      return "Opnieuw proberen";
    },
    get$invited() {
      return "Uitgenodigd";
    },
    get$redactMessageDescription() {
      return "Het bericht zal worden aangepast voor alle deelnemers in dit gesprek. Dit kan niet ongedaan gemaakt worden.";
    },
    get$optionalRedactReason() {
      return "(Optioneel) Reden voor aanpassing van dit bericht...";
    },
    invitedUser$2(username, targetName) {
      return "\ud83d\udce9 " + username + " heeft " + targetName + " uitgenodigd";
    },
    get$invitedUsersOnly() {
      return "Alleen uitgenodigde personen";
    },
    get$inviteForMe() {
      return "Persoonlijke uitnodiging";
    },
    get$isTyping() {
      return "is aan het typen\u2026";
    },
    joinedTheChat$1(username) {
      return "\ud83d\udc4b " + username + " is toegetreden tot de chat";
    },
    kicked$2(username, targetName) {
      return "\ud83d\udc5e " + username + " heeft " + targetName + " verwijderd";
    },
    get$kickFromChat() {
      return "Uit chat verwijderen";
    },
    lastActiveAgo$1(localizedTimeShort) {
      return "Laatst actief: " + localizedTimeShort;
    },
    get$leave() {
      return "Chat verlaten";
    },
    get$leftTheChat() {
      return "Verliet de chat";
    },
    get$lightTheme() {
      return "Licht";
    },
    get$dehydrate() {
      return "Sessie exporteren en apparaat wissen";
    },
    get$dehydrateWarning() {
      return "Deze actie kan niet ongedaan worden gemaakt. Zorg ervoor dat je het back-upbestand veilig opslaat.";
    },
    get$dehydrateTor() {
      return "TOR-sessies: Exporteer sessie";
    },
    get$dehydrateTorLong() {
      return "Voor TOR-sessies is het aanbevolen de sessie te exporteren alvorens het venster te sluiten.";
    },
    get$loadingPleaseWait() {
      return "Bezig met laden\u2026 Even geduld.";
    },
    get$loadMore() {
      return "Meer laden\u2026";
    },
    get$locationDisabledNotice() {
      return "Locatievoorzieningen is uitgeschakeld. Zet dit eerst aan om je locatie te delen.";
    },
    get$locationPermissionDeniedNotice() {
      return "Locatie toegang is geweigerd. Geef toegang om de locatie delen-functie te gebruiken.";
    },
    get$login() {
      return "Inloggen";
    },
    get$logout() {
      return "Uitloggen";
    },
    get$mention() {
      return "Vermeld";
    },
    get$messages() {
      return "Berichten";
    },
    get$messagesStyle() {
      return "Berichten:";
    },
    get$moderator() {
      return "Moderator";
    },
    get$newChat() {
      return "Nieuwe chat";
    },
    get$newVerificationRequest() {
      return "Nieuw verificatieverzoek!";
    },
    get$next(_) {
      return "Volgende";
    },
    get$no() {
      return "Nee";
    },
    get$noConnectionToTheServer() {
      return "Geen verbinding met de server";
    },
    get$noEmotesFound() {
      return "Geen emoticons gevonden. \ud83d\ude15";
    },
    get$shareInviteLink() {
      return "Uitnodigingslink delen";
    },
    get$none() {
      return "Geen";
    },
    get$noPasswordRecoveryDescription() {
      return "Je hebt nog geen manier toegevoegd om je wachtwoord te herstellen.";
    },
    get$noPermission() {
      return "Geen toestemming";
    },
    get$noRoomsFound() {
      return "Geen kamers gevonden \u2026";
    },
    get$notifications() {
      return "Meldingen";
    },
    get$obtainingLocation() {
      return "Locatie ophalen\u2026";
    },
    get$offensive() {
      return "Beledigend";
    },
    get$ok() {
      return "OK";
    },
    get$oopsSomethingWentWrong() {
      return "Oeps, er ging iets mis\u2026";
    },
    get$oneClientLoggedOut() {
      return "\xc9\xe9n van jouw apparaten is uitgelogd";
    },
    get$openInMaps() {
      return "In kaarten openen";
    },
    get$link() {
      return "Link";
    },
    get$serverRequiresEmail() {
      return "Deze server wil je email laten bevestigen bij de registratie.";
    },
    get$participant() {
      return "Personen";
    },
    get$passphraseOrKey() {
      return "wachtwoordzin of herstelsleutel";
    },
    get$password(_) {
      return "Wachtwoord";
    },
    get$passwordForgotten() {
      return "Wachtwoord vergeten";
    },
    get$passwordHasBeenChanged() {
      return "Wachtwoord gewijzigd";
    },
    get$overview() {
      return "Overzicht";
    },
    get$passwordRecoverySettings() {
      return "Wachtwoordherstel-instellingen";
    },
    get$passwordRecovery() {
      return "Wachtwoordherstel";
    },
    get$pickImage() {
      return "Kies een afbeelding";
    },
    get$pin() {
      return "Pin";
    },
    get$pleaseChoose() {
      return "Maak een keuze";
    },
    get$pleaseEnterYourPassword() {
      return "Voer jouw wachtwoord in";
    },
    get$pleaseEnterYourPin() {
      return "Voer je pincode in";
    },
    get$pleaseEnterYourUsername() {
      return "Voer je inlognaam in";
    },
    get$pleaseFollowInstructionsOnWeb() {
      return "Volg de instructies op de website en tik op volgende.";
    },
    get$privacy() {
      return "Privacy";
    },
    get$reason(_) {
      return "Reden";
    },
    redactedBy$1(username) {
      return "Aangepast door " + username;
    },
    get$directChat() {
      return "Directe chat";
    },
    redactedByBecause$2(username, reason) {
      return "Aangepast door " + username + ', reden: "' + reason + '"';
    },
    redactedAnEvent$1(username) {
      return username + " heeft een event verwijderd";
    },
    get$redactMessage() {
      return "Aangepast bericht";
    },
    get$reject() {
      return "Afwijzen";
    },
    rejectedTheInvitation$1(username) {
      return username + " heeft de uitnodiging afgewezen";
    },
    get$removeAllOtherDevices() {
      return "Verwijder alle andere apparaten";
    },
    get$unbanFromChat() {
      return "Verbanning opheffen";
    },
    get$removeYourAvatar() {
      return "Jouw avatar verwijderen";
    },
    get$replaceRoomWithNewerVersion() {
      return "Kamerversie upgraden";
    },
    get$reply(_) {
      return "Antwoord";
    },
    get$reportMessage() {
      return "Bericht rapporteren";
    },
    get$roomHasBeenUpgraded() {
      return "Kamer is ge\xfcpgrade";
    },
    get$search(_) {
      return "Zoeken";
    },
    get$security() {
      return "Beveiliging";
    },
    get$send(_) {
      return "Verstuur";
    },
    get$sendAMessage() {
      return "Stuur een bericht";
    },
    get$sendAudio() {
      return "Audio versturen";
    },
    get$sendFile() {
      return "Bestand versturen";
    },
    get$sendImage() {
      return "Afbeelding versturen";
    },
    sendImages$1(count) {
      return "Stuur " + count + " afbeelding(en)";
    },
    get$sendMessages() {
      return "Berichten versturen";
    },
    get$sendVideo() {
      return "Video versturen";
    },
    sentAFile$1(username) {
      return "\ud83d\udcc1 " + username + " heeft een bestand verzonden";
    },
    sentAnAudio$1(username) {
      return "\ud83c\udfa4 " + username + " heeft een audio verzonden";
    },
    sentAPicture$1(username) {
      return "\ud83d\uddbc\ufe0f " + username + " heeft een afbeelding verzonden";
    },
    sentASticker$1(username) {
      return "\ud83d\ude0a " + username + " heeft een sticker verzonden";
    },
    sentAVideo$1(username) {
      return "\ud83c\udfa5 " + username + " heeft een video verzonden";
    },
    sentCallInformations$1(senderName) {
      return senderName + " heeft oproepgegevens verzonden";
    },
    get$separateChatTypes() {
      return "Directe chats en groepen los weergeven";
    },
    get$setChatDescription() {
      return "Chatomschrijving instellen";
    },
    get$setStatus() {
      return "Status instellen";
    },
    get$settings() {
      return "Instellingen";
    },
    get$share(_) {
      return "Delen";
    },
    sharedTheLocation$1(username) {
      return username + " heeft deze locatie gedeeld";
    },
    get$shareLocation() {
      return "Locatie delen";
    },
    get$presencesToggle() {
      return "Toon statusberichten van andere personen";
    },
    get$skip(_) {
      return "Overslaan";
    },
    get$sourceCode() {
      return "Broncode";
    },
    startedACall$1(senderName) {
      return senderName + " heeft een gesprek gestart";
    },
    get$status(_) {
      return "Status";
    },
    get$statusExampleMessage() {
      return "Hoe gaat het met jouw vandaag?";
    },
    get$submit(_) {
      return "Indienen";
    },
    get$synchronizingPleaseWait() {
      return "Synchroniseren... Even geduld.";
    },
    synchronizingPleaseWaitCounter$1(percentage) {
      return " Synchroniseren\u2026 (" + percentage + "%)";
    },
    get$systemTheme() {
      return "Systeem";
    },
    get$theyDontMatch() {
      return "Ze komen niet overeen";
    },
    get$theyMatch() {
      return "Ze komen overeen";
    },
    get$tooManyRequestsWarning() {
      return "Te veel verzoeken. Probeer het later nog eens!";
    },
    get$tryToSendAgain() {
      return "Probeer nogmaals te verzenden";
    },
    get$unavailable() {
      return "Niet beschikbaar";
    },
    unbannedUser$2(username, targetName) {
      return username + " heeft verbanning " + targetName + " ongedaan gemaakt";
    },
    get$unblockDevice() {
      return "Deblokkeer apparaat";
    },
    get$unknownDevice() {
      return "Onbekend apparaat";
    },
    get$unknownEncryptionAlgorithm() {
      return "Onbekend versleutelingsalgoritme";
    },
    unknownEvent$1(type) {
      return "Onbekend evenement '" + type + "'";
    },
    get$unpin() {
      return "Losmaken";
    },
    userAndOthersAreTyping$2(username, count) {
      return username + " en " + count + " anderen zijn aan het typen \u2026";
    },
    userAndUserAreTyping$2(username, username2) {
      return username + " en " + username2 + " zijn aan het typen \u2026";
    },
    userIsTyping$1(username) {
      return username + " is aan het typen \u2026";
    },
    userLeftTheChat$1(username) {
      return "\ud83d\udeaa " + username + " is vertrokken uit de chat";
    },
    get$username(_) {
      return "Inlognaam";
    },
    userSentUnknownEvent$2(username, type) {
      return username + " heeft een " + type + " -gebeurtenis gestuurd";
    },
    get$unverified() {
      return "Niet geverifieerd";
    },
    get$verified() {
      return "Geverifieerd";
    },
    get$verifyStart() {
      return "Verificatie starten";
    },
    get$verifySuccess() {
      return "Je bent succesvol geverifieerd!";
    },
    get$verifyTitle() {
      return "Ander account verifi\xebren";
    },
    get$visibleForAllParticipants() {
      return "Zichtbaar voor alle personen";
    },
    get$visibleForEveryone() {
      return "Zichtbaar voor iedereen";
    },
    get$voiceMessage() {
      return "Spraakbericht versturen";
    },
    get$waitingPartnerAcceptRequest() {
      return "Wachten tot partner het verzoek accepteert \u2026";
    },
    get$waitingPartnerEmoji() {
      return "Wachten tot je partner de emoji accepteert\u2026";
    },
    get$waitingPartnerNumbers() {
      return "Wachten tot partner de nummers accepteert \u2026";
    },
    get$warning() {
      return "Waarschuwing!";
    },
    get$weSentYouAnEmail() {
      return "We hebben je een email gestuurd";
    },
    get$whyDoYouWantToReportThis() {
      return "Waarom wil je dit rapporteren?";
    },
    get$withTheseAddressesRecoveryDescription() {
      return "Met deze adressen kun je je wachtwoord herstellen.";
    },
    get$writeAMessage() {
      return "Schrijf een bericht\u2026";
    },
    get$yes() {
      return "Ja";
    },
    get$you() {
      return "Jij";
    },
    get$youAreNoLongerParticipatingInThisChat() {
      return "Je neemt niet langer deel aan deze chat";
    },
    get$youHaveBeenBannedFromThisChat() {
      return "Je bent verbannen uit deze chat";
    },
    get$yourPublicKey() {
      return "Je publieke sleutel";
    },
    get$messageInfo() {
      return "Berichtinfo";
    },
    get$time(_) {
      return "Tijd";
    },
    get$sender() {
      return "Afzender";
    },
    get$openGallery() {
      return "Galerij openen";
    },
    get$start(_) {
      return "Start";
    },
    get$markAsRead() {
      return "Markeer als gelezen";
    },
    reactedWith$2(sender, reaction) {
      return sender + " reageerde met " + reaction;
    },
    get$pinMessage() {
      return "Maak vast aan kamer";
    },
    get$emojis() {
      return "Emoji's";
    },
    get$youRejectedTheInvitation() {
      return "Je hebt de uitnodiging afgewezen";
    },
    get$youJoinedTheChat() {
      return "Je bent toegetreden tot de chat";
    },
    get$youAcceptedTheInvitation() {
      return "\ud83d\udc4d Je hebt de uitnodiging geaccepteerd";
    },
    youBannedUser$1(user) {
      return "Je hebt " + user + " verbannen";
    },
    youHaveWithdrawnTheInvitationFor$1(user) {
      return "Je hebt de uitnodiging voor " + user + " ingetrokken";
    },
    youInvitedBy$1(user) {
      return "\ud83d\udce9 Je bent uitgenodigd door " + user;
    },
    youInvitedUser$1(user) {
      return "\ud83d\udce9 Je hebt " + user + " uitgenodigd";
    },
    youKicked$1(user) {
      return "\ud83d\udc5e Je hebt " + user + " weggestuurd";
    },
    youUnbannedUser$1(user) {
      return "Je hebt de ban op " + user + " opgeheven";
    },
    hasKnocked$1(user) {
      return "\ud83d\udeaa " + user + " heeft geklopt";
    },
    get$users() {
      return "Personen";
    },
    countFiles$1(count) {
      return "" + count + " bestanden";
    },
    get$user() {
      return "Persoon";
    },
    get$custom() {
      return "Aangepast";
    },
    get$noKeyForThisMessage() {
      return "Dit kan gebeuren als het bericht is verzonden voordat je bij je account op dit apparaat hebt aangemeld.\n\nHet is ook mogelijk dat de afzender je apparaat heeft geblokkeerd of dat er iets mis is gegaan met de internetverbinding.\n\nKan je het bericht wel lezen op een andere sessie? Dan kan je het bericht daarvandaan overzetten! Ga naar Instellingen > Apparaten en zorg ervoor dat je apparaten elkaar hebben geverifieerd. Wanneer je de kamer de volgende keer opent en beide sessies op de voorgrond staan, zullen de sleutels automatisch worden verzonden.\n\nWil je de sleutels niet verliezen als je uitlogt of van apparaat wisselt? Zorg er dan voor dat je de chatback-up hebt aangezet in de instellingen.";
    },
    wasDirectChatDisplayName$1(oldDisplayName) {
      return "Lege chat (was " + oldDisplayName + ")";
    },
    get$reopenChat() {
      return "Chat heropenen";
    },
    get$noOtherDevicesFound() {
      return "Geen andere apparaten gevonden";
    },
    fileIsTooBigForServer$1(max) {
      return "Kan niet verzenden! De server ondersteunt alleen bijlages tot " + max + ".";
    },
    get$jumpToLastReadMessage() {
      return "Spring naar het laatst gelezen bericht";
    },
    get$readUpToHere() {
      return "Lees tot hier";
    },
    get$jump() {
      return "Spring";
    },
    get$openLinkInBrowser() {
      return "Link in browser openen";
    },
    get$setColorTheme() {
      return "Kleurthema instellen:";
    },
    get$invite() {
      return "Uitnodigen";
    },
    get$invalidInput() {
      return "Ongeldige invoer!";
    },
    wrongPinEntered$1(seconds) {
      return "Verkeerde pin ingevoerd! Probeer het nog eens over " + seconds + " seconden...";
    },
    get$pleaseEnterANumber() {
      return "Vul een getal in groter dan 0";
    },
    get$removeDevicesDescription() {
      return "Je wordt op dit apparaat uitgelogd en zal niet langer in staat zijn om berichten te ontvangen.";
    },
    get$banUserDescription() {
      return "De persoon zal worden verbannen van de chat en kan niet meer toetreden totdat de verbanning is opgeheven.";
    },
    get$unbanUserDescription() {
      return "De persoon zal weer in staat zijn om de chat te betreden als ze het proberen.";
    },
    get$kickUserDescription() {
      return "De persoon is verwijderd uit de chat, maar is niet verbannen. In openbare chats kan de persoon op elk moment opnieuw deelnemen.";
    },
    get$makeAdminDescription() {
      return "Wanneer je deze persoon beheerder maakt kun je dit niet ongedaan maken als jullie dezelfde rechten hebben.";
    },
    get$yourGlobalUserIdIs() {
      return "Je Matrix ID is: ";
    },
    noUsersFoundWithQuery$1(query) {
      return 'Helaas kan er geen persoon gevonden worden met "' + query + '". Controleer of je een typfout hebt gemaakt.';
    },
    get$knocking() {
      return "Kloppen";
    },
    get$nothingFound() {
      return "Niets gevonden...";
    },
    get$groupName() {
      return "Groepsnaam";
    },
    get$wrongRecoveryKey() {
      return "Helaas... dit lijkt niet de correcte herstelsleutel.";
    },
    get$startConversation() {
      return "Start gesprek";
    },
    get$commandHint_sendraw() {
      return "Stuur kale json";
    },
    get$leaveEmptyToClearStatus() {
      return "Laat leeg om je status te resetten.";
    },
    get$searchForUsers() {
      return "Zoek naar @personen...";
    },
    get$pleaseEnterYourCurrentPassword() {
      return "Vul je huidige wachtwoord in";
    },
    get$newPassword() {
      return "Nieuw wachtwoord";
    },
    get$pleaseChooseAStrongPassword() {
      return "Kies a.j.b. een sterk wachtwoord";
    },
    get$passwordsDoNotMatch() {
      return "Wachtwoorden komen niet overeen";
    },
    get$passwordIsWrong() {
      return "Je ingevoerde wachtwoord is fout";
    },
    get$decline() {
      return "Weiger";
    },
    get$thisDevice() {
      return "Dit apparaat:";
    },
    get$initAppError() {
      return "Er is een fout opgetreden bij het laden van de app";
    },
    searchIn$1(chat) {
      return 'Zoek in chat "' + chat + '"...';
    },
    get$searchMore() {
      return "Zoek meer...";
    },
    get$gallery() {
      return "Galerij";
    },
    get$files(_) {
      return "Bestanden";
    },
    sessionLostBody$2(url, error) {
      return "Je sessie is verlopen. Meldt alsjeblieft deze fout aan de ontwikkelaars via deze link " + url + ". De foutmelding is: " + error;
    },
    restoreSessionBody$2(url, error) {
      return "De app probeert nu je sessie te herstellen van een back-up. Meldt alsjeblieft deze fout aan de ontwikkelaars via deze link " + url + ". De foutmelding is: " + error;
    },
    get$sendReadReceipts() {
      return "Leesbevestigingen versturen";
    },
    get$sendTypingNotificationsDescription() {
      return "Andere deelnemers in de chat kunnen zien wanneer je een bericht aan het typen bent.";
    },
    get$sendReadReceiptsDescription() {
      return "Andere deelnemers van de chat kunnen zien of je een bericht hebt gelezen.";
    },
    get$verifyOtherDevice() {
      return "\ud83d\udd10 Ander apparaat verifi\xebren";
    },
    get$verifyOtherDeviceDescription() {
      return "Een geverifieerd ander apparaat zorgt ervoor dat de apparaten sleutels uitwisselen, wat je beveiliging versterkt. \ud83d\udcaa Als je de verificatie start verschijnt er een popup op beide apparaten. Hier staat een reeks emoji's of getallen die je met elkaar moet vergelijken. Het is handig om beide apparaten bij de hand te hebben voordat je de verificatie start. \ud83e\udd33";
    },
    acceptedKeyVerification$1(sender) {
      return sender + " accepteerde de sleutelverificatie";
    },
    canceledKeyVerification$1(sender) {
      return sender + " annuleerde de sleutelverificatie";
    },
    completedKeyVerification$1(sender) {
      return sender + " ronde de sleutelverificatie af";
    },
    isReadyForKeyVerification$1(sender) {
      return sender + " is klaar voor de sleutelverificatie";
    },
    requestedKeyVerification$1(sender) {
      return sender + " vraagt een sleutelverificatie";
    },
    startedKeyVerification$1(sender) {
      return sender + " start een sleutelverificatie";
    },
    get$stickers() {
      return "Stickers";
    },
    get$commandHint_ignore() {
      return "Negeer de gegeven Matrix ID";
    },
    get$commandHint_unignore() {
      return "Herstel de negeerde Matrix ID";
    },
    thereAreCountUsersBlocked$1(count) {
      return "Momenteel zijn er " + count + " personen geblokkeerd.";
    },
    get$restricted() {
      return "Beperkt";
    },
    get$markAsUnread() {
      return "Als ongelezen markeren";
    },
    userLevel$1(level) {
      return "" + level + " - Persoon";
    },
    moderatorLevel$1(level) {
      return "" + level + " - Moderator";
    },
    adminLevel$1(level) {
      return "" + level + " - Beheerder";
    },
    get$changeTheVisibilityOfChatHistory() {
      return "Zichtbaarheid van de chat-geschiedenis wijzigen";
    },
    get$changeTheCanonicalRoomAlias() {
      return "Standaard openbaar chat-adres wijzigen";
    },
    get$sendRoomNotifications() {
      return "@room-meldingen versturen";
    },
    get$chatPermissionsDescription() {
      return "Stel het gewenste rechten-niveau in voor bepaalde acties in deze chat. Het rechten-niveau 0, 50 en 100 zijn gebruikelijk voor deelnemer, moderator en beheerder, maar elke verdeling is mogelijk.";
    },
    updateInstalled$1(version) {
      return "\ud83c\udf89 Update " + version + " ge\xefnstalleerd!";
    },
    get$sendCanceled() {
      return "Versturen geannuleerd";
    },
    get$doesNotSeemToBeAValidHomeserver() {
      return "Dit lijkt geen ondersteunde server. Verkeerde URL?";
    },
    get$calculatingFileSize() {
      return "Bestandsgrootte berekenen...";
    },
    get$prepareSendingAttachment() {
      return "Bijlage versturen voorbereiden...";
    },
    get$sendingAttachment() {
      return "Bijlage versturen...";
    },
    sendingAttachmentCountOfCount$2(index, $length) {
      return "Bijlage versturen " + index + " van " + $length + "...";
    },
    serverLimitReached$1(seconds) {
      return "Server limiet bereikt! Wacht " + seconds + " seconden...";
    },
    get$noticeChatBackupDeviceVerification() {
      return "Opmerking: Als al je apparaten zijn verbonden met de chat back-up worden ze automatisch geverifieerd.";
    },
    get$continueText() {
      return "Doorgaan";
    },
    get$blur(_) {
      return "Vervaag:";
    },
    get$opacity(_) {
      return "Doorzichtigheid:";
    },
    get$setWallpaper() {
      return "Wallpaper instellen";
    },
    get$noContactInformationProvided() {
      return "Server geeft geen geldige contactinformatie";
    },
    get$contactServerAdmin() {
      return "Contact opnemen met serverbeheerder";
    },
    get$contactServerSecurity() {
      return "Contact opnemen met serverbeveiliger";
    },
    get$supportPage() {
      return "Supportpagina";
    },
    get$serverInformation() {
      return "Server-informatie:";
    },
    get$name(_) {
      return "Naam";
    },
    get$version(_) {
      return "Versie";
    },
    get$compress() {
      return "Comprimeren";
    },
    get$boldText() {
      return "Vet gedrukte tekst";
    },
    get$italicText() {
      return "Cursieve tekst";
    },
    get$strikeThrough() {
      return "Doorhalen";
    },
    get$pleaseFillOut() {
      return "Vul alsjeblieft in";
    },
    get$invalidUrl() {
      return "Ongeldige url";
    },
    get$addLink() {
      return "Koppeling toevoegen";
    },
    get$unableToJoinChat() {
      return "Kan niet toetreden tot de chat. Misschien heeft de andere partij het gesprek al afgesloten.";
    },
    get$previous() {
      return "Vorige";
    },
    get$otherPartyNotLoggedIn() {
      return "De andere partij is momenteel niet ingelogd en kan daarom geen berichten ontvangen!";
    },
    get$open(_) {
      return "Open";
    },
    get$waitingForServer() {
      return "Wachten op server...";
    },
    get$newChatRequest() {
      return "\ud83d\udce9 Nieuw chat verzoek";
    },
    get$contentNotificationSettings() {
      return "Contentmelding instellingen";
    },
    get$generalNotificationSettings() {
      return "Algemene melding instellingen";
    },
    get$roomNotificationSettings() {
      return "Kamermelding instellingen";
    },
    get$userSpecificNotificationSettings() {
      return "Persoon specifieke melding instellingen";
    },
    get$otherNotificationSettings() {
      return "Andere melding instellingen";
    },
    get$notificationRuleContainsUserName() {
      return "Bevat naam van persoon";
    },
    get$notificationRuleContainsUserNameDescription() {
      return "Stuurt een melding als een bericht de persoon vermeld.";
    },
    get$notificationRuleMaster() {
      return "Alle meldingen dempen";
    },
    get$notificationRuleMasterDescription() {
      return "Overschrijf alle andere regels en meldingen uitschakelen.";
    },
    get$notificationRuleSuppressNotices() {
      return "Automatische berichten uitschakelen";
    },
    get$notificationRuleSuppressNoticesDescription() {
      return "Meldingen van automatische accounts zoals bots uitschakelen.";
    },
    get$notificationRuleInviteForMe() {
      return "Uitnodiging voor mij";
    },
    get$notificationRuleInviteForMeDescription() {
      return "Stuur een melding wanneer een persoon wordt uitgenodigd voor een kamer.";
    },
    get$notificationRuleMemberEvent() {
      return "Kamer-gebeurtenis";
    },
    get$notificationRuleMemberEventDescription() {
      return "Meldingen voor kamer-gebeurtenissen uitschakelen.";
    },
    get$notificationRuleIsUserMention() {
      return "Persoonvermelding";
    },
    get$notificationRuleIsUserMentionDescription() {
      return "Stuur een melding als de persoon direct genoemd wordt in een bericht.";
    },
    get$notificationRuleContainsDisplayName() {
      return "Bevat de naam";
    },
    get$notificationRuleContainsDisplayNameDescription() {
      return "Stuur een melding als de persoon genoemd wordt in het bericht.";
    },
    get$notificationRuleIsRoomMention() {
      return "Kamervermelding";
    },
    get$notificationRuleIsRoomMentionDescription() {
      return "Stuur een melding naar de persoon als er in een kamervermelding is.";
    },
    get$notificationRuleRoomnotif() {
      return "Kamermelding";
    },
    get$notificationRuleRoomnotifDescription() {
      return "Stuur een melding naar de persoon wanneer een bericht '@room' bevat.";
    },
    get$notificationRuleTombstone() {
      return "Sleutingsbericht";
    },
    get$notificationRuleTombstoneDescription() {
      return "Stuur een melding naar de persoon over kamersluitingsberichten.";
    },
    get$notificationRuleReaction() {
      return "Reactie";
    },
    get$notificationRuleReactionDescription() {
      return "Meldingen voor reacties uitschakelen.";
    },
    get$notificationRuleRoomServerAcl() {
      return "Kamer Server ACL";
    },
    get$notificationRuleRoomServerAclDescription() {
      return "Meldingen voor kamer server toegangscontrolelijst (ACL) uitschakelen.";
    },
    get$notificationRuleSuppressEdits() {
      return "Bewerkingen uitschakelen";
    },
    get$notificationRuleSuppressEditsDescription() {
      return "Meldingen voor bewerkte berichten uitschakelen.";
    },
    get$notificationRuleCall() {
      return "Oproep";
    },
    get$notificationRuleCallDescription() {
      return "Stuur een melding naar de persoon over oproepen.";
    },
    get$notificationRuleEncryptedRoomOneToOne() {
      return "Versleutelde een-op-een kamer";
    },
    get$notificationRuleEncryptedRoomOneToOneDescription() {
      return "Stuur een melding naar de persoon over berichten in versleutelde een-op-een kamers.";
    },
    get$notificationRuleRoomOneToOne() {
      return "Een-op-een kamer";
    },
    get$notificationRuleRoomOneToOneDescription() {
      return "Stuur een melding naar de persoon over berichten in een-op-een kamers.";
    },
    get$notificationRuleMessage() {
      return "Bericht";
    },
    get$notificationRuleMessageDescription() {
      return "Stuur een melding naar de persoon over algemene berichten.";
    },
    get$notificationRuleEncrypted() {
      return "Versleuteld";
    },
    get$notificationRuleEncryptedDescription() {
      return "Stuur een melding naar de persoon over berichten in versleutelde kamers.";
    },
    get$notificationRuleJitsi() {
      return "Jitsi";
    },
    get$notificationRuleJitsiDescription() {
      return "Stuur een melding naar de persoon over Jitsi widget gebeurtenissen.";
    },
    get$notificationRuleServerAcl() {
      return "Server ACL gebeurtenissen uitschakelen";
    },
    get$notificationRuleServerAclDescription() {
      return "Meldingen over server ACL gebeurtenissen uitschakelen.";
    },
    unknownPushRule$1(rule) {
      return "Onbekende notificatieregel '" + rule + "'";
    },
    sentVoiceMessage$2(sender, duration) {
      return "\ud83c\udf99\ufe0f " + duration + " - " + sender;
    },
    get$deletePushRuleCanNotBeUndone() {
      return "Als je deze melding-instelling verwijderd, kan dit niet ongedaan gemaakt worden.";
    },
    get$more() {
      return "Meer";
    },
    get$shareKeysWith() {
      return "Deel sleutels met...";
    },
    get$shareKeysWithDescription() {
      return "Welke apparaten moeten vertrouwd worden zodat ze je berichten kunnen lezen in versleutelde chats?";
    },
    get$allDevices() {
      return "Alle apparaten";
    },
    get$crossVerifiedDevicesIfEnabled() {
      return "Kruislings geverifieerde apparaten als ingeschakeld";
    },
    get$crossVerifiedDevices() {
      return "Kruislings geverifieerde apparaten";
    },
    get$verifiedDevicesOnly() {
      return "Alleen geverifieerde apparaten";
    },
    get$optionalMessage() {
      return "(Optioneel) bericht...";
    },
    get$notSupportedOnThisDevice() {
      return "Niet ondersteund op dit apparaat";
    },
    get$enterNewChat() {
      return "Nieuwe chat openen";
    },
    get$approve() {
      return "Goedkeuren";
    },
    get$commandHint_logout() {
      return "Logout your current device";
    },
    get$commandHint_logoutall() {
      return "Logout all active devices";
    },
    get$customReaction() {
      return "Custom reaction";
    },
    writeAMessageLangCodes$2(l1, l2) {
      return "Type in " + l1 + " or " + l2 + "...";
    },
    get$holdForInfo() {
      return "Click and hold for word info.";
    },
    get$greenFeedback() {
      return "That's what I would put!";
    },
    get$yellowFeedback() {
      return "Hm, you can try that and see if it works! To use this word, just click it again.";
    },
    get$redFeedback() {
      return "I don't think that's right...";
    },
    get$itInstructionsTitle() {
      return "I can help you translate!";
    },
    get$itInstructionsBody() {
      return "You can click and hold choices for word info.";
    },
    get$gaTooltip() {
      return "L2 use with grammar assistance";
    },
    get$taTooltip() {
      return "L2 use with translation assistance";
    },
    get$interactiveTranslatorSliderHeader() {
      return "Interactive Translator";
    },
    get$interactiveGrammarSliderHeader() {
      return "Interactive Grammar Checker";
    },
    get$waTooltip() {
      return "L2 use without assistance";
    },
    get$noIdenticalLanguages() {
      return "Please choose different base and target languages";
    },
    get$languageLevelPreA1() {
      return "True Beginner (Pre A1)";
    },
    get$languageLevelA1() {
      return "Beginner (A1)";
    },
    get$languageLevelA2() {
      return "Elementary (A2)";
    },
    get$languageLevelB1() {
      return "Intermediate (B1)";
    },
    get$languageLevelB2() {
      return "Upper Intermediate (B2)";
    },
    get$languageLevelC1() {
      return "Advanced (C1)";
    },
    get$languageLevelC2() {
      return "Mastery (C2)";
    },
    get$changeTheNameOfTheClass() {
      return "Change the name";
    },
    get$changeTheNameOfTheChat() {
      return "Change the name of the chat";
    },
    get$sorryNoResults() {
      return "Sorry, no results.";
    },
    get$ignoreInThisText() {
      return "Ignore";
    },
    needsItMessage$1(targetLanguage) {
      return "Wait, that's not " + targetLanguage + "! Do you need help translating?";
    },
    get$countryInformation() {
      return "My country";
    },
    get$targetLanguage() {
      return "Target Language";
    },
    get$updateLanguage() {
      return "My languages";
    },
    get$whatLanguageYouWantToLearn() {
      return "What language do you want to learn?";
    },
    get$whatIsYourBaseLanguage() {
      return "What is your base language?";
    },
    get$saveChanges() {
      return "Save changes";
    },
    get$publicProfileTitle() {
      return "Allow my profile to be found in search";
    },
    get$publicProfileDesc() {
      return "By turning on, you enable other users to find your profile in the global search bar and send requests to chat. At this point, you can choose to accept or deny the request.";
    },
    get$errorDisableIT() {
      return "Translation assistance is turned off.";
    },
    get$errorDisableIGC() {
      return "Grammar assistance is turned off.";
    },
    get$errorDisableLanguageAssistance() {
      return "Translation assistance and grammar assistance are turned off.";
    },
    get$errorDisableITUserDesc() {
      return "Click here to update translation assistance settings";
    },
    get$errorDisableIGCUserDesc() {
      return "Click here to update grammar assistance settings";
    },
    get$errorDisableLanguageAssistanceUserDesc() {
      return "Click here to update translation assistance and grammar assistance settings";
    },
    get$errorDisableITClassDesc() {
      return "Translation assistance is turned off for the course that this chat is in.";
    },
    get$errorDisableIGCClassDesc() {
      return "Grammar assistance is turned off for the course that this chat is in.";
    },
    get$error405Title() {
      return "Languages not set";
    },
    get$error405Desc() {
      return "Please set your languages in Main Menu > Learning Settings.";
    },
    get$termsAndConditions() {
      return "Terms and Conditions";
    },
    get$andCertifyIAmAtLeast13YearsOfAge() {
      return " and certify I am at least 16 years of age.";
    },
    get$error502504Title() {
      return "Wow, there are a lot of students online!";
    },
    get$error502504Desc() {
      return "Translation and grammar tools may be slow or unavailable while the Pangea bots catch up.";
    },
    get$error404Title() {
      return "Translation error!";
    },
    get$error404Desc() {
      return "Pangea Bot isn't sure how to translate that...";
    },
    get$errorPleaseRefresh() {
      return "We're looking into it! Please reload and try again.";
    },
    get$connectedToStaging() {
      return "Connected to Staging";
    },
    get$learningSettings() {
      return "Learning settings";
    },
    get$participants() {
      return "Participants";
    },
    get$clickMessageTitle() {
      return "Need help?";
    },
    get$clickMessageBody() {
      return "Click a message for language tools like translation, play back and more!";
    },
    get$allDone() {
      return "All done!";
    },
    get$vocab() {
      return "Vocab";
    },
    get$subscribe(_) {
      return "Subscribe";
    },
    get$getAccess() {
      return "Subscribe now!";
    },
    get$subscriptionDesc() {
      return "Messaging is free! Subscribe to unlock interactive translation, grammar checking and learning analytics.";
    },
    get$subscriptionManagement() {
      return "Subscription Management";
    },
    get$currentSubscription() {
      return "Current Subscription";
    },
    get$cancelSubscription() {
      return "Cancel your subscription";
    },
    get$selectYourPlan() {
      return "Select Your Plan";
    },
    get$subsciptionPlatformTooltip() {
      return "Please login to your original device to manage your subscription plan";
    },
    get$subscriptionManagementUnavailable() {
      return "Subscription management not available";
    },
    get$paymentMethod() {
      return "Payment Method";
    },
    get$paymentHistory() {
      return "Payment History";
    },
    get$emptyChatDownloadWarning() {
      return "Cannot download empty chat";
    },
    get$toggleImmersionMode() {
      return "Immersion Mode";
    },
    get$toggleImmersionModeDesc() {
      return "When enabled, all messages are displayed in your target language. This setting is most useful in language exchanges.";
    },
    get$itToggleDescription() {
      return "This language learning tool will identify words in your base language and help you translate them to your target language. Though rare, the AI can make translation errors.";
    },
    get$igcToggleDescription() {
      return "This language learning tool will identify common spelling, grammar and punctuation errors in your message and suggest corrections. Though rare, the AI can make correction errors.";
    },
    get$originalMessage() {
      return "Original Message";
    },
    get$sentMessage() {
      return "Sent Message";
    },
    get$useType() {
      return "Use Type";
    },
    get$notAvailable() {
      return "Not Available";
    },
    get$taAndGaTooltip() {
      return "L2 use with translation assistance and grammar assistance";
    },
    get$definitionsToolName() {
      return "Word Definitions";
    },
    get$definitionsToolDescription() {
      return "When enabled, words underlined in blue can be clicked for definitions. Click messages to access definitions.";
    },
    get$welcomeBack() {
      return "Welcome back! If you were part of the 2023-2024 pilot, please contact us for your special pilot subscription. If you are a teacher who has (or whose institution has) purchased licenses for your class, contact us for your teacher subscription.";
    },
    get$downloadTxtFile() {
      return "Download Text File";
    },
    get$downloadCSVFile() {
      return "Download CSV File";
    },
    get$promotionalSubscriptionDesc() {
      return "You currently have a lifetime promotional subscription. Message support@pangea.chat for help changing your subscription.";
    },
    originalSubscriptionPlatform$1(purchasePlatform) {
      return "Subscription purchased through " + purchasePlatform;
    },
    get$oneWeekTrial() {
      return "One Week Trial";
    },
    get$downloadXLSXFile() {
      return "Download Excel File";
    },
    get$unkDisplayName() {
      return "Unknown";
    },
    get$wwCountryDisplayName() {
      return "World Wide";
    },
    get$afCountryDisplayName() {
      return "Afghanistan";
    },
    get$axCountryDisplayName() {
      return "Aland Islands";
    },
    get$alCountryDisplayName() {
      return "Albania";
    },
    get$dzCountryDisplayName() {
      return "Algeria";
    },
    get$asCountryDisplayName() {
      return "American Samoa";
    },
    get$adCountryDisplayName() {
      return "Andorra";
    },
    get$aoCountryDisplayName() {
      return "Angola";
    },
    get$aiCountryDisplayName() {
      return "Anguilla";
    },
    get$agCountryDisplayName() {
      return "Antigua and Barbuda";
    },
    get$arCountryDisplayName() {
      return "Argentina";
    },
    get$amCountryDisplayName() {
      return "Armenia";
    },
    get$awCountryDisplayName() {
      return "Aruba";
    },
    get$acCountryDisplayName() {
      return "Ascension Island";
    },
    get$auCountryDisplayName() {
      return "Australia";
    },
    get$atCountryDisplayName() {
      return "Austria";
    },
    get$azCountryDisplayName() {
      return "Azerbaijan";
    },
    get$bsCountryDisplayName() {
      return "Bahamas";
    },
    get$bhCountryDisplayName() {
      return "Bahrain";
    },
    get$bdCountryDisplayName() {
      return "Bangladesh";
    },
    get$bbCountryDisplayName() {
      return "Barbados";
    },
    get$byCountryDisplayName() {
      return "Belarus";
    },
    get$beCountryDisplayName() {
      return "Belgium";
    },
    get$bzCountryDisplayName() {
      return "Belize";
    },
    get$bjCountryDisplayName() {
      return "Benin";
    },
    get$bmCountryDisplayName() {
      return "Bermuda";
    },
    get$btCountryDisplayName() {
      return "Bhutan";
    },
    get$boCountryDisplayName() {
      return "Bolivia";
    },
    get$baCountryDisplayName() {
      return "Bosnia and Herzegovina";
    },
    get$bwCountryDisplayName() {
      return "Botswana";
    },
    get$brCountryDisplayName() {
      return "Brazil";
    },
    get$ioCountryDisplayName() {
      return "British Indian Ocean Territory";
    },
    get$vgCountryDisplayName() {
      return "British Virgin Islands";
    },
    get$bnCountryDisplayName() {
      return "Brunei";
    },
    get$bgCountryDisplayName() {
      return "Bulgaria";
    },
    get$bfCountryDisplayName() {
      return "Burkina Faso";
    },
    get$biCountryDisplayName() {
      return "Burundi";
    },
    get$khCountryDisplayName() {
      return "Cambodia";
    },
    get$cmCountryDisplayName() {
      return "Cameroon";
    },
    get$caCountryDisplayName() {
      return "Canada";
    },
    get$cvCountryDisplayName() {
      return "Cape Verde";
    },
    get$bqCountryDisplayName() {
      return "Caribbean Netherlands";
    },
    get$kyCountryDisplayName() {
      return "Cayman Islands";
    },
    get$cfCountryDisplayName() {
      return "Central African Republic";
    },
    get$tdCountryDisplayName() {
      return "Chad";
    },
    get$clCountryDisplayName() {
      return "Chile";
    },
    get$cnCountryDisplayName() {
      return "China";
    },
    get$cxCountryDisplayName() {
      return "Christmas Island";
    },
    get$ccCountryDisplayName() {
      return "Cocos [Keeling] Islands";
    },
    get$coCountryDisplayName() {
      return "Colombia";
    },
    get$kmCountryDisplayName() {
      return "Comoros";
    },
    get$cdCountryDisplayName() {
      return "Democratic Republic Congo";
    },
    get$cgCountryDisplayName() {
      return "Republic of Congo";
    },
    get$ckCountryDisplayName() {
      return "Cook Islands";
    },
    get$crCountryDisplayName() {
      return "Costa Rica";
    },
    get$ciCountryDisplayName() {
      return "C\xf4te d'Ivoire";
    },
    get$hrCountryDisplayName() {
      return "Croatia";
    },
    get$cuCountryDisplayName() {
      return "Cuba";
    },
    get$cwCountryDisplayName() {
      return "Cura\xe7ao";
    },
    get$cyCountryDisplayName() {
      return "Cyprus";
    },
    get$czCountryDisplayName() {
      return "Czech Republic";
    },
    get$dkCountryDisplayName() {
      return "Denmark";
    },
    get$djCountryDisplayName() {
      return "Djibouti";
    },
    get$dmCountryDisplayName() {
      return "Dominica";
    },
    get$doCountryDisplayName() {
      return "Dominican Republic";
    },
    get$tlCountryDisplayName() {
      return "East Timor";
    },
    get$ecCountryDisplayName() {
      return "Ecuador";
    },
    get$egCountryDisplayName() {
      return "Egypt";
    },
    get$svCountryDisplayName() {
      return "El Salvador";
    },
    get$gqCountryDisplayName() {
      return "Equatorial Guinea";
    },
    get$erCountryDisplayName() {
      return "Eritrea";
    },
    get$eeCountryDisplayName() {
      return "Estonia";
    },
    get$szCountryDisplayName() {
      return "Eswatini";
    },
    get$etCountryDisplayName() {
      return "Ethiopia";
    },
    get$fkCountryDisplayName() {
      return "Falkland Islands";
    },
    get$foCountryDisplayName() {
      return "Faroe Islands";
    },
    get$fjCountryDisplayName() {
      return "Fiji";
    },
    get$fiCountryDisplayName() {
      return "Finland";
    },
    get$frCountryDisplayName() {
      return "France";
    },
    get$gfCountryDisplayName() {
      return "French Guiana";
    },
    get$pfCountryDisplayName() {
      return "French Polynesia";
    },
    get$gaCountryDisplayName() {
      return "Gabon";
    },
    get$gmCountryDisplayName() {
      return "Gambia";
    },
    get$geCountryDisplayName() {
      return "Georgia";
    },
    get$deCountryDisplayName() {
      return "Germany";
    },
    get$ghCountryDisplayName() {
      return "Ghana";
    },
    get$giCountryDisplayName() {
      return "Gibraltar";
    },
    get$grCountryDisplayName() {
      return "Greece";
    },
    get$glCountryDisplayName() {
      return "Greenland";
    },
    get$gdCountryDisplayName() {
      return "Grenada";
    },
    get$gpCountryDisplayName() {
      return "Guadeloupe";
    },
    get$guCountryDisplayName() {
      return "Guam";
    },
    get$gtCountryDisplayName() {
      return "Guatemala";
    },
    get$ggCountryDisplayName() {
      return "Guernsey";
    },
    get$gnCountryDisplayName() {
      return "Guinea Conakry";
    },
    get$gwCountryDisplayName() {
      return "Guinea-Bissau";
    },
    get$gyCountryDisplayName() {
      return "Guyana";
    },
    get$htCountryDisplayName() {
      return "Haiti";
    },
    get$hmCountryDisplayName() {
      return "Heard Island and McDonald Islands";
    },
    get$hnCountryDisplayName() {
      return "Honduras";
    },
    get$hkCountryDisplayName() {
      return "Hong Kong";
    },
    get$huCountryDisplayName() {
      return "Hungary";
    },
    get$isCountryDisplayName() {
      return "Iceland";
    },
    get$inCountryDisplayName() {
      return "India";
    },
    get$idCountryDisplayName() {
      return "Indonesia";
    },
    get$irCountryDisplayName() {
      return "Iran";
    },
    get$iqCountryDisplayName() {
      return "Iraq";
    },
    get$ieCountryDisplayName() {
      return "Ireland";
    },
    get$imCountryDisplayName() {
      return "Isle of Man";
    },
    get$ilCountryDisplayName() {
      return "Israel";
    },
    get$itCountryDisplayName() {
      return "Italy";
    },
    get$jmCountryDisplayName() {
      return "Jamaica";
    },
    get$jpCountryDisplayName() {
      return "Japan";
    },
    get$jeCountryDisplayName() {
      return "Jersey";
    },
    get$joCountryDisplayName() {
      return "Jordan";
    },
    get$kzCountryDisplayName() {
      return "Kazakhstan";
    },
    get$keCountryDisplayName() {
      return "Kenya";
    },
    get$kiCountryDisplayName() {
      return "Kiribati";
    },
    get$xkCountryDisplayName() {
      return "Kosovo";
    },
    get$kwCountryDisplayName() {
      return "Kuwait";
    },
    get$kgCountryDisplayName() {
      return "Kyrgyzstan";
    },
    get$laCountryDisplayName() {
      return "Laos";
    },
    get$lvCountryDisplayName() {
      return "Latvia";
    },
    get$lbCountryDisplayName() {
      return "Lebanon";
    },
    get$lsCountryDisplayName() {
      return "Lesotho";
    },
    get$lrCountryDisplayName() {
      return "Liberia";
    },
    get$lyCountryDisplayName() {
      return "Libya";
    },
    get$liCountryDisplayName() {
      return "Liechtenstein";
    },
    get$ltCountryDisplayName() {
      return "Lithuania";
    },
    get$luCountryDisplayName() {
      return "Luxembourg";
    },
    get$moCountryDisplayName() {
      return "Macau";
    },
    get$mkCountryDisplayName() {
      return "Macedonia";
    },
    get$mgCountryDisplayName() {
      return "Madagascar";
    },
    get$mwCountryDisplayName() {
      return "Malawi";
    },
    get$myCountryDisplayName() {
      return "Malaysia";
    },
    get$mvCountryDisplayName() {
      return "Maldives";
    },
    get$mlCountryDisplayName() {
      return "Mali";
    },
    get$mtCountryDisplayName() {
      return "Malta";
    },
    get$mhCountryDisplayName() {
      return "Marshall Islands";
    },
    get$mqCountryDisplayName() {
      return "Martinique";
    },
    get$mrCountryDisplayName() {
      return "Mauritania";
    },
    get$muCountryDisplayName() {
      return "Mauritius";
    },
    get$ytCountryDisplayName() {
      return "Mayotte";
    },
    get$mxCountryDisplayName() {
      return "Mexico";
    },
    get$fmCountryDisplayName() {
      return "Micronesia";
    },
    get$mdCountryDisplayName() {
      return "Moldova";
    },
    get$mcCountryDisplayName() {
      return "Monaco";
    },
    get$mnCountryDisplayName() {
      return "Mongolia";
    },
    get$meCountryDisplayName() {
      return "Montenegro";
    },
    get$msCountryDisplayName() {
      return "Montserrat";
    },
    get$maCountryDisplayName() {
      return "Morocco";
    },
    get$mzCountryDisplayName() {
      return "Mozambique";
    },
    get$mmCountryDisplayName() {
      return "Myanmar (Burma)";
    },
    get$naCountryDisplayName() {
      return "Namibia";
    },
    get$nrCountryDisplayName() {
      return "Nauru";
    },
    get$npCountryDisplayName() {
      return "Nepal";
    },
    get$nlCountryDisplayName() {
      return "Netherlands";
    },
    get$ncCountryDisplayName() {
      return "New Caledonia";
    },
    get$nzCountryDisplayName() {
      return "New Zealand";
    },
    get$niCountryDisplayName() {
      return "Nicaragua";
    },
    get$neCountryDisplayName() {
      return "Niger";
    },
    get$ngCountryDisplayName() {
      return "Nigeria";
    },
    get$nuCountryDisplayName() {
      return "Niue";
    },
    get$nfCountryDisplayName() {
      return "Norfolk Island";
    },
    get$kpCountryDisplayName() {
      return "North Korea";
    },
    get$mpCountryDisplayName() {
      return "Northern Mariana Islands";
    },
    get$noCountryDisplayName() {
      return "Norway";
    },
    get$omCountryDisplayName() {
      return "Oman";
    },
    get$pkCountryDisplayName() {
      return "Pakistan";
    },
    get$pwCountryDisplayName() {
      return "Palau";
    },
    get$psCountryDisplayName() {
      return "Palestinian Territories";
    },
    get$paCountryDisplayName() {
      return "Panama";
    },
    get$pgCountryDisplayName() {
      return "Papua New Guinea";
    },
    get$pyCountryDisplayName() {
      return "Paraguay";
    },
    get$peCountryDisplayName() {
      return "Peru";
    },
    get$phCountryDisplayName() {
      return "Philippines";
    },
    get$plCountryDisplayName() {
      return "Poland";
    },
    get$ptCountryDisplayName() {
      return "Portugal";
    },
    get$prCountryDisplayName() {
      return "Puerto Rico";
    },
    get$qaCountryDisplayName() {
      return "Qatar";
    },
    get$reCountryDisplayName() {
      return "R\xe9union";
    },
    get$roCountryDisplayName() {
      return "Romania";
    },
    get$ruCountryDisplayName() {
      return "Russia";
    },
    get$rwCountryDisplayName() {
      return "Rwanda";
    },
    get$blCountryDisplayName() {
      return "Saint Barth\xe9lemy";
    },
    get$shCountryDisplayName() {
      return "Saint Helena";
    },
    get$knCountryDisplayName() {
      return "St. Kitts";
    },
    get$lcCountryDisplayName() {
      return "St. Lucia";
    },
    get$mfCountryDisplayName() {
      return "Saint Martin";
    },
    get$pmCountryDisplayName() {
      return "Saint Pierre and Miquelon";
    },
    get$vcCountryDisplayName() {
      return "St. Vincent";
    },
    get$wsCountryDisplayName() {
      return "Samoa";
    },
    get$smCountryDisplayName() {
      return "San Marino";
    },
    get$stCountryDisplayName() {
      return "S\xe3o Tom\xe9 and Pr\xedncipe";
    },
    get$saCountryDisplayName() {
      return "Saudi Arabia";
    },
    get$snCountryDisplayName() {
      return "Senegal";
    },
    get$rsCountryDisplayName() {
      return "Serbia";
    },
    get$scCountryDisplayName() {
      return "Seychelles";
    },
    get$slCountryDisplayName() {
      return "Sierra Leone";
    },
    get$sgCountryDisplayName() {
      return "Singapore";
    },
    get$sxCountryDisplayName() {
      return "Sint Maarten";
    },
    get$skCountryDisplayName() {
      return "Slovakia";
    },
    get$siCountryDisplayName() {
      return "Slovenia";
    },
    get$sbCountryDisplayName() {
      return "Solomon Islands";
    },
    get$soCountryDisplayName() {
      return "Somalia";
    },
    get$zaCountryDisplayName() {
      return "South Africa";
    },
    get$gsCountryDisplayName() {
      return "South Georgia and the South Sandwich Islands";
    },
    get$krCountryDisplayName() {
      return "South Korea";
    },
    get$ssCountryDisplayName() {
      return "South Sudan";
    },
    get$esCountryDisplayName() {
      return "Spain";
    },
    get$lkCountryDisplayName() {
      return "Sri Lanka";
    },
    get$sdCountryDisplayName() {
      return "Sudan";
    },
    get$srCountryDisplayName() {
      return "Suriname";
    },
    get$sjCountryDisplayName() {
      return "Svalbard and Jan Mayen";
    },
    get$seCountryDisplayName() {
      return "Sweden";
    },
    get$chCountryDisplayName() {
      return "Switzerland";
    },
    get$syCountryDisplayName() {
      return "Syria";
    },
    get$twCountryDisplayName() {
      return "Taiwan";
    },
    get$tjCountryDisplayName() {
      return "Tajikistan";
    },
    get$tzCountryDisplayName() {
      return "Tanzania";
    },
    get$thCountryDisplayName() {
      return "Thailand";
    },
    get$tgCountryDisplayName() {
      return "Togo";
    },
    get$tkCountryDisplayName() {
      return "Tokelau";
    },
    get$toCountryDisplayName() {
      return "Tonga";
    },
    get$ttCountryDisplayName() {
      return "Trinidad/Tobago";
    },
    get$tnCountryDisplayName() {
      return "Tunisia";
    },
    get$trCountryDisplayName() {
      return "Turkey";
    },
    get$tmCountryDisplayName() {
      return "Turkmenistan";
    },
    get$tcCountryDisplayName() {
      return "Turks and Caicos Islands";
    },
    get$tvCountryDisplayName() {
      return "Tuvalu";
    },
    get$viCountryDisplayName() {
      return "U.S. Virgin Islands";
    },
    get$ugCountryDisplayName() {
      return "Uganda";
    },
    get$uaCountryDisplayName() {
      return "Ukraine";
    },
    get$aeCountryDisplayName() {
      return "United Arab Emirates";
    },
    get$gbCountryDisplayName() {
      return "United Kingdom";
    },
    get$usCountryDisplayName() {
      return "United States";
    },
    get$uyCountryDisplayName() {
      return "Uruguay";
    },
    get$uzCountryDisplayName() {
      return "Uzbekistan";
    },
    get$vuCountryDisplayName() {
      return "Vanuatu";
    },
    get$vaCountryDisplayName() {
      return "Vatican City";
    },
    get$veCountryDisplayName() {
      return "Venezuela";
    },
    get$vnCountryDisplayName() {
      return "Vietnam";
    },
    get$wfCountryDisplayName() {
      return "Wallis and Futuna";
    },
    get$ehCountryDisplayName() {
      return "Western Sahara";
    },
    get$yeCountryDisplayName() {
      return "Yemen";
    },
    get$zmCountryDisplayName() {
      return "Zambia";
    },
    get$zwCountryDisplayName() {
      return "Zimbabwe";
    },
    get$pay() {
      return "Pay";
    },
    invitedToSpace$2(space, user) {
      return user + " has invited you to join a course: " + space + "! Do you wish to accept?";
    },
    get$youreInvited() {
      return "\ud83d\udce9 You're invited!";
    },
    invitedToChat$2($name, user) {
      return user + " has invited you to join a chat: " + $name + "! Do you wish to accept?";
    },
    get$monthlySubscription() {
      return "Monthly";
    },
    get$yearlySubscription() {
      return "Yearly";
    },
    get$defaultSubscription() {
      return "Pangea Chat Subscription";
    },
    get$freeTrial() {
      return "Free Trial";
    },
    get$noDataFound() {
      return "No data found";
    },
    get$blurMeansTranslateTitle() {
      return "Why is the message blurred?";
    },
    get$blurMeansTranslateBody() {
      return "While Immersion Mode is on, messages that are sent in your base language will be blurred while Pangea Bot translates them to your target language. Immersion Mode can be toggled in individual and course settings.";
    },
    get$bestCorrectionFeedback() {
      return "That's correct!";
    },
    get$distractorFeedback() {
      return "That's not quite right.";
    },
    get$bestAnswerFeedback() {
      return "That's correct!";
    },
    get$definitionDefaultPrompt() {
      return "What does this word mean?";
    },
    get$practiceDefaultPrompt() {
      return "What is the best answer?";
    },
    get$correctionDefaultPrompt() {
      return "What is the best replacement?";
    },
    get$reportToTeacher() {
      return "Who do you want to report this message to?";
    },
    reportMessageTitle$3(reportingUserId, reportedUserId, roomName) {
      return reportingUserId + " has reported a message from " + reportedUserId + " in the chat " + roomName;
    },
    reportMessageBody$2(reportedMessage, reason) {
      return "Message: " + reportedMessage + "\nReason: " + reason;
    },
    get$noTeachersFound() {
      return "No teachers found to report to";
    },
    trialExpiration$1(expiration) {
      return "Your free trial expires on " + expiration;
    },
    get$freeTrialDesc() {
      return "New users recieve a one week free trial of Pangea Chat";
    },
    get$activateTrial() {
      return "Free 7-Day Trial";
    },
    get$successfullySubscribed() {
      return "You have successfully subscribed!";
    },
    get$clickToManageSubscription() {
      return "Click here to manage your subscription.";
    },
    pleaseChooseAtLeastChars$1(min) {
      return "Please choose at least " + min + " characters.";
    },
    get$pleaseEnterValidEmail() {
      return "Please enter a valid email address.";
    },
    get$pleaseChooseAUsername() {
      return "Please choose a username";
    },
    get$listen() {
      return "Listen";
    },
    get$trialPeriodExpired() {
      return "Your trial period has expired";
    },
    get$subscribedToUnlockTools() {
      return "Subscribe to unlock interactive translation and grammar checking, audio playback, personalized practice activities, and learning analytics!";
    },
    get$translationTooltip() {
      return "Translate";
    },
    get$speechToTextTooltip() {
      return "Transcript";
    },
    get$kickBotWarning() {
      return "Kicking Pangea Bot will remove the conversation bot from this chat.";
    },
    get$refresh(_) {
      return "Refresh";
    },
    get$botConfig() {
      return "Bot and activity settings";
    },
    get$botConfigNoPermissionTitle() {
      return "No permission";
    },
    get$botConfigNoPermissionMessage() {
      return "Contact room admin to change bot configuration";
    },
    get$conversationBotStatus() {
      return "Invite bot";
    },
    get$updatePhoneOS() {
      return "You may need to update your device's OS version.";
    },
    get$autoIGCToolName() {
      return "Run Pangea writing assistance automatically";
    },
    get$autoIGCToolDescription() {
      return "Automatically run Pangea Chat grammar and translation writing assistance before sending my message.";
    },
    get$tooltipInstructionsTitle() {
      return "Not sure what that does?";
    },
    get$tooltipInstructionsBrowserBody() {
      return "Hover over items to view tooltips.";
    },
    get$chatCapacity() {
      return "Chat capacity";
    },
    get$roomFull() {
      return "This room is already at capacity.";
    },
    get$chatCapacityHasBeenChanged() {
      return "Chat capacity changed";
    },
    chatCapacitySetTooLow$1(count) {
      return "Chat capacity must be at least " + count + ".";
    },
    get$chatCapacityExplanation() {
      return "Chat capacity limits the number of members allowed in a chat.";
    },
    get$enterNumber() {
      return "Please enter a whole number value.";
    },
    get$buildTranslation() {
      return "Build your translation from the choices above";
    },
    get$practice() {
      return "Practice";
    },
    get$noLanguagesSet() {
      return "No languages set";
    },
    get$speechToTextBody() {
      return "For voice messages, you can see a transcript as well as the speaker's Words Per Minute score.";
    },
    get$versionNotFound() {
      return "Version Not Found";
    },
    get$fetchingVersion() {
      return "Fetching version...";
    },
    get$versionFetchError() {
      return "Error fetching version";
    },
    versionText$2(version, buildNumber) {
      return "Version: " + version + "+" + buildNumber;
    },
    get$l1TranslationBody() {
      return "Messages in your base language will not be translated.";
    },
    get$deleteSubscriptionWarningTitle() {
      return "You have an active subscription";
    },
    get$deleteSubscriptionWarningBody() {
      return "Deleting your account will not automatically cancel your subscription.";
    },
    get$manageSubscription() {
      return "Manage Subscription";
    },
    get$error520Title() {
      return "Please try again.";
    },
    get$error520Desc() {
      return "Sorry, we could not understand your message...";
    },
    get$level(_) {
      return "Level";
    },
    get$translationChoicesBody() {
      return "Click and hold an option for a hint.";
    },
    get$grammar() {
      return "Grammar";
    },
    get$contactHasBeenInvitedToTheChat() {
      return "Contact has been invited to the chat";
    },
    get$inviteChat() {
      return "\ud83d\udce8 Invite chat";
    },
    get$chatName() {
      return "Chat name";
    },
    get$clickTheWordAgainToDeselect() {
      return "Click the selected word to deselect it.";
    },
    get$l2SupportNa() {
      return "Not Available";
    },
    get$l2SupportAlpha() {
      return "Alpha";
    },
    get$l2SupportBeta() {
      return "Beta";
    },
    get$l2SupportFull() {
      return "Full";
    },
    get$missingVoiceTitle() {
      return "Missing voice";
    },
    get$voiceNotAvailable() {
      return "You don't have a voice installed for this language.";
    },
    get$playAudio() {
      return "Play";
    },
    get$stop(_) {
      return "Stop";
    },
    get$grammarCopyPOSsconj() {
      return "Subordinating Conjunction";
    },
    get$grammarCopyPOSnum() {
      return "Number";
    },
    get$grammarCopyPOSverb() {
      return "Verb";
    },
    get$grammarCopyPOSaffix() {
      return "Affix";
    },
    get$grammarCopyPOSpart() {
      return "Particle";
    },
    get$grammarCopyPOSadj() {
      return "Adjective";
    },
    get$grammarCopyPOScconj() {
      return "Coordinating Conjunction";
    },
    get$grammarCopyPOSpunct() {
      return "Punctuation";
    },
    get$grammarCopyPOSadv() {
      return "Adverb";
    },
    get$grammarCopyPOSaux() {
      return "Auxiliary";
    },
    get$grammarCopyPOSspace() {
      return "Space";
    },
    get$grammarCopyPOSsym() {
      return "Symbol";
    },
    get$grammarCopyPOSdet() {
      return "Determiner";
    },
    get$grammarCopyPOSpron() {
      return "Pronoun";
    },
    get$grammarCopyPOSadp() {
      return "Adposition";
    },
    get$grammarCopyPOSpropn() {
      return "Proper Noun";
    },
    get$grammarCopyPOSnoun() {
      return "Noun";
    },
    get$grammarCopyPOSintj() {
      return "Interjection";
    },
    get$grammarCopyPOSx() {
      return "Other";
    },
    get$grammarCopyGENDERfem() {
      return "Feminine";
    },
    get$grammarCopyPERSON2() {
      return "Second Person";
    },
    get$grammarCopyMOODimp() {
      return "Imperative";
    },
    get$grammarCopyPUNCTTYPEqest() {
      return "Question";
    },
    get$grammarCopyASPECTperf() {
      return "Perfect";
    },
    get$grammarCopyCASEaccnom() {
      return "Accusative, Nominative";
    },
    get$grammarCopyCASEobl() {
      return "Oblique";
    },
    get$grammarCopyVOICEact() {
      return "Active";
    },
    get$grammarCopyPUNCTTYPEbrck() {
      return "Bracket";
    },
    get$grammarCopyNOUNTYPEart() {
      return "Article";
    },
    get$grammarCopyNUMBERsing() {
      return "Singular";
    },
    get$grammarCopyGENDERmasc() {
      return "Masculine";
    },
    get$grammarCopyVERBTYPEmod() {
      return "Modal";
    },
    get$grammarCopyADVTYPEadverbial() {
      return "Adverbial";
    },
    get$grammarCopyTENSEperi() {
      return "Periphrastic";
    },
    get$grammarCopyNUMFORMdigit() {
      return "Digit";
    },
    get$grammarCopyNOUNTYPEnot_proper() {
      return "Not Proper";
    },
    get$grammarCopyNUMTYPEcard() {
      return "Cardinal";
    },
    get$grammarCopyNOUNTYPEprop() {
      return "Proper";
    },
    get$grammarCopyPUNCTTYPEdash() {
      return "Dash";
    },
    get$grammarCopyPUNCTTYPEyes() {
      return "Yes";
    },
    get$grammarCopyPUNCTTYPEsemi() {
      return "Semicolon";
    },
    get$grammarCopyPUNCTTYPEcomm() {
      return "Comma";
    },
    get$grammarCopyMOODcnd() {
      return "Conditional";
    },
    get$grammarCopyCASEacc() {
      return "Accusative";
    },
    get$grammarCopyPARTTYPEpart() {
      return "Partitive";
    },
    get$grammarCopyTENSEpast() {
      return "Past";
    },
    get$grammarCopyDEGREEsup() {
      return "Superlative";
    },
    get$grammarCopyPUNCTTYPEcolo() {
      return "Colon";
    },
    get$grammarCopyPERSON3() {
      return "Third Person";
    },
    get$grammarCopyNUMBERplur() {
      return "Plural";
    },
    get$grammarCopyPRONTYPEnpr() {
      return "Proper Noun";
    },
    get$grammarCopyPRONTYPEinterrogative() {
      return "Interrogative";
    },
    get$grammarCopyPOLITEinfm() {
      return "Informal";
    },
    get$grammarCopyADVTYPEtim() {
      return "Time";
    },
    get$grammarCopyPOLARITYneg() {
      return "Negative";
    },
    get$grammarCopyNUMTYPEtot() {
      return "Total";
    },
    get$grammarCopyADVTYPEadnomial() {
      return "Adnominal";
    },
    get$grammarCopyASPECTprog() {
      return "Progressive";
    },
    get$grammarCopyMOODsub() {
      return "Subjunctive";
    },
    get$grammarCopyVERBFORMcomplementive() {
      return "Complementive";
    },
    get$grammarCopyCASEnom() {
      return "Nominative";
    },
    get$grammarCopyTENSEfut() {
      return "Future";
    },
    get$grammarCopyCASEdat() {
      return "Dative";
    },
    get$grammarCopyTENSEpres() {
      return "Present";
    },
    get$grammarCopyGENDERneut() {
      return "Neuter";
    },
    get$grammarCopyPRONTYPErel() {
      return "Relative";
    },
    get$grammarCopyVERBFORMfinalEnding() {
      return "Final Ending";
    },
    get$grammarCopyPRONTYPEdem() {
      return "Demonstrative";
    },
    get$grammarCopyPREPCASEpre() {
      return "Prepositional";
    },
    get$grammarCopyVERBFORMfin() {
      return "Finite";
    },
    get$grammarCopyDEGREEpos() {
      return "Positive";
    },
    get$grammarCopyPUNCTTYPEquot() {
      return "Quotation";
    },
    get$grammarCopyVERBFORMger() {
      return "Gerund";
    },
    get$grammarCopyVOICEpass() {
      return "Passive";
    },
    get$grammarCopyCASEgen() {
      return "Genitive";
    },
    get$grammarCopyTENSEprs() {
      return "Present";
    },
    get$grammarCopyDEFINITEdef() {
      return "Definite";
    },
    get$grammarCopyNUMTYPEord() {
      return "Ordinal";
    },
    get$grammarCopyCASEins() {
      return "Instrumental";
    },
    get$grammarCopyVERBFORMinf() {
      return "Infinitive";
    },
    get$grammarCopyVERBFORMaux() {
      return "Auxiliary";
    },
    get$grammarCopyNUMFORMlong() {
      return "Long";
    },
    get$grammarCopyCASEloc() {
      return "Locative";
    },
    get$grammarCopyMOODind() {
      return "Indicative";
    },
    get$grammarCopyDEGREEcmp() {
      return "Comparative";
    },
    get$grammarCopyCASErelativeCase() {
      return "Relative";
    },
    get$grammarCopyPUNCTTYPEexcl() {
      return "Exclamative";
    },
    get$grammarCopyPERSON1() {
      return "First Person";
    },
    get$grammarCopyPUNCTSIDEini() {
      return "Initial";
    },
    get$grammarCopyGENDERperson() {
      return "Person";
    },
    get$grammarCopyFOREIGNyes() {
      return "Foreign";
    },
    get$grammarCopyVOICEvoice() {
      return "Voice";
    },
    get$grammarCopyVERBTYPEverbType() {
      return "Verb";
    },
    get$grammarCopyPOSSpass() {
      return "Possessive";
    },
    get$grammarCopyPREPCASEprepCase() {
      return "Prepositional";
    },
    get$grammarCopyNUMTYPEnumType() {
      return "Numeral";
    },
    get$grammarCopyNOUNTYPEnounType() {
      return "Noun";
    },
    get$grammarCopyREFLEXreflex() {
      return "Reflexive";
    },
    get$grammarCopyPRONTYPEpronType() {
      return "Pronoun";
    },
    get$grammarCopyPUNCTSIDEpunctSide() {
      return "Punctuation Side";
    },
    get$grammarCopyVERBFORMverbForm() {
      return "Verb";
    },
    get$grammarCopyGENDERgender() {
      return "Gender";
    },
    get$grammarCopyMOODmood() {
      return "Mood";
    },
    get$grammarCopyASPECTaspect() {
      return "Aspect";
    },
    get$grammarCopyPUNCTTYPEpunctType() {
      return "Punctuation";
    },
    get$grammarCopyTENSEtense() {
      return "Tense";
    },
    get$grammarCopyDEGREEdegree() {
      return "Degree";
    },
    get$grammarCopyPOLITEpolite() {
      return "Politeness";
    },
    get$grammarCopyADVTYPEadvType() {
      return "Adverb";
    },
    get$grammarCopyNUMFORMnumber() {
      return "Number";
    },
    get$grammarCopyCONJTYPEconjType() {
      return "Conjunction";
    },
    get$grammarCopyPOLARITYpolarity() {
      return "Polarity";
    },
    get$grammarCopyCASEcase() {
      return "Case";
    },
    get$grammarCopyDEFINITEdefinite() {
      return "Definiteness";
    },
    get$grammarCopyNUMFORMnumForm() {
      return "Numeral";
    },
    get$grammarCopyPRONTYPEadn() {
      return "Adnominal";
    },
    get$grammarCopyVOCvoc() {
      return "Vocative";
    },
    get$grammarCopyCMPLcmpl() {
      return "Complementizer";
    },
    get$grammarCopyADVadv() {
      return "Adverbial";
    },
    get$grammarCopyMOODjus() {
      return "Jussive";
    },
    get$grammarCopyGENDERcom() {
      return "Common";
    },
    get$grammarCopyREFLEXrflx() {
      return "Reflexive";
    },
    get$grammarCopyPARTTYPEpar() {
      return "Partitive";
    },
    get$grammarCopySPCspc() {
      return "Specific";
    },
    get$grammarCopyTENSEpqp() {
      return "Pluperfect";
    },
    get$grammarCopyREFLEXref() {
      return "Reflexive";
    },
    get$grammarCopyPUNCTTYPEnshrt() {
      return "Short";
    },
    get$grammarCopyNUMBERdual() {
      return "Dual";
    },
    get$grammarCopyNUMFORMlng() {
      return "Long";
    },
    get$grammarCopyVOICEmid() {
      return "Middle";
    },
    get$grammarCopyINTRELintRel() {
      return "Interrogative, Relative";
    },
    get$grammarCopyINTint() {
      return "Interrogative";
    },
    get$grammarCopyVOICEcaus() {
      return "Causative";
    },
    get$grammarCopyUnknown() {
      return "Unknown";
    },
    get$grammarCopyEVIDENTevident() {
      return "Evidentiality";
    },
    get$grammarCopyNUMFORMnumberPsor() {
      return "Possessor's Number";
    },
    get$grammarCopyASPECThab() {
      return "Habitual";
    },
    get$grammarCopyCASEabl() {
      return "Ablative";
    },
    get$grammarCopyCASEall() {
      return "Allative";
    },
    get$grammarCopyCASEess() {
      return "Essive";
    },
    get$grammarCopyCASEtra() {
      return "Translative";
    },
    get$grammarCopyCASEequ() {
      return "Equative";
    },
    get$grammarCopyCASEdis() {
      return "Distributive";
    },
    get$grammarCopyCASEabs() {
      return "Absolutive";
    },
    get$grammarCopyCASEerg() {
      return "Ergative";
    },
    get$grammarCopyCASEcau() {
      return "Causal";
    },
    get$grammarCopyCASEben() {
      return "Benefactive";
    },
    get$grammarCopyCASEtem() {
      return "Temporal";
    },
    get$grammarCopyCONJTYPEcoord() {
      return "Coordinating";
    },
    get$grammarCopyDEFINITEcons() {
      return "Construct State";
    },
    get$grammarCopyDEGREEabs() {
      return "Absolute Degree";
    },
    get$grammarCopyEVIDENTfh() {
      return "Factual Evidentiality";
    },
    get$grammarCopyEVIDENTnfh() {
      return "Non-factual Evidentiality";
    },
    get$grammarCopyMOODopt() {
      return "Optative";
    },
    get$grammarCopyMOODadm() {
      return "Admirative";
    },
    get$grammarCopyMOODdes() {
      return "Desiderative";
    },
    get$grammarCopyMOODnec() {
      return "Necessitative";
    },
    get$grammarCopyMOODpot() {
      return "Potential";
    },
    get$grammarCopyMOODprp() {
      return "Propositive";
    },
    get$grammarCopyMOODqot() {
      return "Quotative";
    },
    get$grammarCopyNUMFORMword() {
      return "Word Form";
    },
    get$grammarCopyNUMFORMroman() {
      return "Roman Numeral";
    },
    get$grammarCopyNUMFORMletter() {
      return "Letter Form";
    },
    get$grammarCopyNUMTYPEmult() {
      return "Multiplicative";
    },
    get$grammarCopyNUMTYPEfrac() {
      return "Fractional";
    },
    get$grammarCopyNUMTYPEsets() {
      return "Set";
    },
    get$grammarCopyNUMTYPErange() {
      return "Range";
    },
    get$grammarCopyNUMTYPEdist() {
      return "Distributive";
    },
    get$grammarCopyNUMBERtri() {
      return "Trial";
    },
    get$grammarCopyNUMBERpauc() {
      return "Paucal";
    },
    get$grammarCopyNUMBERgrpa() {
      return "Greater Paucal";
    },
    get$grammarCopyNUMBERgrpl() {
      return "Greater Plural";
    },
    get$grammarCopyNUMBERinv() {
      return "Inverse";
    },
    get$grammarCopyPERSON0() {
      return "Zero";
    },
    get$grammarCopyPERSON4() {
      return "Fourth";
    },
    get$grammarCopyPOLITEform() {
      return "Formal";
    },
    get$grammarCopyPOLITEelev() {
      return "Elevated";
    },
    get$grammarCopyPOLITEhumb() {
      return "Humble";
    },
    get$grammarCopyPRONTYPEemp() {
      return "Emphatic";
    },
    get$grammarCopyPRONTYPEexc() {
      return "Exclamative";
    },
    get$grammarCopyPRONTYPErcp() {
      return "Reciprocal";
    },
    get$grammarCopyPRONTYPEintRelPronType() {
      return "Interrogative-Relative";
    },
    get$grammarCopyTENSEaor() {
      return "Aorist";
    },
    get$grammarCopyTENSEeps() {
      return "Epistemic";
    },
    get$grammarCopyTENSEprosp() {
      return "Prospective";
    },
    get$grammarCopyVERBFORMpart() {
      return "Participle";
    },
    get$grammarCopyVERBFORMconv() {
      return "Converb";
    },
    get$grammarCopyVERBFORMvnoun() {
      return "Verbal Noun";
    },
    get$grammarCopyVOICEantip() {
      return "Antipassive";
    },
    get$grammarCopyVOICEcauVoice() {
      return "Causative";
    },
    get$grammarCopyVOICedir() {
      return "Direct";
    },
    get$grammarCopyVOICEinvVoice() {
      return "Inverse";
    },
    get$grammarCopyVOICErcpVoice() {
      return "Reciprocal";
    },
    get$grammarCopyPOS() {
      return "Part of Speech";
    },
    get$grammarCopyGENDER() {
      return "Gender";
    },
    get$grammarCopyPERSON() {
      return "Person";
    },
    get$grammarCopyMOOD() {
      return "Mood";
    },
    get$grammarCopyPUNCTTYPE() {
      return "Punctuation Type";
    },
    get$grammarCopyASPECT() {
      return "Aspect";
    },
    get$grammarCopyCASE() {
      return "Case";
    },
    get$grammarCopyVOICE() {
      return "Voice";
    },
    get$grammarCopyNOUNTYPE() {
      return "Noun Type";
    },
    get$grammarCopyVERBTYPE() {
      return "Verb Type";
    },
    get$grammarCopyADVTYPE() {
      return "Adverb Type";
    },
    get$grammarCopyNUMFORM() {
      return "Numeral Form";
    },
    get$grammarCopyNUMTYPE() {
      return "Numeral Type";
    },
    get$grammarCopyNUMBER() {
      return "Number";
    },
    get$grammarCopyDEFINITE() {
      return "Definiteness";
    },
    get$grammarCopyDEGREE() {
      return "Degree";
    },
    get$grammarCopyEVIDENT() {
      return "Evidentiality";
    },
    get$grammarCopyFOREIGN() {
      return "Foreign";
    },
    get$grammarCopyPOLARITY() {
      return "Polarity";
    },
    get$grammarCopyPOLITE() {
      return "Politeness";
    },
    get$grammarCopyPREPCASE() {
      return "Prepositional Case";
    },
    get$grammarCopyPRONTYPE() {
      return "Pronoun Type";
    },
    get$grammarCopyPUNCTSIDE() {
      return "Punctuation Side";
    },
    get$grammarCopyREFLEX() {
      return "Reflexive";
    },
    get$grammarCopyTENSE() {
      return "Tense";
    },
    get$grammarCopyVERBFORM() {
      return "Verb Form";
    },
    get$grammarCopyCONJTYPE() {
      return "Conjunction Type";
    },
    get$grammarCopyUNKNOWN() {
      return "Unknown";
    },
    get$grammarCopyNUMBERPSOR() {
      return "Possessor's Number";
    },
    get$grammarCopyPOSS() {
      return "Possessive";
    },
    get$grammarCopyASPECTimp() {
      return "Imperfective Aspect";
    },
    get$grammarCopyCASEvoc() {
      return "Vocative";
    },
    get$grammarCopyCASEcom() {
      return "Comitative";
    },
    get$grammarCopyCASEpar() {
      return "Partitive";
    },
    get$grammarCopyCASEadv() {
      return "Adverbial";
    },
    get$grammarCopyCASEref() {
      return "Referential";
    },
    get$grammarCopyCASErel() {
      return "Relative";
    },
    get$grammarCopyCASEsub() {
      return "Subessive";
    },
    get$grammarCopyCASEsup() {
      return "Superessive";
    },
    get$grammarCopyCASEaccdat() {
      return "Accusative-Dative";
    },
    get$grammarCopyCASEpre() {
      return "Prepositional";
    },
    get$grammarCopyCONJTYPEsub() {
      return "Subordinating";
    },
    get$grammarCopyCONJTYPEcmp() {
      return "Comparative";
    },
    get$grammarCopyDEFINITEind() {
      return "Indefinite";
    },
    get$grammarCopyMOODint() {
      return "Interrogative Mood";
    },
    get$grammarCopyNOUNTYPEcomm() {
      return "Common Noun";
    },
    get$grammarCopyNUMBERPSORsing() {
      return "Possessor's Singular";
    },
    get$grammarCopyNUMBERPSORplur() {
      return "Possessor's Plural";
    },
    get$grammarCopyNUMBERPSORdual() {
      return "Possessor's Dual";
    },
    get$grammarCopyPOLARITYpos() {
      return "Positive Polarity";
    },
    get$grammarCopyPOSSyes() {
      return "Possessive";
    },
    get$grammarCopyPREPCASEnpr() {
      return "Non-prepositional";
    },
    get$grammarCopyPRONTYPEprs() {
      return "Personal";
    },
    get$grammarCopyPRONTYPEint() {
      return "Interrogative";
    },
    get$grammarCopyPRONTYPEtot() {
      return "Total";
    },
    get$grammarCopyPRONTYPEneg() {
      return "Negative";
    },
    get$grammarCopyPRONTYPEart() {
      return "Article";
    },
    get$grammarCopyPRONTYPEind() {
      return "Indefinite";
    },
    get$grammarCopyPRONTYPEintrel() {
      return "Interrogative-Relative";
    },
    get$grammarCopyPUNCTSIDEfin() {
      return "Final Punctuation";
    },
    get$grammarCopyPUNCTTYPEperi() {
      return "Period";
    },
    get$grammarCopyREFLEXyes() {
      return "Reflexive";
    },
    get$grammarCopyTENSEimp() {
      return "Imperfect";
    },
    get$grammarCopyVERBFORMsup() {
      return "Supine";
    },
    get$grammarCopyVERBFORMadn() {
      return "Adnominal";
    },
    get$grammarCopyVERBFORMlng() {
      return "Long";
    },
    get$grammarCopyVERBFORMshrt() {
      return "Short";
    },
    get$grammarCopyVERBTYPEcaus() {
      return "Causative Verb";
    },
    get$grammarCopyVOICEcau() {
      return "Causative";
    },
    get$grammarCopyVOICEdir() {
      return "Direct";
    },
    get$grammarCopyVOICEinv() {
      return "Inverse";
    },
    get$grammarCopyVOICErcp() {
      return "Reciprocal";
    },
    get$enterLanguageLevel() {
      return "Please enter a language level";
    },
    get$other() {
      return "Other";
    },
    levelShort$1(level) {
      return "LVL " + level;
    },
    get$clickBestOption() {
      return "Choose the best options to translate your message!";
    },
    get$completeActivitiesToUnlock() {
      return "Complete at least one activity to unlock the translation!";
    },
    get$downloadGroupText() {
      return "Download group text";
    },
    get$notificationsOn() {
      return "Notifications on";
    },
    get$notificationsOff() {
      return "Notifications off";
    },
    get$createChatAndInviteUsers() {
      return "Create chat and invite users";
    },
    get$updatedNewSpaceDescription() {
      return "Courses allow you to consolidate your chats and build private or public communities.";
    },
    get$updateNow() {
      return "Update Now";
    },
    get$updateLater() {
      return "Later";
    },
    get$constructUseWaDesc() {
      return "Used without help";
    },
    get$constructUseGaDesc() {
      return "Grammar assistance";
    },
    get$constructUseTaDesc() {
      return "Translation assistance";
    },
    get$constructUseUnkDesc() {
      return "Unknown";
    },
    get$constructUseCorITDesc() {
      return "Correct in translation";
    },
    get$constructUseIgnITDesc() {
      return "Ignored in translation";
    },
    get$constructUseIncITDesc() {
      return "Incorrect in translation";
    },
    get$constructUseIgnIGCDesc() {
      return "Ignored in grammar correction";
    },
    get$constructUseCorIGCDesc() {
      return "Correct in grammar correction";
    },
    get$constructUseIncIGCDesc() {
      return "Incorrect in grammar correction";
    },
    get$constructUseCorPADesc() {
      return "Correct in word meaning activity";
    },
    get$constructUseIgnPADesc() {
      return "Ignored in word meaning activity";
    },
    get$constructUseIncPADesc() {
      return "Incorrect in word meaning activity";
    },
    get$constructUseCorWLDesc() {
      return "Correct in word listening activity";
    },
    get$constructUseIncWLDesc() {
      return "Incorrect in word listening activity";
    },
    get$constructUseIngWLDesc() {
      return "Ignored in word listening activity";
    },
    get$constructUseCorHWLDesc() {
      return "Correct in hidden word activity";
    },
    get$constructUseIncHWLDesc() {
      return "Incorrect in hidden word activity";
    },
    get$constructUseIgnHWLDesc() {
      return "Ignored in hidden word activity";
    },
    get$constructUseCorLDesc() {
      return "Correct in lemma activity";
    },
    get$constructUseIncLDesc() {
      return "Incorrect in lemma activity";
    },
    get$constructUseIgnLDesc() {
      return "Ignored in lemma activity";
    },
    get$constructUseCorMDesc() {
      return "Correct in grammar activity";
    },
    get$constructUseIncMDesc() {
      return "Incorrect in grammar activity";
    },
    get$constructUseIgnMDesc() {
      return "Ignored in grammar activity";
    },
    get$constructUseEmojiDesc() {
      return "Correct in emoji activity";
    },
    get$constructUseCollected() {
      return "Collected in chat";
    },
    get$constructUseNanDesc() {
      return "Not applicable";
    },
    xpIntoLevel$2(currentXP, maxXP) {
      return "" + currentXP + " / " + maxXP + " XP";
    },
    get$enableTTSToolName() {
      return "Enabled text-to-speech";
    },
    get$enableTTSToolDescription() {
      return "Allow the app to generate text-to-speech output for portions of text in your target language.";
    },
    get$yourUsername() {
      return "Your username";
    },
    get$yourEmail() {
      return "Your email";
    },
    get$iWantToLearn() {
      return "I want to learn";
    },
    get$pleaseEnterEmail() {
      return "Please enter a valid email address.";
    },
    get$myBaseLanguage() {
      return "My base language";
    },
    get$clickWordsInstructions() {
      return "\ud83d\udd75\ufe0f Click any word for details. \ud83e\uddd0";
    },
    get$meaningSectionHeader() {
      return "Meaning:";
    },
    get$formSectionHeader() {
      return "Forms used in chats:";
    },
    get$writingExercisesTooltip() {
      return "Writing";
    },
    get$listeningExercisesTooltip() {
      return "Listening";
    },
    get$readingExercisesTooltip() {
      return "Reading";
    },
    get$meaningNotFound() {
      return "Meaning could not be found.";
    },
    get$chooseBaseForm() {
      return "Choose the base form";
    },
    get$notTheCodeError() {
      return "Sorry, that's not the code!";
    },
    get$totalXP() {
      return "Total XP";
    },
    get$numLemmas() {
      return "Total number of lemmas";
    },
    get$numLemmasUsedCorrectly() {
      return "Number of lemmas used correctly at least once";
    },
    get$numLemmasUsedIncorrectly() {
      return "Number of lemmas used correctly 0 times";
    },
    get$numLemmasSmallXP() {
      return "Number of lemmas with 0 - 30 XP";
    },
    get$numLemmasMediumXP() {
      return "Number of lemmas with 31 - 200 XP";
    },
    get$numLemmasLargeXP() {
      return "Number of lemmas with > 200 XP";
    },
    get$numGrammarConcepts() {
      return "Number of grammar concepts";
    },
    get$listGrammarConcepts() {
      return "Grammar concepts";
    },
    get$listGrammarConceptsUsedCorrectly() {
      return "Grammar concepts used correctly in original messages at least 80% of the time";
    },
    get$listGrammarConceptsUsedIncorrectly() {
      return "Grammar concepts used correctly in original messages less than 80% of the time";
    },
    get$listGrammarConceptsUseCorrectlySystemGenerated() {
      return "Grammar concepts chosen correctly from system-generated suggestions at least 80% of the time";
    },
    get$listGrammarConceptsUseIncorrectlySystemGenerated() {
      return "Grammar concepts chosen correctly from system-generated suggestions less than 80% of the time";
    },
    get$listGrammarConceptsSmallXP() {
      return "Grammar concepts with 0-50 xp";
    },
    get$listGrammarConceptsMediumXP() {
      return "Grammar concepts with 51-200 xp";
    },
    get$listGrammarConceptsLargeXP() {
      return "Grammar concepts 201-500 xp";
    },
    get$listGrammarConceptsHugeXP() {
      return "Grammar concepts >500 xp";
    },
    get$numMessagesSent() {
      return "Number of messages sent";
    },
    get$numWordsTyped() {
      return "Number of words typed in original messages";
    },
    get$numCorrectChoices() {
      return "Number of correct words chosen from system-generated suggestions";
    },
    get$numIncorrectChoices() {
      return "Number of incorrect words chosen from system-generated suggestions";
    },
    get$commaSeparatedFile() {
      return "CSV";
    },
    get$excelFile() {
      return "Excel";
    },
    get$fileType() {
      return "File type";
    },
    get$download(_) {
      return "Download";
    },
    get$analyticsNotAvailable() {
      return "User analytics not available";
    },
    get$downloading() {
      return "Downloading...";
    },
    get$failedFetchUserAnalytics() {
      return "Failed to download user analytics";
    },
    get$downloadComplete() {
      return "Download complete!";
    },
    whatIsTheMorphTag$2(morphologicalFeature, wordForm) {
      return "What is the " + morphologicalFeature + " of '" + wordForm + "'?";
    },
    get$dataAvailable() {
      return "Data availability";
    },
    get$available(_) {
      return "Available";
    },
    get$pangeaBotIsFallible() {
      return "Pangea Bot makes mistakes too!";
    },
    whatIsMeaning$2(lemma, partOfSpeech) {
      return "What does '" + lemma + "' mean?";
    },
    get$chooseLemmaMeaningInstructionsBody() {
      return "Match meanings with the words in the message!";
    },
    get$doubleClickToEdit() {
      return "Double-click to edit.";
    },
    get$languageOfInstructionsLabel() {
      return "Language of activity instructions";
    },
    get$targetLanguageLabel() {
      return "Target language";
    },
    get$cefrLevelLabel() {
      return "CEFR level";
    },
    get$image(_) {
      return "Image";
    },
    get$activityPlannerOverviewInstructionsBody() {
      return "Choose a topic, mode, learning objective and generate an activity for the chat!";
    },
    get$constructUsePvmDesc() {
      return "Produced in voice message";
    },
    get$leaveSpaceDescription() {
      return "By leaving the course, you will leave all of the chats within it. Other users will see that you have left the course.";
    },
    get$constructUseCorMmDesc() {
      return "Correct message meaning";
    },
    get$constructUseIncMmDesc() {
      return "Incorrect message meaning";
    },
    get$constructUseIgnMmDesc() {
      return "Ignored message meaning";
    },
    get$meaning() {
      return "Meaning";
    },
    chatWith$1(displayname) {
      return "Group with " + displayname;
    },
    get$clickOnEmailLink() {
      return "Please click on the link in the email and then proceed.\n\nCheck your spam folder if the email hasn't arrived.";
    },
    get$dontForgetPassword() {
      return "Don't forget your password!";
    },
    get$enableAutocorrectToolName() {
      return "Enable device autocorrect";
    },
    get$enableAutocorrectDescription() {
      return "If your device supports the language you're learning, you can enable device autocorrect to fix common errors as you type.";
    },
    get$ttsDisbledTitle() {
      return "Text-to-speech disabled";
    },
    get$ttsDisabledBody() {
      return "You can enable text-to-speech in your learning settings";
    },
    get$noSpaceDescriptionYet() {
      return "No course description created yet.";
    },
    get$tooLargeToSend() {
      return "This message is too large to send";
    },
    get$exitWithoutSaving() {
      return "Are you sure you want to leave without saving?";
    },
    get$enableAutocorrectWarning() {
      return "Warning! Requires adding your target language keyboard";
    },
    get$leaveRoomDescription() {
      return "You're about to leave this chat. Other users will see that you have left the chat.";
    },
    get$confirmUserId() {
      return "Please confirm your Pangea Chat username in order to delete your account.";
    },
    paidSubscriptionStarts$1(startDate) {
      return "Starting " + startDate;
    },
    get$cancelInSubscriptionSettings() {
      return "\u2022 Cancel at any time in subscription settings";
    },
    get$autocorrectNotAvailable() {
      return "Unfortunately your platform is not currently supported for this feature. Stay tuned for further development!";
    },
    get$pleaseUpdateApp() {
      return "Please update the app to continue.";
    },
    get$chooseEmojiInstructionsBody() {
      return "Match emojis with the words they best represent. Don't worry! No points off for disagreeing. \ud83d\ude05";
    },
    get$analyticsVocabListBody() {
      return "This is all your vocabulary! As you earn XP for each word, they'll go from seedling to full bloom. Click on any word to see more details.";
    },
    get$morphAnalyticsListBody() {
      return "These are all the grammar concepts in the language you're learning! You'll unlock them as you encounter them while chatting. Click for details.";
    },
    get$knockSpaceSuccess() {
      return "You have requested to join this course! An admin will respond to your request when they receive it \ud83d\ude00";
    },
    get$chooseWordAudioInstructionsBody() {
      return "Listen to the complete message. Then match the audios with the words.";
    },
    get$chooseMorphsInstructionsBody() {
      return "Click the puzzle pieces for grammar questions!";
    },
    get$home() {
      return "Home";
    },
    get$join(_) {
      return "Join";
    },
    get$readingAssistanceOverviewBody() {
      return "Click the buttons below for mini-games on matching emojis, audios, word meanings, and grammar concepts. Or click on any word for details.";
    },
    get$resetInstructionTooltipsTitle() {
      return "Reset instruction tooltips";
    },
    get$resetInstructionTooltipsDesc() {
      return "Click to show instruction tooltips like for a brand new user.";
    },
    get$selectForGrammar() {
      return "Select a grammar icon for activities and details.";
    },
    get$translationProblem() {
      return "Translation problem";
    },
    get$niceJob() {
      return "Nice job!";
    },
    get$askToJoin() {
      return "Ask to join";
    },
    get$emptyChatWarningTitle() {
      return "Chat is empty";
    },
    get$emptyChatWarningDesc() {
      return "You haven't invited anyone to your chat. Go to Chat settings to invite your contacts or the Bot. You can also do this later.";
    },
    get$areYouLikeMe() {
      return "Are you like me?";
    },
    get$tryAgainLater() {
      return "Too many attempts made. Please try again in 5 minutes.";
    },
    get$enterSpaceCode() {
      return "Enter course code";
    },
    get$shareSpaceLink() {
      return "Share link";
    },
    get$byUsingPangeaChat() {
      return "By using Pangea Chat, I agree to the ";
    },
    get$details(_) {
      return "Details";
    },
    get$languageLevelPreA1Desc() {
      return "I have never learned or used the language.";
    },
    get$languageLevelA1Desc() {
      return "I can understand and use some familiar everyday expressions and very basic phrases.";
    },
    get$languageLevelA2Desc() {
      return "I can understand sentences and frequently used expressions related to areas of immediate relevance.";
    },
    get$languageLevelB1Desc() {
      return "I can deal with most familiar situations and can produce simple connected text on familiar topics.";
    },
    get$languageLevelB2Desc() {
      return "I can understand the mains ideas of complex texts and interact with a degree of fluency and spontaneity.";
    },
    get$languageLevelC1Desc() {
      return "I can express ideas fluently and spontaneously without much struggle and understand a wide range of demanding texts.";
    },
    get$languageLevelC2Desc() {
      return "I can understand virtually everything heard or read and express myself fluently and precisely.";
    },
    get$newVocab() {
      return "New vocab";
    },
    get$newGrammar() {
      return "New grammar concepts";
    },
    get$choosePracticeMode() {
      return "Click on one of the buttons above to start a practice activity";
    },
    get$ban() {
      return "Ban";
    },
    get$kick() {
      return "Kick";
    },
    get$lemma() {
      return "Lemma";
    },
    get$grammarFeature() {
      return "Grammar feature";
    },
    get$grammarTag() {
      return "Grammar tag";
    },
    get$forms() {
      return "Forms";
    },
    get$exampleMessages() {
      return "Example messages";
    },
    get$timesUsedIndependently() {
      return "Times used independently";
    },
    get$timesUsedWithAssistance() {
      return "Times used with assistance";
    },
    shareInviteCode$1(code) {
      return "Share invite code: " + code;
    },
    get$permissions(_) {
      return "Permissions";
    },
    get$spaceChildPermission() {
      return "Who can add new chats to this course";
    },
    get$addEnvironmentOverride() {
      return "Add environment override";
    },
    get$defaultOption() {
      return "Default";
    },
    get$deleteChatDesc() {
      return "Are you sure you want to delete this chat? It will be deleted for all participants and all messages within the chat will no longer be available for practice or learning analytics.";
    },
    get$deleteSpaceDesc() {
      return "The course and any selected chats will be deleted for all participants and all messages within the chat will no longer be available for practice or learning analytics. This action cannot be undone.";
    },
    get$configureSpace() {
      return "Configure course";
    },
    get$pinMessages() {
      return "Pin messages";
    },
    get$setJoinRules() {
      return "Set join rules";
    },
    get$changeGeneralSettings() {
      return "Change general settings";
    },
    get$inviteOtherUsersToRoom() {
      return "Invite other users";
    },
    get$changeTheNameOfTheSpace() {
      return "Change the name of the course";
    },
    get$changeTheDescription() {
      return "Change the description";
    },
    get$changeThePermissions() {
      return "Change the permissions";
    },
    get$introductions() {
      return "Introductions";
    },
    get$announcements() {
      return "Announcements";
    },
    get$activities() {
      return "Activities";
    },
    get$access() {
      return "Access";
    },
    get$botSettings() {
      return "Bot settings";
    },
    get$howSpaceCanBeFound() {
      return "How this course can be found";
    },
    get$$private() {
      return "Private";
    },
    get$cannotBeFoundInSearch() {
      return "Cannot be found in search";
    },
    get$$public(_) {
      return "Public";
    },
    get$visibleToCommunity() {
      return 'Visible to the broader Pangea Chat community via "Find a course"';
    },
    get$howSpaceCanBeJoined() {
      return "How this course can be joined";
    },
    get$canBeFoundVia() {
      return "Can be found via:";
    },
    get$canBeFoundViaInvitation() {
      return "\u2022 invitation";
    },
    get$canBeFoundViaCodeOrLink() {
      return "\u2022 code or link";
    },
    get$canBeFoundViaKnock() {
      return "\u2022 request to join and admin approval";
    },
    get$youHaveLeveledUp() {
      return "You have leveled up!";
    },
    get$sendActivities() {
      return "Send activities";
    },
    get$directMessage() {
      return "Direct Message";
    },
    get$newDirectMessage() {
      return "New direct message";
    },
    get$speakingExercisesTooltip() {
      return "Speaking";
    },
    get$transcriptionFailed() {
      return "Failed to transcribe audio";
    },
    get$aUserIsKnocking() {
      return "1 user is requesting to join your course";
    },
    usersAreKnocking$1(users) {
      return "" + users + " users are requesting to join your course";
    },
    get$failedToFetchTranscription() {
      return "Failed to fetch transcription";
    },
    get$deleteEmptySpaceDesc() {
      return "The course will be deleted for all participants. This action cannot be undone.";
    },
    get$failedToPlayVideo() {
      return "Failed to play video";
    },
    get$done() {
      return "Done";
    },
    get$inThisSpace() {
      return "In this course";
    },
    get$myContacts() {
      return "My contacts";
    },
    get$inviteAllInSpace() {
      return "Invite all in this course";
    },
    get$spaceParticipantsHaveBeenInvitedToTheChat() {
      return "All course participants has been invited to the chat";
    },
    numKnocking$1(count) {
      return "" + count + " knocking";
    },
    numInvited$1(count) {
      return "" + count + " invited";
    },
    get$errorFetchingDefinition() {
      return "Failed to fetch definition";
    },
    get$errorProcessAnalytics() {
      return "Failed to process analytics";
    },
    get$errorDownloading() {
      return "Download failed";
    },
    get$errorFetchingLevelSummary() {
      return "Failed to fetch level summary";
    },
    get$errorLoadingSpaceChildren() {
      return "Failed to load chats within this course";
    },
    get$unexpectedError() {
      return "Unexpected error.";
    },
    get$pleaseReload() {
      return "Please reload and try again.";
    },
    get$translationError() {
      return "Translation error";
    },
    get$errorFetchingTranslation() {
      return "Failed to fetch translation";
    },
    get$errorFetchingActivity() {
      return "Failed to fetch activity";
    },
    get$check(_) {
      return "Check";
    },
    get$unableToFindRoom() {
      return "No chat or course found with that code. Please try again.";
    },
    get$numCompletedActivities() {
      return "Number of completed activities";
    },
    viewingAnalytics$2(visible, users) {
      return "Viewing " + visible + "/" + users + " Analytics";
    },
    get$request(_) {
      return "Request";
    },
    get$requestAll(_) {
      return "Request All";
    },
    get$confirmMessageUnpin() {
      return "Are you sure you want to unpin this message?";
    },
    get$pending(_) {
      return "Pending";
    },
    get$openRoleLabel() {
      return "OPEN";
    },
    joinedTheActivity$2(username, role) {
      return "\ud83d\udc4b " + username + " joined as " + role;
    },
    finishedTheActivity$1(username) {
      return "\ud83c\udfaf " + username + " wrapped up this activity";
    },
    get$endActivityTitle() {
      return "I'm done";
    },
    get$activitySummaryError() {
      return "Activity summaries unavailable";
    },
    get$requestSummaries() {
      return "Request summaries";
    },
    get$requestAccessTitle() {
      return "Request to analytics view access?";
    },
    get$requestAccessDesc() {
      return "Would you like to request access to view participant analytics?\n\nIf participants agree, admins of this course will be able to view their:\n    \u2022 total vocabulary\n    \u2022 total grammar concepts\n    \u2022 total activity sessions completed\n    \u2022 the specific grammar concepts used, correctly and incorrectly\n\nThey will not be able to view their:\n    \u2022 messages in chats outside the course\n    \u2022 vocabulary list";
    },
    get$analyticsInactiveTitle() {
      return "Requests to inactive users couldn\u2019t be sent";
    },
    get$analyticsInactiveDesc() {
      return "Inactive users who haven't logged in since this feature was introduced won't see your request.\n\nThe Request button will appear once they return. You can resend the request later by clicking the Request button under their name when it's available.";
    },
    get$accessRequestedTitle() {
      return "Analytics Access Request";
    },
    accessRequestedDesc$1(space) {
      return "The administrators of \u201c" + space + "\u201d are requesting to view your learning analytics.\n\nIf you agree, admins of this course will be able to view your:\n    \u2022 total vocabulary\n    \u2022 total grammar concepts\n    \u2022 total activity sessions completed\n    \u2022 the specific grammar concepts used, correctly and incorrectly\n\nThey will not be able to view your:\n    \u2022 messages in chats outside the course\n    \u2022 vocabulary list";
    },
    get$allowAccess() {
      return "Allow Access";
    },
    get$denyAccess() {
      return "Deny Access";
    },
    get$adminRequestedAccess() {
      return "Admins asked to view your analytics.";
    },
    lastUpdated$1(time) {
      return "Updated\n" + time;
    },
    get$activityFinishedMessage() {
      return "All Finished!";
    },
    get$endForAll() {
      return "End for all";
    },
    get$newCourse() {
      return "New course";
    },
    numModules$1(num) {
      return "" + num + " modules";
    },
    numActivityPlans$1(num) {
      return "" + num + " activity plans";
    },
    get$coursePlan() {
      return "Course Plan";
    },
    get$editCourseLater() {
      return "You can edit template title, descriptions, and course image later.";
    },
    get$newCourseAccess() {
      return "By default, courses are private and require admin approval to join. You can edit these settings at any time.";
    },
    get$createCourse() {
      return "Create course";
    },
    get$stats() {
      return "Stats";
    },
    get$createGroupChat() {
      return "Create group chat";
    },
    get$editCourse() {
      return "Edit course";
    },
    get$inviteDesc() {
      return "By username, by code or link";
    },
    get$editCourseDesc() {
      return "Here you can edit course title, description, etc.";
    },
    get$permissionsDesc() {
      return "Set permissions such as who can invite users, send messages, create chats, etc.";
    },
    get$accessDesc() {
      return "You can make your course open to the world! Or, make your course private and secure.";
    },
    get$createGroupChatDesc() {
      return "Whereas activity sessions start and end, group chats will stay open for routine communication.";
    },
    get$deleteDesc() {
      return "Only admins can delete a course. This is a destructive action which removes all users and deletes all selected chats within the course. Proceed with caution.";
    },
    get$noCourseFound() {
      return "Oh, this course needs a plan!\n\nCourse plans are a sequence of topics and conversation activities.";
    },
    additionalParticipants$1(num) {
      return "+ " + num + " others";
    },
    get$directMessages() {
      return "Direct Messages";
    },
    get$whatNow() {
      return "What now?";
    },
    get$chooseNextActivity() {
      return "Choose your next activity!";
    },
    get$letsGo() {
      return "Let's go";
    },
    get$chooseRole() {
      return "Choose a role!";
    },
    get$chooseRoleToParticipate() {
      return "Choose a role to participate!";
    },
    waitingToFillRole$1(num) {
      return "Waiting to fill " + num + " roles...";
    },
    get$pingParticipants() {
      return "Ping course participants";
    },
    get$playWithBot() {
      return "Play with Pangea Bot";
    },
    get$inviteFriends() {
      return "Invite friends";
    },
    get$waitNotDone() {
      return "Wait I\u2019m not done!";
    },
    get$waitingForOthersToFinish() {
      return "Waiting for the rest to finish up...";
    },
    get$saveToCompletedActivities() {
      return "Save to completed activities";
    },
    get$generatingSummary() {
      return "Analyzing chat and generating results";
    },
    get$findCourse() {
      return "Find a course";
    },
    get$activityCompletedDesc() {
      return "Your completed activity was added to analytics where you can review and practice the language you used.";
    },
    pingParticipantsNotification$2(user, room) {
      return user + " is looking for users to join the activity session in " + room;
    },
    get$courseName() {
      return "Course name";
    },
    get$createNewCourse() {
      return "New course";
    },
    get$publicCourses() {
      return "Public courses";
    },
    goToCourse$1(course) {
      return "Go to course: " + course;
    },
    get$startNewSession() {
      return "Start new session";
    },
    get$joinOpenSession() {
      return "Join open session";
    },
    get$activityNotFound() {
      return "Activity not found";
    },
    get$levelUp() {
      return "Level up";
    },
    get$myActivities() {
      return "My activities";
    },
    get$openToJoin() {
      return "Open to join";
    },
    get$activityDone() {
      return "Activity Done!";
    },
    get$promoCodeInfo() {
      return "Promo codes can be entered on the next page";
    },
    get$editsComingSoon() {
      return "The ability to edit cities and activities is coming soon.";
    },
    get$editing() {
      return "Editing";
    },
    get$activityNeedsOneMember() {
      return "Uh oh! This activity needs 1 more person.";
    },
    activityNeedsMembers$1(num) {
      return "Uh oh! This activity needs " + num + " more people.";
    },
    get$inviteFriendsToCourse() {
      return "Invite friends to my course";
    },
    get$subscribeToUnlockActivitySummaries() {
      return "Subscribe to unlock activity summaries";
    },
    get$subscribeToUnlockDefinitions() {
      return "Subscribe to unlock definitions";
    },
    get$subscribeToUnlockTranscriptions() {
      return "Subscribe to unlock transcriptions";
    },
    get$pingSent() {
      return "\ud83d\udd14 Course ping sent! \ud83d\udd14";
    },
    get$courseTitle() {
      return "Course title";
    },
    get$courseDesc() {
      return "Course description";
    },
    get$courseSavedSuccessfully() {
      return "Course saved successfully";
    },
    get$addCoursePlan() {
      return "Add a course plan";
    },
    get$activityStatsButtonInstruction() {
      return "Click here to view your activity stats and to close the activity when finished";
    },
    get$readingAnalyticsDesc() {
      return "Click practice on each message for reading activities.";
    },
    get$speakingAnalyticsDesc() {
      return "Record voice messages for speaking practice.";
    },
    get$audioAnalyticsDesc() {
      return "Click practice on each message for listening activities.";
    },
    get$loginToAccount() {
      return "Login to my account";
    },
    get$appDescription() {
      return "Learn a language\nwhile texting your friends.";
    },
    get$languages(_) {
      return "Languages";
    },
    get$chooseLanguage() {
      return "Choose a language.";
    },
    get$planTrip() {
      return "Plan your trip";
    },
    get$howAreYouTraveling() {
      return "How are you traveling?";
    },
    get$unlockPrivateTrip() {
      return "Unlock a private trip";
    },
    get$joinPublicTrip() {
      return "Join a public trip";
    },
    get$startOwnTrip() {
      return "Start my own";
    },
    get$tripPlanDesc() {
      return "Trips are courses. Each has 8-10 sequenced topics with a range of task-based language learning activities.";
    },
    get$unlockPrivateTripTitle() {
      return "Unlock private trip";
    },
    get$browsePublicTrips() {
      return "Browse public trips";
    },
    get$startOwnTripTitle() {
      return "Start my own trip";
    },
    get$courseCode() {
      return "What\u2019s the secret password?";
    },
    get$courseCodeHint() {
      return "Trip code or link";
    },
    get$unlockMyTrip() {
      return "Unlock my trip";
    },
    get$signupOption() {
      return "How do you want to sign up?";
    },
    get$withApple() {
      return "With Apple";
    },
    get$withGoogle() {
      return "With Google";
    },
    get$withEmail() {
      return "With Email";
    },
    get$createAccount() {
      return "Create account";
    },
    get$loginWithEmail() {
      return "Login with email";
    },
    get$usernameOrEmail() {
      return "Username or email";
    },
    get$email() {
      return "Email";
    },
    get$forgotPassword() {
      return "Forgot password?";
    },
    get$writingAnalyticsDesc() {
      return "Send messages to practice writing.";
    },
    get$endActivity() {
      return "End activity";
    },
    get$allLanguages() {
      return "All languages";
    },
    get$allCefrLevels() {
      return "All CEFR levels";
    },
    get$chatListTooltip() {
      return "Here you\u2019ll find your direct messages! Click on any user\u2019s avatar and \u201cstart conversation\u201d to send a DM.";
    },
    get$directMessageBotTitle() {
      return "Direct message Pangea Bot";
    },
    get$feedbackTitle() {
      return "Activity Feedback";
    },
    get$feedbackDesc() {
      return "How should the activity be improved? If you can provide some details, we\u2019ll make the change!";
    },
    get$feedbackRespDesc() {
      return "Check back tomorrow for activity updates.";
    },
    get$feedbackHint() {
      return "Your feedback";
    },
    get$feedbackButton() {
      return "Submit feedback";
    },
    get$directMessageBotDesc() {
      return "Talking to humans is more fun but... AI is always ready!";
    },
    get$inviteYourFriends() {
      return "Invite your friends";
    },
    get$playWithAI() {
      return "Play with AI for now";
    },
    get$courseStartDesc() {
      return "Pangea Bot is ready to go anytime!\n\n...but learning is better with friends!";
    },
    get$activityDropdownDesc() {
      return "When you\u2019re done with this activity, click below";
    },
    get$activityAnalyticsListBody() {
      return "These are your completed activities! After finishing activities, you can view them here.";
    },
    get$languageMismatchTitle() {
      return "Language mismatch";
    },
    get$languageMismatchDesc() {
      return "Your target language doesn't match the language of this activity. Update your target language?";
    },
    get$noPublicCoursesFound() {
      return "No public courses found. Would you like to create one?";
    },
    get$noCourseTemplatesFound() {
      return "We couldn't find any courses for your target language. You can chat with Pangea Bot in the meantime, and check back later for more courses.";
    },
    remove$1($receiver, arg0) {
      return this.get$remove(this).call$1(arg0);
    }
  };
  var typesOffset = hunkHelpers.updateTypes([]);
  (function inheritance() {
    var _inherit = hunkHelpers.inherit;
    _inherit(A.L10nNl, C.L10n);
  })();
  B._Universe_addRules(init.typeUniverse, JSON.parse('{"L10nNl":{"L10n":[]}}'));
};
;
(d => {
  d["+GVumxX2DAsATuG9xLgFZQ3quLU="] = d.current;
})($__dart_deferred_initializers__);
;
//# sourceMappingURL=main.dart.js_247.part.js.map
