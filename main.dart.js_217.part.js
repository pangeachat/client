// Generated by dart2js (, trust primitives, omit checks, lax runtime type, csp, intern-composite-values), the Dart to JavaScript compiler version: 3.9.2.
((s, d) => {
  s[d] = s[d] || {};
})(self, "$__dart_deferred_initializers__");
$__dart_deferred_initializers__.current = function(hunkHelpers, init, holdersList, $) {
  var B, C,
  A = {
    L10nGl$() {
      return new A.L10nGl(B.canonicalizedLocale("gl"));
    },
    L10nGl: function L10nGl(t0) {
      this.localeName = t0;
    }
  };
  B = holdersList[0];
  C = holdersList[54];
  A = hunkHelpers.updateHolder(holdersList[24], A);
  A.L10nGl.prototype = {
    get$alwaysUse24HourFormat() {
      return "falso";
    },
    get$repeatPassword() {
      return "Repite o contrasinal";
    },
    get$notAnImage() {
      return "Non \xe9 un ficheiro de imaxe.";
    },
    get$setCustomPermissionLevel() {
      return "Establecer nivel personalizado dos permisos";
    },
    get$setPermissionsLevelDescription() {
      return "Elixe un rol predefinido dos indicados ou escribe un nivel personalizado entre 0 e 100.";
    },
    get$ignoreUser() {
      return "Ignorar usuaria";
    },
    get$normalUser() {
      return "Usuaria corrente";
    },
    get$remove(_) {
      return "Quitar";
    },
    get$importNow() {
      return "Importar agora";
    },
    get$importEmojis() {
      return "Importar Emojis";
    },
    get$importFromZipFile() {
      return "Importar desde ficheiro .zip";
    },
    get$exportEmotePack() {
      return "Exportar paquete Emote como .zip";
    },
    get$replace(_) {
      return "Substitu\xedr";
    },
    aboutHomeserver$1(homeserver) {
      return "Sobre " + homeserver;
    },
    get$accept(_) {
      return "Aceptar";
    },
    acceptedTheInvitation$1(username) {
      return "\ud83d\udc4d " + username + " aceptou o convite";
    },
    get$account() {
      return "Conta";
    },
    activatedEndToEndEncryption$1(username) {
      return "\ud83d\udd10 " + username + " activou a cifraxe extremo-a-extremo";
    },
    get$addEmail() {
      return "Engadir email";
    },
    supposedMxid$1(mxid) {
      return "Deber\xeda ser " + mxid;
    },
    get$admin() {
      return "Admin";
    },
    get$commandHint_roomupgrade() {
      return "Actualizar esta sala \xe1 versi\xf3n de sala indicada";
    },
    get$commandHint_googly() {
      return "Env\xeda uns ollos desos grandes";
    },
    get$commandHint_cuddle() {
      return "Env\xeda un agarimo";
    },
    get$commandHint_hug() {
      return "Env\xeda un abrazo";
    },
    googlyEyesContent$1(senderName) {
      return senderName + " enviouche uns ollos grandes";
    },
    cuddleContent$1(senderName) {
      return senderName + " m\xe1ndache un achuche";
    },
    hugContent$1(senderName) {
      return senderName + " abr\xe1zate";
    },
    answeredTheCall$1(senderName) {
      return senderName + " respondeu \xe1 chamada";
    },
    get$anyoneCanJoin() {
      return "Calquera pode unirse";
    },
    get$archive() {
      return "Arquivo";
    },
    get$areYouSure() {
      return "Tes a certeza?";
    },
    get$areYouSureYouWantToLogout() {
      return "Tes a certeza de querer sa\xedr?";
    },
    get$askSSSSSign() {
      return "Para poder asinar a outra persoa, escribe a t\xfaa frase de paso ou chave de recuperaci\xf3n.";
    },
    askVerificationRequest$1(username) {
      return "Aceptar a solicitude de verificaci\xf3n de " + username + "?";
    },
    badServerLoginTypesException$3(serverVersions, supportedVersions, suportedVersions) {
      return "O servidor soporta as seguintes formas de conexi\xf3n:\n" + serverVersions + "\nPero esta app s\xf3 soporta:\n" + supportedVersions;
    },
    get$sendTypingNotifications() {
      return "Permitir ver que est\xe1s escribindo";
    },
    get$swipeRightToLeftToReply() {
      return "Despraza hacia a esquerda para responder";
    },
    get$sendOnEnter() {
      return "Enter para enviar";
    },
    countChatsAndCountParticipants$2(chats, participants) {
      return "" + chats + " charlas e " + participants + " participantes";
    },
    get$banFromChat() {
      return "Vetar na conversa";
    },
    get$banned() {
      return "Vetada";
    },
    bannedUser$2(username, targetName) {
      return username + " vetou a " + targetName;
    },
    get$blockDevice() {
      return "Bloquear dispositivo";
    },
    get$blocked() {
      return "Bloqueado";
    },
    get$cancel(_) {
      return "Cancelar";
    },
    cantOpenUri$1(uri) {
      return "Non se pode abrir o URI " + uri;
    },
    get$changeDeviceName() {
      return "Cambiar nome do dispositivo";
    },
    changedTheChatAvatar$1(username) {
      return username + " cambiou o avatar da conversa";
    },
    changedTheChatDescriptionTo$2(username, description) {
      return username + " mudou a descrici\xf3n da conversa a: '" + description + "'";
    },
    changedTheChatNameTo$2(username, chatname) {
      return username + " mudou o nome da charla a: '" + chatname + "'";
    },
    changedTheChatPermissions$1(username) {
      return username + " mudou os permisos da conversa";
    },
    changedTheDisplaynameTo$2(username, displayname) {
      return username + " cambiou o nome p\xfablico a: '" + displayname + "'";
    },
    changedTheGuestAccessRules$1(username) {
      return username + " mudou as regras de acceso para convidadas";
    },
    changedTheGuestAccessRulesTo$2(username, rules) {
      return username + " mudou as regras de acceso para convidadas a: " + rules;
    },
    changedTheHistoryVisibility$1(username) {
      return username + " mudou a visibilidade do historial";
    },
    changedTheHistoryVisibilityTo$2(username, rules) {
      return username + " mudou a visibilidade do historial a: " + rules;
    },
    changedTheJoinRules$1(username) {
      return username + " mudou as regras de acceso";
    },
    changedTheJoinRulesTo$2(username, joinRules) {
      return username + " mudou as regras de acceso a: " + joinRules;
    },
    changedTheProfileAvatar$1(username) {
      return username + " mudou o avatar";
    },
    changedTheRoomAliases$1(username) {
      return username + " mudou os alias da sala";
    },
    changedTheRoomInvitationLink$1(username) {
      return username + " mudou a ligaz\xf3n de convite";
    },
    get$changePassword() {
      return "Mudar contrasinal";
    },
    get$changeTheme() {
      return "Cambiar o estilo";
    },
    get$changeYourAvatar() {
      return "Cambia o avatar";
    },
    get$channelCorruptedDecryptError() {
      return "A cifraxe est\xe1 estragada";
    },
    get$chat() {
      return "Conversa";
    },
    get$chatDetails() {
      return "Detalles da conversa";
    },
    get$chats() {
      return "Conversas";
    },
    get$chooseAStrongPassword() {
      return "Escolle un contrasinal forte";
    },
    get$clearArchive() {
      return "Baleirar arquivo";
    },
    get$close(_) {
      return "Pechar";
    },
    get$commandHint_markasdm() {
      return "Marcar como sala de mensaxe directa para o ID Matrix indicado";
    },
    get$commandHint_markasgroup() {
      return "Marcar como grupo";
    },
    get$commandHint_ban() {
      return "Vetar a usuaria indicada desta sala";
    },
    get$commandHint_clearcache() {
      return "Baleirar cach\xe9";
    },
    get$commandHint_create() {
      return "Crear un grupo de conversa baleiro\nUsa --no-encryption para desactivar a cifraxe";
    },
    get$commandHint_discardsession() {
      return "Descartar sesi\xf3n";
    },
    get$commandHint_dm() {
      return "Iniciar unha charla directa\nUsa --no-encryption para desactivar a cifraxe";
    },
    get$commandHint_html() {
      return "Enviar texto con formato HTML";
    },
    get$commandHint_invite() {
      return "Convidar \xe1 usuaria a esta sala";
    },
    get$commandHint_join() {
      return "Unirte \xe1 sala indicada";
    },
    get$commandHint_kick() {
      return "Eliminar a usuaria indicada desta sala";
    },
    get$commandHint_leave() {
      return "Sa\xedr desta sala";
    },
    get$commandHint_me() {
      return "Conta algo sobre ti";
    },
    get$commandHint_myroomavatar() {
      return "Establece a t\xfaa imaxe para esta sala (por mxc-uri)";
    },
    get$commandHint_myroomnick() {
      return "Establece o teu nome p\xfablico para esta sala";
    },
    get$commandHint_op() {
      return "Establecer o nivel de responsabilidade da usuaria (por defecto: 50)";
    },
    get$commandHint_plain() {
      return "Enviar texto sen formato";
    },
    get$commandHint_react() {
      return "Enviar resposta como reacci\xf3n";
    },
    get$commandHint_send() {
      return "Enviar texto";
    },
    get$commandHint_unban() {
      return "Retirar veto \xe1 usuaria para esta sala";
    },
    get$compareEmojiMatch() {
      return "Compara estes emojis";
    },
    get$compareNumbersMatch() {
      return "Compara estes n\xfameros";
    },
    get$configureChat() {
      return "Configurar conversa";
    },
    get$confirm(_) {
      return "Confirmar";
    },
    get$copiedToClipboard() {
      return "Copiado ao portapapeis";
    },
    get$copy(_) {
      return "Copiar";
    },
    couldNotDecryptMessage$1(error) {
      return "Non se descifrou a mensaxe: " + error;
    },
    get$checkList() {
      return "Check list";
    },
    countParticipants$1(count) {
      return "" + count + " participantes";
    },
    countInvited$1(count) {
      return "" + count + " convidadas";
    },
    get$create(_) {
      return "Crear";
    },
    createdTheChat$1(username) {
      return "\ud83d\udcac " + username + " creou a conversa";
    },
    get$createGroup() {
      return "Crear grupo";
    },
    get$currentlyActive() {
      return "Actualmente activo";
    },
    get$darkTheme() {
      return "Escuro";
    },
    dateAndTimeOfDay$2(date, timeOfDay) {
      return date + ", " + timeOfDay;
    },
    get$deactivateAccountWarning() {
      return "Esto desactivar\xe1 a conta. Esto non ten volta atr\xe1s. Est\xe1s segura?";
    },
    get$defaultPermissionLevel() {
      return "Nivel de permisos por defecto para novas usuarias";
    },
    get$$delete(_) {
      return "Eliminar";
    },
    get$deleteAccount() {
      return "Eliminar conta";
    },
    get$deleteMessage() {
      return "Eliminar mensaxe";
    },
    get$devices() {
      return "Dispositivos";
    },
    get$displaynameHasBeenChanged() {
      return "O nome p\xfablico mudou";
    },
    get$downloadFile() {
      return "Descargar ficheiro";
    },
    get$edit() {
      return "Editar";
    },
    get$editBlockedServers() {
      return "Editar servidores bloqueados";
    },
    get$chatPermissions() {
      return "Permisos da conversa";
    },
    get$editDisplayname() {
      return "Editar nome p\xfablico";
    },
    get$editRoomAvatar() {
      return "Editar avatar da sala";
    },
    get$emoteExists() {
      return "Xa existe ese emote!";
    },
    get$emoteInvalid() {
      return "Atallo do emote non \xe9 v\xe1lido!";
    },
    get$emoteKeyboardNoRecents() {
      return "Os emotes usados recentemente aparecer\xe1n aqu\xed...";
    },
    get$emotePacks() {
      return "Paquetes de Emotes para a sala";
    },
    get$customEmojisAndStickers() {
      return "Emojis personais e adhesivos";
    },
    get$emoteShortcode() {
      return "Atallo de Emote";
    },
    get$emoteWarnNeedToPick() {
      return "Escribe un atallo e asocialle unha imaxe!";
    },
    get$emptyChat() {
      return "Conversa baleira";
    },
    get$enableEmotesGlobally() {
      return "Activar paquete emote globalmente";
    },
    get$enableEncryption() {
      return "Activar cifraxe";
    },
    get$encrypted() {
      return "Cifrado";
    },
    get$encryptionNotEnabled() {
      return "A cifraxe non est\xe1 activada";
    },
    endedTheCall$1(senderName) {
      return senderName + " rematou a chamada";
    },
    get$enterAnEmailAddress() {
      return "Escribe un enderezo de email";
    },
    errorObtainingLocation$1(error) {
      return "Erro ao obter a localizaci\xf3n: " + error;
    },
    get$fontSize(_) {
      return "Tama\xf1o da letra";
    },
    get$forward(_) {
      return "Reenviar";
    },
    get$fromJoining() {
      return "Desde que se una";
    },
    get$fromTheInvitation() {
      return "Desde o convite";
    },
    get$guestsAreForbidden() {
      return "Non se permiten convidadas";
    },
    get$guestsCanJoin() {
      return "Perm\xedtense convidadas";
    },
    hasWithdrawnTheInvitationFor$2(username, targetName) {
      return username + " retirou o convite para " + targetName;
    },
    get$help() {
      return "Axuda";
    },
    get$hideRedactedMessages() {
      return "Agochar mensaxes editadas";
    },
    get$hideRedactedMessagesBody() {
      return "Se algu\xe9n corrixe unha mensaxe ent\xf3n esta xa non ser\xe1 visible na charla.";
    },
    get$hideInvalidOrUnknownMessageFormats() {
      return "Agochar formatos de mensaxe non v\xe1lidos ou desco\xf1ecidos";
    },
    get$block() {
      return "Bloquear";
    },
    get$blockedUsers() {
      return "Usuarias bloqueadas";
    },
    get$blockListDescription() {
      return "Podes bloquear usuarias que che molesten. Non recibir\xe1s mensaxes nin convites para salas procedentes das usuarias da t\xfaa lista persoal de bloqueo.";
    },
    get$blockUsername() {
      return "Ignorar identificador";
    },
    get$iHaveClickedOnLink() {
      return "Prem\xedn na ligaz\xf3n";
    },
    get$incorrectPassphraseOrKey() {
      return "Frase de paso ou chave de recuperaci\xf3n incorrecta";
    },
    get$inviteContact() {
      return "Convidar contacto";
    },
    get$noChatDescriptionYet() {
      return "A\xednda non se escribeu a descrici\xf3n da conversa.";
    },
    get$tryAgain() {
      return "Intentar outra vez";
    },
    get$invited() {
      return "Convidado";
    },
    get$redactMessageDescription() {
      return "A mensaxe vai ser editada para todas as participantes na conversa. Non ten volta atr\xe1s.";
    },
    get$optionalRedactReason() {
      return "(Optativo) Raz\xf3n para editar a mensaxe...";
    },
    invitedUser$2(username, targetName) {
      return "\ud83d\udce9 " + username + " convidou a " + targetName;
    },
    get$invitedUsersOnly() {
      return "S\xf3 usuarias convidadas";
    },
    get$inviteForMe() {
      return "Convite para min";
    },
    get$isTyping() {
      return "est\xe1 escribindo\u2026";
    },
    joinedTheChat$1(username) {
      return "\ud83d\udc4b " + username + " un\xeduse \xe1 conversa";
    },
    kicked$2(username, targetName) {
      return "\ud83d\udc5e " + username + " expulsou a " + targetName;
    },
    get$kickFromChat() {
      return "Expulsar da conversa";
    },
    lastActiveAgo$1(localizedTimeShort) {
      return "\xdaltima actividade: " + localizedTimeShort;
    },
    get$leave() {
      return "Sa\xedr";
    },
    get$leftTheChat() {
      return "Deixar a conversa";
    },
    get$lightTheme() {
      return "Claro";
    },
    get$dehydrate() {
      return "Exportar sesi\xf3n e eliminar dispositivo";
    },
    get$dehydrateWarning() {
      return "Esta acci\xf3n non \xe9 reversible. Pon coidado en gardar o ficheiro de apoio.";
    },
    get$dehydrateTor() {
      return "Usuarias TOR: Exportar sesi\xf3n";
    },
    get$dehydrateTorLong() {
      return "Para usuarias de TOR, \xe9 recomendable exportar a sesi\xf3n antes de pechar a xanela.";
    },
    get$loadingPleaseWait() {
      return "Cargando... Agarda.";
    },
    get$loadMore() {
      return "Cargar m\xe1is\u2026";
    },
    get$locationDisabledNotice() {
      return "Os servizos de localizaci\xf3n est\xe1n desactivados. Act\xedvaos para poder compartir a localizaci\xf3n.";
    },
    get$locationPermissionDeniedNotice() {
      return "Permiso de localizaci\xf3n denegado. Concede este permiso para poder compartir a localizaci\xf3n.";
    },
    get$login() {
      return "Acceder";
    },
    get$logout() {
      return "Pechar sesi\xf3n";
    },
    get$mention() {
      return "Menci\xf3n";
    },
    get$messages() {
      return "Mensaxes";
    },
    get$messagesStyle() {
      return "Mensaxes:";
    },
    get$moderator() {
      return "Moderadora";
    },
    get$newChat() {
      return "Nova conversa";
    },
    get$newVerificationRequest() {
      return "Nova solicitude de verificaci\xf3n!";
    },
    get$next(_) {
      return "Seguinte";
    },
    get$no() {
      return "Non";
    },
    get$noConnectionToTheServer() {
      return "Sen conexi\xf3n co servidor";
    },
    get$noEmotesFound() {
      return "Non hai emotes. \ud83d\ude15";
    },
    get$shareInviteLink() {
      return "Comparte ligaz\xf3n de convite";
    },
    get$none() {
      return "Ning\xfan";
    },
    get$noPasswordRecoveryDescription() {
      return "A\xednda non engaiches ning\xfan xeito de recuperar o contrasinal.";
    },
    get$noPermission() {
      return "Sen permiso";
    },
    get$noRoomsFound() {
      return "Non se atoparon salas\u2026";
    },
    get$notifications() {
      return "Notificaci\xf3ns";
    },
    get$obtainingLocation() {
      return "Obtendo a localizaci\xf3n\u2026";
    },
    get$offensive() {
      return "Ofensivo";
    },
    get$ok() {
      return "Ok";
    },
    get$oopsSomethingWentWrong() {
      return "Ooooi, algo fallou\u2026";
    },
    get$oneClientLoggedOut() {
      return "Un dos teus clientes foi desconectado";
    },
    get$openInMaps() {
      return "Abrir en mapas";
    },
    get$link() {
      return "Ligaz\xf3n";
    },
    get$serverRequiresEmail() {
      return "O servidor precisa validar o teu enderezo de email para rexistrarte.";
    },
    get$participant() {
      return "Participante";
    },
    get$passphraseOrKey() {
      return "frase de paso ou chave de recuperaci\xf3n";
    },
    get$password(_) {
      return "Contrasinal";
    },
    get$passwordForgotten() {
      return "Contrasinal esquecido";
    },
    get$passwordHasBeenChanged() {
      return "Cambiouse o contrasinal";
    },
    get$overview() {
      return "Vista xeral";
    },
    get$passwordRecoverySettings() {
      return "Axustes de recuperaci\xf3n do contrasinal";
    },
    get$passwordRecovery() {
      return "Recuperaci\xf3n do contrasinal";
    },
    get$pickImage() {
      return "Elixe unha imaxe";
    },
    get$pin() {
      return "Fixar";
    },
    get$pleaseChoose() {
      return "Por favor elixe";
    },
    get$pleaseEnterYourPassword() {
      return "Escribe o teu contrasinal";
    },
    get$pleaseEnterYourPin() {
      return "Escribe o teu pin";
    },
    get$pleaseEnterYourUsername() {
      return "Escribe o teu nome de usuaria";
    },
    get$pleaseFollowInstructionsOnWeb() {
      return "Segue as instrucci\xf3ns do sitio web e toca en seguinte.";
    },
    get$privacy() {
      return "Privacidade";
    },
    get$reason(_) {
      return "Raz\xf3n";
    },
    redactedBy$1(username) {
      return "Editada por " + username;
    },
    get$directChat() {
      return "Conversa Directa";
    },
    redactedByBecause$2(username, reason) {
      return "Editada por " + username + ' debido a: "' + reason + '"';
    },
    redactedAnEvent$1(username) {
      return username + " editou un evento";
    },
    get$redactMessage() {
      return "Eliminar mensaxe";
    },
    get$reject() {
      return "Rexeitar";
    },
    rejectedTheInvitation$1(username) {
      return username + " rexeitou o convite";
    },
    get$removeAllOtherDevices() {
      return "Quitar todos os outros dispositivos";
    },
    get$unbanFromChat() {
      return "Retirar veto na conversa";
    },
    get$removeYourAvatar() {
      return "Elimina o avatar";
    },
    get$replaceRoomWithNewerVersion() {
      return "Substitu\xedr sala pola nova versi\xf3n";
    },
    get$reply(_) {
      return "Responder";
    },
    get$reportMessage() {
      return "Denunciar mensaxe";
    },
    get$roomHasBeenUpgraded() {
      return "A sala foi actualizada";
    },
    get$search(_) {
      return "Buscar";
    },
    get$security() {
      return "Seguridade";
    },
    get$send(_) {
      return "Enviar";
    },
    get$sendAMessage() {
      return "Enviar unha mensaxe";
    },
    get$sendAudio() {
      return "Enviar audio";
    },
    get$sendFile() {
      return "Enviar ficheiro";
    },
    get$sendImage() {
      return "Enviar imaxe";
    },
    sendImages$1(count) {
      return "Enviar " + count + " imaxe";
    },
    get$sendMessages() {
      return "Enviar mensaxes";
    },
    get$sendVideo() {
      return "Enviar v\xeddeo";
    },
    sentAFile$1(username) {
      return "\ud83d\udcc1 " + username + " enviou un ficheiro";
    },
    sentAnAudio$1(username) {
      return "\ud83c\udfa4 " + username + " enviou un audio";
    },
    sentAPicture$1(username) {
      return "\ud83d\uddbc\ufe0f " + username + " enviou unha imaxe";
    },
    sentASticker$1(username) {
      return "\ud83d\ude0a " + username + " enviou un adhesivo";
    },
    sentAVideo$1(username) {
      return "\ud83c\udfa5 " + username + " enviou un v\xeddeo";
    },
    sentCallInformations$1(senderName) {
      return senderName + " enviou informaci\xf3n da chamada";
    },
    get$separateChatTypes() {
      return "Separar Conversas directas e Grupos";
    },
    get$setChatDescription() {
      return "Escribir descrici\xf3n da conversa";
    },
    get$setStatus() {
      return "Establecer estado";
    },
    get$settings() {
      return "Axustes";
    },
    get$share(_) {
      return "Compartir";
    },
    sharedTheLocation$1(username) {
      return username + " compartiu a s\xfaa localizaci\xf3n";
    },
    get$shareLocation() {
      return "Compartir localizaci\xf3n";
    },
    get$presencesToggle() {
      return "Mostra mensaxes de estado de outras usuarias";
    },
    get$skip(_) {
      return "Saltar";
    },
    get$sourceCode() {
      return "C\xf3digo fonte";
    },
    startedACall$1(senderName) {
      return senderName + " iniciou unha chamada";
    },
    get$status(_) {
      return "Estado";
    },
    get$statusExampleMessage() {
      return "\xbfQue tal est\xe1s hoxe?";
    },
    get$submit(_) {
      return "Enviar";
    },
    get$synchronizingPleaseWait() {
      return "Sincronizando... Agarda.";
    },
    synchronizingPleaseWaitCounter$1(percentage) {
      return " Sincronizando\u2026(" + percentage + "%)";
    },
    get$systemTheme() {
      return "Sistema";
    },
    get$theyDontMatch() {
      return "Non concordan";
    },
    get$theyMatch() {
      return "Concordan";
    },
    get$tooManyRequestsWarning() {
      return "Demasiadas solicitudes. Int\xe9ntao m\xe1is tarde!";
    },
    get$tryToSendAgain() {
      return "Int\xe9ntao outra vez";
    },
    get$unavailable() {
      return "Non dispo\xf1ible";
    },
    unbannedUser$2(username, targetName) {
      return username + " retirou o veto a " + targetName;
    },
    get$unblockDevice() {
      return "Desbloquear dispositivo";
    },
    get$unknownDevice() {
      return "Dispositivo desco\xf1ecido";
    },
    get$unknownEncryptionAlgorithm() {
      return "Algoritmo de cifraxe desco\xf1ecido";
    },
    unknownEvent$1(type) {
      return "Evento desco\xf1ecido '" + type + "'";
    },
    get$unpin() {
      return "Desafixar";
    },
    userAndOthersAreTyping$2(username, count) {
      return username + " e " + count + " m\xe1is est\xe1n escribindo\u2026";
    },
    userAndUserAreTyping$2(username, username2) {
      return username + " e " + username2 + " est\xe1n escribindo\u2026";
    },
    userIsTyping$1(username) {
      return username + " est\xe1 escribindo\u2026";
    },
    userLeftTheChat$1(username) {
      return "\ud83d\udeaa " + username + " deixou a conversa";
    },
    get$username(_) {
      return "Nome de usuaria";
    },
    userSentUnknownEvent$2(username, type) {
      return username + " enviou un evento " + type;
    },
    get$unverified() {
      return "Sen verificar";
    },
    get$verified() {
      return "Verificado";
    },
    get$verifyStart() {
      return "Comezar verificaci\xf3n";
    },
    get$verifySuccess() {
      return "Verificaches correctamente!";
    },
    get$verifyTitle() {
      return "Verificando a outra conta";
    },
    get$visibleForAllParticipants() {
      return "Visible para todas as participantes";
    },
    get$visibleForEveryone() {
      return "Visible para todas";
    },
    get$voiceMessage() {
      return "Mensaxe de voz";
    },
    get$waitingPartnerAcceptRequest() {
      return "Agardando a que a outra parte acepte a solicitude\u2026";
    },
    get$waitingPartnerEmoji() {
      return "Agardando a que a outra parte acepte as emoticonas\u2026";
    },
    get$waitingPartnerNumbers() {
      return "Agardando a que a outra parte acepte os n\xfameros\u2026";
    },
    get$warning() {
      return "Aviso!";
    },
    get$weSentYouAnEmail() {
      return "Enviamosche un email";
    },
    get$whyDoYouWantToReportThis() {
      return "Por que queres denunciar esto?";
    },
    get$withTheseAddressesRecoveryDescription() {
      return "Con estos enderezos podes recuperar o contrasinal.";
    },
    get$writeAMessage() {
      return "Escribe unha mensaxe\u2026";
    },
    get$yes() {
      return "Si";
    },
    get$you() {
      return "Ti";
    },
    get$youAreNoLongerParticipatingInThisChat() {
      return "Xa non participas desta conversa";
    },
    get$youHaveBeenBannedFromThisChat() {
      return "Foches vetada nesta conversa";
    },
    get$yourPublicKey() {
      return "A t\xfaa chave p\xfablica";
    },
    get$messageInfo() {
      return "Info da mensaxe";
    },
    get$time(_) {
      return "Hora";
    },
    get$sender() {
      return "Remitente";
    },
    get$openGallery() {
      return "Galer\xeda p\xfablica";
    },
    get$start(_) {
      return "Comezar";
    },
    get$markAsRead() {
      return "Marcar como lido";
    },
    reactedWith$2(sender, reaction) {
      return sender + " reaccionou con " + reaction;
    },
    get$pinMessage() {
      return "Fixar na sala";
    },
    get$emojis() {
      return "Emojis";
    },
    get$youRejectedTheInvitation() {
      return "Rexeitaches o convite";
    },
    get$youJoinedTheChat() {
      return "Un\xedcheste \xe1 conversa";
    },
    get$youAcceptedTheInvitation() {
      return "\ud83d\udc4d Aceptaches o convite";
    },
    youBannedUser$1(user) {
      return "Vetaches a " + user;
    },
    youHaveWithdrawnTheInvitationFor$1(user) {
      return "Retiraches o convite para " + user;
    },
    youInvitedBy$1(user) {
      return "\ud83d\udce9 " + user + " convidoute";
    },
    youInvitedUser$1(user) {
      return "\ud83d\udce9 Convidaches a " + user;
    },
    youKicked$1(user) {
      return "\ud83d\udc5e Expulsaches a " + user;
    },
    youUnbannedUser$1(user) {
      return "Retiraches o veto a " + user;
    },
    hasKnocked$1(user) {
      return "\ud83d\udeaa " + user + " petou na porta";
    },
    get$users() {
      return "Usuarias";
    },
    countFiles$1(count) {
      return "" + count + " ficheiros";
    },
    get$user() {
      return "Usuaria";
    },
    get$custom() {
      return "Personal";
    },
    get$noKeyForThisMessage() {
      return "Pode ser que a mensaxe fose enviada antes de que ti accedeses \xe1 t\xfaa conta neste dispositivo.\n\nTam\xe9n \xe9 posible que a remitente non validase o teu dispositivo ou tam\xe9n que algo fallase na conexi\xf3n a internet.\n\nPodes ler a mensaxe noutro dispositivo? Ent\xf3n podes transferila desde el! Vai a Axustes > Dispositivos e comproba que tes t\xf3dolos dispositivos verificados. Ent\xf3n cando abras a sala a pr\xf3xima vez a sincronizaci\xf3n realizarase e as chaves transmitiranse autom\xe1ticamente.\n\nNon desexas perder as chaves cando pechas sesi\xf3n ou cambias de dispositivo? Comproba nos axustes que activaches a copia de apoio das conversas.";
    },
    wasDirectChatDisplayName$1(oldDisplayName) {
      return "Conversa baleira (era " + oldDisplayName + ")";
    },
    get$reopenChat() {
      return "Reabrir conversa";
    },
    get$noOtherDevicesFound() {
      return "Non se atopan outros dispositivos";
    },
    fileIsTooBigForServer$1(max) {
      return "Non se puido enviar! O servidor s\xf3 permite anexos que non superen " + max + ".";
    },
    get$jumpToLastReadMessage() {
      return "Ir \xe1 \xfaltima mensaxe lida";
    },
    get$readUpToHere() {
      return "Lin ate aqu\xed";
    },
    get$jump() {
      return "Ir al\xe1";
    },
    get$openLinkInBrowser() {
      return "Abrir ligaz\xf3n no navegador";
    },
    get$setColorTheme() {
      return "Cor do decorado:";
    },
    get$invite() {
      return "Convidar";
    },
    get$invalidInput() {
      return "Contido non v\xe1lido!";
    },
    wrongPinEntered$1(seconds) {
      return "PIN incorrecto! Int\xe9ntao outra vez en " + seconds + " segundos...";
    },
    get$pleaseEnterANumber() {
      return "Escribe un n\xfamero maior de cero";
    },
    get$removeDevicesDescription() {
      return "Vas pechar a sesi\xf3n neste dispositivo e xa non poder\xe1s recibir mensaxes nel.";
    },
    get$banUserDescription() {
      return "Vaise vetar a usuaria na conversa e non poder\xe1 entrar outra vez ata que se retire o veto.";
    },
    get$unbanUserDescription() {
      return "A usuaria vai poder entrar outra vez na conversa se quere.";
    },
    get$kickUserDescription() {
      return "A usuaria foi expulsada pero non vetada. En conversas p\xfablicas a usuaria pode volver cando queira.";
    },
    get$makeAdminDescription() {
      return "Cando convirtas a esta usuaria en admin non poder\xe1s desfacer a acci\xf3n xa que ter\xe1 os mesmos permisos ca ti.";
    },
    get$yourGlobalUserIdIs() {
      return "O teu ID-usuaria global \xe9: ";
    },
    noUsersFoundWithQuery$1(query) {
      return 'Lamentamos non atopar ningunha usuaria con "' + query + '". Comproba se est\xe1 ben escrito.';
    },
    get$knocking() {
      return "A solicitar";
    },
    get$nothingFound() {
      return "Non atopamos nada...";
    },
    get$groupName() {
      return "Nome do grupo";
    },
    get$wrongRecoveryKey() {
      return "Desculpa... non semella ser o xeito correcto de recuperar a chave.";
    },
    get$startConversation() {
      return "Iniciar conversa";
    },
    get$commandHint_sendraw() {
      return "Enviar json sen editar";
    },
    get$leaveEmptyToClearStatus() {
      return "Deixa baleiro para limpar o teu estado.";
    },
    get$searchForUsers() {
      return "Buscar @persoas...";
    },
    get$pleaseEnterYourCurrentPassword() {
      return "Escribe o contrasinal actual";
    },
    get$newPassword() {
      return "Novo contrasinal";
    },
    get$pleaseChooseAStrongPassword() {
      return "Elixe un contrasinal forte";
    },
    get$passwordsDoNotMatch() {
      return "Os contrasinais non concordan";
    },
    get$passwordIsWrong() {
      return "O contrasinal escrito non \xe9 correcto";
    },
    get$decline() {
      return "Desbotar";
    },
    get$thisDevice() {
      return "Este dispositivo:";
    },
    get$initAppError() {
      return "Houbo un fallo ao iniciar a app";
    },
    searchIn$1(chat) {
      return 'Buscar na conversa "' + chat + '"...';
    },
    get$searchMore() {
      return "Buscar m\xe1is...";
    },
    get$gallery() {
      return "Galer\xeda";
    },
    get$files(_) {
      return "Ficheiros";
    },
    sessionLostBody$2(url, error) {
      return "Estragouse a t\xfaa sesi\xf3n. Por favor informa deste fallo \xe1s desenvolvedoras en " + url + ". A mensaxe do erro \xe9: " + error;
    },
    restoreSessionBody$2(url, error) {
      return "A app vai intentar restablecer a sesi\xf3n desde a copia de apoio. Por favor informa deste erro \xe1s desenvolvedoras en " + url + ". A mensaxe do erro \xe9: " + error;
    },
    get$sendReadReceipts() {
      return "Enviar confirmaci\xf3n de lectura";
    },
    get$sendTypingNotificationsDescription() {
      return "As outras participantes da conversa poden ver cando est\xe1s a escribir unha mensaxe.";
    },
    get$sendReadReceiptsDescription() {
      return "Outras participantes na conversa poden ver cando liches unha mensaxe.";
    },
    get$verifyOtherDevice() {
      return "\ud83d\udd10 Verificar outro dispositivo";
    },
    get$verifyOtherDeviceDescription() {
      return "Ao verificar outro dispositivo est\xe1s compartindo as chaves, aumentando a t\xfaa seguridade \ud83d\udcaa. Ao iniciar a verificaci\xf3n aparecer\xe1 unha xanela emerxente nos dous dispositivos. Nesa xanela ver\xe1s varios emojis ou n\xfameros que tes que comparar entre eles. O mellor xeito de facelo \xe9 ter os dous dispositivos contigo cando inicias o proceso de verificaci\xf3n. \ud83e\udd33";
    },
    acceptedKeyVerification$1(sender) {
      return sender + " aceptou a verificaci\xf3n da chave";
    },
    canceledKeyVerification$1(sender) {
      return sender + " desbotou a verificaci\xf3n da chave";
    },
    completedKeyVerification$1(sender) {
      return sender + " completou a verificaci\xf3n da chave";
    },
    isReadyForKeyVerification$1(sender) {
      return sender + " xa pode verificar a chave";
    },
    requestedKeyVerification$1(sender) {
      return sender + " solicitou verificar a chave";
    },
    startedKeyVerification$1(sender) {
      return sender + " comezou coa verificaci\xf3n da chave";
    },
    get$stickers() {
      return "Adhesivos";
    },
    get$commandHint_ignore() {
      return "Ignorar o ID matrix indicado";
    },
    get$commandHint_unignore() {
      return "Non ignorar o ID matrix indicado";
    },
    thereAreCountUsersBlocked$1(count) {
      return "Agora mesmo hai " + count + " usuarias bloqueadas.";
    },
    get$restricted() {
      return "Non accesible";
    },
    get$markAsUnread() {
      return "Marcar como non lido";
    },
    userLevel$1(level) {
      return "" + level + " - Usuaria";
    },
    moderatorLevel$1(level) {
      return "" + level + " - Moderadora";
    },
    adminLevel$1(level) {
      return "" + level + " - Administradora";
    },
    get$changeTheVisibilityOfChatHistory() {
      return "Cambiar a visibilidade do historial da charla";
    },
    get$changeTheCanonicalRoomAlias() {
      return "Cambiar o enderezo p\xfablico principal da charla";
    },
    get$sendRoomNotifications() {
      return "Enviar notificaci\xf3ns a @room";
    },
    get$chatPermissionsDescription() {
      return "Define que nivel de permisos son necesarios para realizar certas acci\xf3ns nesta charla. Os niveis de permiso 0, 50 e 100 normalmente representan, usuarias, moderadoras e administradoras, pero son posibles outras escalas.";
    },
    updateInstalled$1(version) {
      return "\ud83c\udf89 Instalouse a actualizaci\xf3n a " + version + "!";
    },
    get$sendCanceled() {
      return "Cancelouse o env\xedo";
    },
    get$doesNotSeemToBeAValidHomeserver() {
      return "Non semella ser un servidor de inicio compatible. \xc9 o URL correcto?";
    },
    get$calculatingFileSize() {
      return "Calculando o tama\xf1o do ficheiro\u2026";
    },
    get$prepareSendingAttachment() {
      return "Preparando o env\xedo\u2026";
    },
    get$sendingAttachment() {
      return "Enviando o anexo\u2026";
    },
    sendingAttachmentCountOfCount$2(index, $length) {
      return "Enviando o anexo " + index + " de " + $length + "\u2026";
    },
    serverLimitReached$1(seconds) {
      return "Acadouse o l\xedmite do servidor! Agarda " + seconds + " segundos\u2026";
    },
    get$noticeChatBackupDeviceVerification() {
      return "Nota: Cando conectas todos os teus dispositivos \xe1 copia de apoio da conversa quedan verificados automaticamente.";
    },
    get$continueText() {
      return "Continuar";
    },
    get$blur(_) {
      return "N\xe9boa:";
    },
    get$opacity(_) {
      return "Opacidade:";
    },
    get$setWallpaper() {
      return "Establecer fondo";
    },
    get$noContactInformationProvided() {
      return "O servidor non proporciona informaci\xf3n de contacto v\xe1lida";
    },
    get$contactServerAdmin() {
      return "Contacto con Admin do servidor";
    },
    get$contactServerSecurity() {
      return "Contacto con Seguridade do servidor";
    },
    get$supportPage() {
      return "P\xe1xina de axuda";
    },
    get$serverInformation() {
      return "Informaci\xf3n do servidor:";
    },
    get$name(_) {
      return "Nome";
    },
    get$version(_) {
      return "Versi\xf3n";
    },
    get$compress() {
      return "Comprimir";
    },
    get$boldText() {
      return "Resaltar texto";
    },
    get$italicText() {
      return "Cursiva";
    },
    get$strikeThrough() {
      return "Riscar";
    },
    get$pleaseFillOut() {
      return "Por favor completa";
    },
    get$invalidUrl() {
      return "URL non v\xe1lido";
    },
    get$addLink() {
      return "Engadir ligaz\xf3n";
    },
    get$unableToJoinChat() {
      return "Non se puido acceder. Pode que a outra parte xa pechase a conversa.";
    },
    get$previous() {
      return "Anterior";
    },
    get$otherPartyNotLoggedIn() {
      return "A outra parte non est\xe1 conectada neste momento e pode que non reciba as mensaxes!";
    },
    get$open(_) {
      return "Abrir";
    },
    get$waitingForServer() {
      return "Agardando polo servidor\u2026";
    },
    get$newChatRequest() {
      return "\ud83d\udce9 Nova solicitude de conversa";
    },
    get$contentNotificationSettings() {
      return "Axustes de notificaci\xf3n de contido";
    },
    get$generalNotificationSettings() {
      return "Axustes xerais das notificaci\xf3ns";
    },
    get$roomNotificationSettings() {
      return "Axustes de notificaci\xf3ns da sala";
    },
    get$userSpecificNotificationSettings() {
      return "Axustes de notificaci\xf3n espec\xedficos da usuaria";
    },
    get$otherNotificationSettings() {
      return "Outros axustes das notificaci\xf3ns";
    },
    get$notificationRuleContainsUserName() {
      return "Cont\xe9n nome de usuaria";
    },
    get$notificationRuleContainsUserNameDescription() {
      return "Informa \xe1 usuaria cando unha mensaxe cont\xe9n o seu identificador.";
    },
    get$notificationRuleMaster() {
      return "Acalar todas as notificaci\xf3ns";
    },
    get$notificationRuleMasterDescription() {
      return "Sobrescribe todas as outras regras e desactiva todas as notificaci\xf3ns.";
    },
    get$notificationRuleSuppressNotices() {
      return "Suprimir mensaxes automatizadas";
    },
    get$notificationRuleSuppressNoticesDescription() {
      return "Suprime as notificaci\xf3ns desde clientes automatizados como os robots.";
    },
    get$notificationRuleInviteForMe() {
      return "Te\xf1o un convite";
    },
    get$notificationRuleInviteForMeDescription() {
      return "Informa \xe1 usuaria de que recibeu o convite para unha sala.";
    },
    get$notificationRuleMemberEvent() {
      return "Eventos dos participantes";
    },
    get$notificationRuleMemberEventDescription() {
      return "Suprime as notificaci\xf3ns dos eventos de participaci\xf3n.";
    },
    get$notificationRuleIsUserMention() {
      return "Menci\xf3n da usuaria";
    },
    get$notificationRuleIsUserMentionDescription() {
      return "Informa cando se menciona expl\xedcitamente a usuaria nunha mensaxe.";
    },
    get$notificationRuleContainsDisplayName() {
      return "Cont\xe9n o nome p\xfablico";
    },
    get$notificationRuleContainsDisplayNameDescription() {
      return "Informa \xe1 usuaria cando unha mensaxe cont\xe9n o seu nome p\xfablico.";
    },
    get$notificationRuleIsRoomMention() {
      return "Menci\xf3n da sala";
    },
    get$notificationRuleIsRoomMentionDescription() {
      return "Informa \xe1 usuaria cando hai unha menci\xf3n da sala.";
    },
    get$notificationRuleRoomnotif() {
      return "Notificaci\xf3n da sala";
    },
    get$notificationRuleRoomnotifDescription() {
      return "Informa \xe1 usuaria cando unha mensaxe cont\xe9n '@room'.";
    },
    get$notificationRuleTombstone() {
      return "L\xe1pida";
    },
    get$notificationRuleTombstoneDescription() {
      return "Informa \xe1 usuaria sobre a desactivaci\xf3n de mensaxes na sala.";
    },
    get$notificationRuleReaction() {
      return "Reacci\xf3n";
    },
    get$notificationRuleReactionDescription() {
      return "Omite as notificaci\xf3ns sobre reacci\xf3ns.";
    },
    get$notificationRuleRoomServerAcl() {
      return "ACL da servidor da sala";
    },
    get$notificationRuleRoomServerAclDescription() {
      return "Omite notificaci\xf3ns para as listas de control de acceso (ACL) do servidor da sala.";
    },
    get$notificationRuleSuppressEdits() {
      return "Omite edici\xf3ns";
    },
    get$notificationRuleSuppressEditsDescription() {
      return "Omite as notificaci\xf3ns sobre mensaxes editadas.";
    },
    get$notificationRuleCall() {
      return "Chamada";
    },
    get$notificationRuleCallDescription() {
      return "Informa \xe1 usuaria sobre as chamadas.";
    },
    get$notificationRuleEncryptedRoomOneToOne() {
      return "Sala cifrada conversa persoal";
    },
    get$notificationRuleEncryptedRoomOneToOneDescription() {
      return "Informa \xe1 usuaria sobre mensaxes cifradas en salas de conversa persoal.";
    },
    get$notificationRuleRoomOneToOne() {
      return "Sala de conversa persoal";
    },
    get$notificationRuleRoomOneToOneDescription() {
      return "Informa \xe1 usuaria sobre mensaxes en salas de conversa persoal.";
    },
    get$notificationRuleMessage() {
      return "Mensaxe";
    },
    get$notificationRuleMessageDescription() {
      return "Informa \xe1 usuaria sobre mensaxes xen\xe9ricas.";
    },
    get$notificationRuleEncrypted() {
      return "Salas cifradas";
    },
    get$notificationRuleEncryptedDescription() {
      return "Informa \xe1 usuaria sobre mensaxes en salas cifradas.";
    },
    get$notificationRuleJitsi() {
      return "Jitsi";
    },
    get$notificationRuleJitsiDescription() {
      return "Informa \xe1 usuaria sobre eventos do widget Jitsi.";
    },
    get$notificationRuleServerAcl() {
      return "Omite eventos do sevidor ACL";
    },
    get$notificationRuleServerAclDescription() {
      return "Omite notificaci\xf3n sobre eventos do servidor ACL.";
    },
    unknownPushRule$1(rule) {
      return "Regra push desco\xf1ecida '" + rule + "'";
    },
    sentVoiceMessage$2(sender, duration) {
      return "\ud83c\udf99\ufe0f " + duration + " - Mensaxe de voz de  " + sender;
    },
    get$deletePushRuleCanNotBeUndone() {
      return "Se omites este axuste de notificaci\xf3ns non poder\xe1s desfacer a acci\xf3n.";
    },
    get$more() {
      return "M\xe1is";
    },
    get$shareKeysWith() {
      return "Compartir chaves con\u2026";
    },
    get$shareKeysWithDescription() {
      return "En que dispositivos se pode confiar e poden ler as t\xfaas conversas cifradas?";
    },
    get$allDevices() {
      return "Todos os dispositivos";
    },
    get$crossVerifiedDevicesIfEnabled() {
      return "Dispositivos verificados se est\xe1 activado";
    },
    get$crossVerifiedDevices() {
      return "Dispositivos verificados";
    },
    get$verifiedDevicesOnly() {
      return "S\xf3 dispositivos verificados";
    },
    get$optionalMessage() {
      return "(Optativo) mensaxe\u2026";
    },
    get$notSupportedOnThisDevice() {
      return "Non compatible co dispositivo";
    },
    get$enterNewChat() {
      return "Entrar na nova conversa";
    },
    get$approve() {
      return "Aprobar";
    },
    get$commandHint_logout() {
      return "Fechar a sesi\xf3n no dispositivo actual";
    },
    get$commandHint_logoutall() {
      return "Fechar a sesi\xf3n en todos os dispositivos activos";
    },
    get$customReaction() {
      return "Custom reaction";
    },
    writeAMessageLangCodes$2(l1, l2) {
      return "Type in " + l1 + " or " + l2 + "...";
    },
    get$holdForInfo() {
      return "Click and hold for word info.";
    },
    get$greenFeedback() {
      return "That's what I would put!";
    },
    get$yellowFeedback() {
      return "Hm, you can try that and see if it works! To use this word, just click it again.";
    },
    get$redFeedback() {
      return "I don't think that's right...";
    },
    get$gaTooltip() {
      return "L2 use with grammar assistance";
    },
    get$taTooltip() {
      return "L2 use with translation assistance";
    },
    get$interactiveTranslatorSliderHeader() {
      return "Interactive Translator";
    },
    get$interactiveGrammarSliderHeader() {
      return "Interactive Grammar Checker";
    },
    get$waTooltip() {
      return "L2 use without assistance";
    },
    get$noIdenticalLanguages() {
      return "Please choose different base and target languages";
    },
    get$joinWithClassCode() {
      return "Join course";
    },
    get$languageLevelPreA1() {
      return "True Beginner (Pre A1)";
    },
    get$languageLevelA1() {
      return "Beginner (A1)";
    },
    get$languageLevelA2() {
      return "Elementary (A2)";
    },
    get$languageLevelB1() {
      return "Intermediate (B1)";
    },
    get$languageLevelB2() {
      return "Upper Intermediate (B2)";
    },
    get$languageLevelC1() {
      return "Advanced (C1)";
    },
    get$languageLevelC2() {
      return "Mastery (C2)";
    },
    get$changeTheNameOfTheClass() {
      return "Change the name";
    },
    get$changeTheNameOfTheChat() {
      return "Change the name of the chat";
    },
    get$sorryNoResults() {
      return "Sorry, no results.";
    },
    get$ignoreInThisText() {
      return "Ignore";
    },
    needsItMessage$1(targetLanguage) {
      return "Wait, that's not " + targetLanguage + "! Do you need help translating?";
    },
    get$countryInformation() {
      return "My country";
    },
    get$targetLanguage() {
      return "Target Language";
    },
    get$updateLanguage() {
      return "My languages";
    },
    get$whatLanguageYouWantToLearn() {
      return "What language do you want to learn?";
    },
    get$whatIsYourBaseLanguage() {
      return "What is your base language?";
    },
    get$saveChanges() {
      return "Save changes";
    },
    get$publicProfileTitle() {
      return "Allow my profile to be found in search";
    },
    get$publicProfileDesc() {
      return "By turning on, you enable other users to find your profile in the global search bar and send requests to chat. At this point, you can choose to accept or deny the request.";
    },
    get$errorDisableIT() {
      return "Translation assistance is turned off.";
    },
    get$errorDisableIGC() {
      return "Grammar assistance is turned off.";
    },
    get$errorDisableLanguageAssistance() {
      return "Translation assistance and grammar assistance are turned off.";
    },
    get$errorDisableITUserDesc() {
      return "Click here to update translation assistance settings";
    },
    get$errorDisableIGCUserDesc() {
      return "Click here to update grammar assistance settings";
    },
    get$errorDisableLanguageAssistanceUserDesc() {
      return "Click here to update translation assistance and grammar assistance settings";
    },
    get$errorDisableITClassDesc() {
      return "Translation assistance is turned off for the course that this chat is in.";
    },
    get$errorDisableIGCClassDesc() {
      return "Grammar assistance is turned off for the course that this chat is in.";
    },
    get$error405Title() {
      return "Languages not set";
    },
    get$error405Desc() {
      return "Please set your languages in Main Menu > Learning Settings.";
    },
    get$termsAndConditions() {
      return "Terms and Conditions";
    },
    get$andCertifyIAmAtLeast13YearsOfAge() {
      return " and certify I am at least 16 years of age.";
    },
    get$error502504Title() {
      return "Wow, there are a lot of students online!";
    },
    get$error502504Desc() {
      return "Translation and grammar tools may be slow or unavailable while the Pangea bots catch up.";
    },
    get$error404Title() {
      return "Translation error!";
    },
    get$error404Desc() {
      return "Pangea Bot isn't sure how to translate that...";
    },
    get$errorPleaseRefresh() {
      return "We're looking into it! Please reload and try again.";
    },
    get$connectedToStaging() {
      return "Connected to Staging";
    },
    get$learningSettings() {
      return "Learning settings";
    },
    get$participants() {
      return "Participants";
    },
    get$clickMessageTitle() {
      return "Need help?";
    },
    get$clickMessageBody() {
      return "Click a message for language tools like translation, play back and more!";
    },
    get$allDone() {
      return "All done!";
    },
    get$vocab() {
      return "Vocab";
    },
    get$subscribe(_) {
      return "Subscribe";
    },
    get$getAccess() {
      return "Subscribe now!";
    },
    get$subscriptionDesc() {
      return "Messaging is free! Subscribe to unlock interactive translation, grammar checking and learning analytics.";
    },
    get$subscriptionManagement() {
      return "Subscription Management";
    },
    get$currentSubscription() {
      return "Current Subscription";
    },
    get$cancelSubscription() {
      return "Cancel your subscription";
    },
    get$selectYourPlan() {
      return "Select Your Plan";
    },
    get$subsciptionPlatformTooltip() {
      return "Please login to your original device to manage your subscription plan";
    },
    get$subscriptionManagementUnavailable() {
      return "Subscription management not available";
    },
    get$paymentMethod() {
      return "Payment Method";
    },
    get$paymentHistory() {
      return "Payment History";
    },
    get$emptyChatDownloadWarning() {
      return "Cannot download empty chat";
    },
    get$toggleImmersionMode() {
      return "Immersion Mode";
    },
    get$toggleImmersionModeDesc() {
      return "When enabled, all messages are displayed in your target language. This setting is most useful in language exchanges.";
    },
    get$itToggleDescription() {
      return "This language learning tool will identify words in your base language and help you translate them to your target language. Though rare, the AI can make translation errors.";
    },
    get$igcToggleDescription() {
      return "This language learning tool will identify common spelling, grammar and punctuation errors in your message and suggest corrections. Though rare, the AI can make correction errors.";
    },
    get$originalMessage() {
      return "Original Message";
    },
    get$sentMessage() {
      return "Sent Message";
    },
    get$useType() {
      return "Use Type";
    },
    get$notAvailable() {
      return "Not Available";
    },
    get$taAndGaTooltip() {
      return "L2 use with translation assistance and grammar assistance";
    },
    get$definitionsToolName() {
      return "Word Definitions";
    },
    get$definitionsToolDescription() {
      return "When enabled, words underlined in blue can be clicked for definitions. Click messages to access definitions.";
    },
    get$welcomeBack() {
      return "Welcome back! If you were part of the 2023-2024 pilot, please contact us for your special pilot subscription. If you are a teacher who has (or whose institution has) purchased licenses for your class, contact us for your teacher subscription.";
    },
    get$downloadTxtFile() {
      return "Download Text File";
    },
    get$downloadCSVFile() {
      return "Download CSV File";
    },
    get$promotionalSubscriptionDesc() {
      return "You currently have a lifetime promotional subscription. Message support@pangea.chat for help changing your subscription.";
    },
    originalSubscriptionPlatform$1(purchasePlatform) {
      return "Subscription purchased through " + purchasePlatform;
    },
    get$oneWeekTrial() {
      return "One Week Trial";
    },
    get$downloadXLSXFile() {
      return "Download Excel File";
    },
    get$unkDisplayName() {
      return "Unknown";
    },
    get$wwCountryDisplayName() {
      return "World Wide";
    },
    get$afCountryDisplayName() {
      return "Afghanistan";
    },
    get$axCountryDisplayName() {
      return "Aland Islands";
    },
    get$alCountryDisplayName() {
      return "Albania";
    },
    get$dzCountryDisplayName() {
      return "Algeria";
    },
    get$asCountryDisplayName() {
      return "American Samoa";
    },
    get$adCountryDisplayName() {
      return "Andorra";
    },
    get$aoCountryDisplayName() {
      return "Angola";
    },
    get$aiCountryDisplayName() {
      return "Anguilla";
    },
    get$agCountryDisplayName() {
      return "Antigua and Barbuda";
    },
    get$arCountryDisplayName() {
      return "Argentina";
    },
    get$amCountryDisplayName() {
      return "Armenia";
    },
    get$awCountryDisplayName() {
      return "Aruba";
    },
    get$acCountryDisplayName() {
      return "Ascension Island";
    },
    get$auCountryDisplayName() {
      return "Australia";
    },
    get$atCountryDisplayName() {
      return "Austria";
    },
    get$azCountryDisplayName() {
      return "Azerbaijan";
    },
    get$bsCountryDisplayName() {
      return "Bahamas";
    },
    get$bhCountryDisplayName() {
      return "Bahrain";
    },
    get$bdCountryDisplayName() {
      return "Bangladesh";
    },
    get$bbCountryDisplayName() {
      return "Barbados";
    },
    get$byCountryDisplayName() {
      return "Belarus";
    },
    get$beCountryDisplayName() {
      return "Belgium";
    },
    get$bzCountryDisplayName() {
      return "Belize";
    },
    get$bjCountryDisplayName() {
      return "Benin";
    },
    get$bmCountryDisplayName() {
      return "Bermuda";
    },
    get$btCountryDisplayName() {
      return "Bhutan";
    },
    get$boCountryDisplayName() {
      return "Bolivia";
    },
    get$baCountryDisplayName() {
      return "Bosnia and Herzegovina";
    },
    get$bwCountryDisplayName() {
      return "Botswana";
    },
    get$brCountryDisplayName() {
      return "Brazil";
    },
    get$ioCountryDisplayName() {
      return "British Indian Ocean Territory";
    },
    get$vgCountryDisplayName() {
      return "British Virgin Islands";
    },
    get$bnCountryDisplayName() {
      return "Brunei";
    },
    get$bgCountryDisplayName() {
      return "Bulgaria";
    },
    get$bfCountryDisplayName() {
      return "Burkina Faso";
    },
    get$biCountryDisplayName() {
      return "Burundi";
    },
    get$khCountryDisplayName() {
      return "Cambodia";
    },
    get$cmCountryDisplayName() {
      return "Cameroon";
    },
    get$caCountryDisplayName() {
      return "Canada";
    },
    get$cvCountryDisplayName() {
      return "Cape Verde";
    },
    get$bqCountryDisplayName() {
      return "Caribbean Netherlands";
    },
    get$kyCountryDisplayName() {
      return "Cayman Islands";
    },
    get$cfCountryDisplayName() {
      return "Central African Republic";
    },
    get$tdCountryDisplayName() {
      return "Chad";
    },
    get$clCountryDisplayName() {
      return "Chile";
    },
    get$cnCountryDisplayName() {
      return "China";
    },
    get$cxCountryDisplayName() {
      return "Christmas Island";
    },
    get$ccCountryDisplayName() {
      return "Cocos [Keeling] Islands";
    },
    get$coCountryDisplayName() {
      return "Colombia";
    },
    get$kmCountryDisplayName() {
      return "Comoros";
    },
    get$cdCountryDisplayName() {
      return "Democratic Republic Congo";
    },
    get$cgCountryDisplayName() {
      return "Republic of Congo";
    },
    get$ckCountryDisplayName() {
      return "Cook Islands";
    },
    get$crCountryDisplayName() {
      return "Costa Rica";
    },
    get$ciCountryDisplayName() {
      return "C\xf4te d'Ivoire";
    },
    get$hrCountryDisplayName() {
      return "Croatia";
    },
    get$cuCountryDisplayName() {
      return "Cuba";
    },
    get$cwCountryDisplayName() {
      return "Cura\xe7ao";
    },
    get$cyCountryDisplayName() {
      return "Cyprus";
    },
    get$czCountryDisplayName() {
      return "Czech Republic";
    },
    get$dkCountryDisplayName() {
      return "Denmark";
    },
    get$djCountryDisplayName() {
      return "Djibouti";
    },
    get$dmCountryDisplayName() {
      return "Dominica";
    },
    get$doCountryDisplayName() {
      return "Dominican Republic";
    },
    get$tlCountryDisplayName() {
      return "East Timor";
    },
    get$ecCountryDisplayName() {
      return "Ecuador";
    },
    get$egCountryDisplayName() {
      return "Egypt";
    },
    get$svCountryDisplayName() {
      return "El Salvador";
    },
    get$gqCountryDisplayName() {
      return "Equatorial Guinea";
    },
    get$erCountryDisplayName() {
      return "Eritrea";
    },
    get$eeCountryDisplayName() {
      return "Estonia";
    },
    get$szCountryDisplayName() {
      return "Eswatini";
    },
    get$etCountryDisplayName() {
      return "Ethiopia";
    },
    get$fkCountryDisplayName() {
      return "Falkland Islands";
    },
    get$foCountryDisplayName() {
      return "Faroe Islands";
    },
    get$fjCountryDisplayName() {
      return "Fiji";
    },
    get$fiCountryDisplayName() {
      return "Finland";
    },
    get$frCountryDisplayName() {
      return "France";
    },
    get$gfCountryDisplayName() {
      return "French Guiana";
    },
    get$pfCountryDisplayName() {
      return "French Polynesia";
    },
    get$gaCountryDisplayName() {
      return "Gabon";
    },
    get$gmCountryDisplayName() {
      return "Gambia";
    },
    get$geCountryDisplayName() {
      return "Georgia";
    },
    get$deCountryDisplayName() {
      return "Germany";
    },
    get$ghCountryDisplayName() {
      return "Ghana";
    },
    get$giCountryDisplayName() {
      return "Gibraltar";
    },
    get$grCountryDisplayName() {
      return "Greece";
    },
    get$glCountryDisplayName() {
      return "Greenland";
    },
    get$gdCountryDisplayName() {
      return "Grenada";
    },
    get$gpCountryDisplayName() {
      return "Guadeloupe";
    },
    get$guCountryDisplayName() {
      return "Guam";
    },
    get$gtCountryDisplayName() {
      return "Guatemala";
    },
    get$ggCountryDisplayName() {
      return "Guernsey";
    },
    get$gnCountryDisplayName() {
      return "Guinea Conakry";
    },
    get$gwCountryDisplayName() {
      return "Guinea-Bissau";
    },
    get$gyCountryDisplayName() {
      return "Guyana";
    },
    get$htCountryDisplayName() {
      return "Haiti";
    },
    get$hmCountryDisplayName() {
      return "Heard Island and McDonald Islands";
    },
    get$hnCountryDisplayName() {
      return "Honduras";
    },
    get$hkCountryDisplayName() {
      return "Hong Kong";
    },
    get$huCountryDisplayName() {
      return "Hungary";
    },
    get$isCountryDisplayName() {
      return "Iceland";
    },
    get$inCountryDisplayName() {
      return "India";
    },
    get$idCountryDisplayName() {
      return "Indonesia";
    },
    get$irCountryDisplayName() {
      return "Iran";
    },
    get$iqCountryDisplayName() {
      return "Iraq";
    },
    get$ieCountryDisplayName() {
      return "Ireland";
    },
    get$imCountryDisplayName() {
      return "Isle of Man";
    },
    get$ilCountryDisplayName() {
      return "Israel";
    },
    get$itCountryDisplayName() {
      return "Italy";
    },
    get$jmCountryDisplayName() {
      return "Jamaica";
    },
    get$jpCountryDisplayName() {
      return "Japan";
    },
    get$jeCountryDisplayName() {
      return "Jersey";
    },
    get$joCountryDisplayName() {
      return "Jordan";
    },
    get$kzCountryDisplayName() {
      return "Kazakhstan";
    },
    get$keCountryDisplayName() {
      return "Kenya";
    },
    get$kiCountryDisplayName() {
      return "Kiribati";
    },
    get$xkCountryDisplayName() {
      return "Kosovo";
    },
    get$kwCountryDisplayName() {
      return "Kuwait";
    },
    get$kgCountryDisplayName() {
      return "Kyrgyzstan";
    },
    get$laCountryDisplayName() {
      return "Laos";
    },
    get$lvCountryDisplayName() {
      return "Latvia";
    },
    get$lbCountryDisplayName() {
      return "Lebanon";
    },
    get$lsCountryDisplayName() {
      return "Lesotho";
    },
    get$lrCountryDisplayName() {
      return "Liberia";
    },
    get$lyCountryDisplayName() {
      return "Libya";
    },
    get$liCountryDisplayName() {
      return "Liechtenstein";
    },
    get$ltCountryDisplayName() {
      return "Lithuania";
    },
    get$luCountryDisplayName() {
      return "Luxembourg";
    },
    get$moCountryDisplayName() {
      return "Macau";
    },
    get$mkCountryDisplayName() {
      return "Macedonia";
    },
    get$mgCountryDisplayName() {
      return "Madagascar";
    },
    get$mwCountryDisplayName() {
      return "Malawi";
    },
    get$myCountryDisplayName() {
      return "Malaysia";
    },
    get$mvCountryDisplayName() {
      return "Maldives";
    },
    get$mlCountryDisplayName() {
      return "Mali";
    },
    get$mtCountryDisplayName() {
      return "Malta";
    },
    get$mhCountryDisplayName() {
      return "Marshall Islands";
    },
    get$mqCountryDisplayName() {
      return "Martinique";
    },
    get$mrCountryDisplayName() {
      return "Mauritania";
    },
    get$muCountryDisplayName() {
      return "Mauritius";
    },
    get$ytCountryDisplayName() {
      return "Mayotte";
    },
    get$mxCountryDisplayName() {
      return "Mexico";
    },
    get$fmCountryDisplayName() {
      return "Micronesia";
    },
    get$mdCountryDisplayName() {
      return "Moldova";
    },
    get$mcCountryDisplayName() {
      return "Monaco";
    },
    get$mnCountryDisplayName() {
      return "Mongolia";
    },
    get$meCountryDisplayName() {
      return "Montenegro";
    },
    get$msCountryDisplayName() {
      return "Montserrat";
    },
    get$maCountryDisplayName() {
      return "Morocco";
    },
    get$mzCountryDisplayName() {
      return "Mozambique";
    },
    get$mmCountryDisplayName() {
      return "Myanmar (Burma)";
    },
    get$naCountryDisplayName() {
      return "Namibia";
    },
    get$nrCountryDisplayName() {
      return "Nauru";
    },
    get$npCountryDisplayName() {
      return "Nepal";
    },
    get$nlCountryDisplayName() {
      return "Netherlands";
    },
    get$ncCountryDisplayName() {
      return "New Caledonia";
    },
    get$nzCountryDisplayName() {
      return "New Zealand";
    },
    get$niCountryDisplayName() {
      return "Nicaragua";
    },
    get$neCountryDisplayName() {
      return "Niger";
    },
    get$ngCountryDisplayName() {
      return "Nigeria";
    },
    get$nuCountryDisplayName() {
      return "Niue";
    },
    get$nfCountryDisplayName() {
      return "Norfolk Island";
    },
    get$kpCountryDisplayName() {
      return "North Korea";
    },
    get$mpCountryDisplayName() {
      return "Northern Mariana Islands";
    },
    get$noCountryDisplayName() {
      return "Norway";
    },
    get$omCountryDisplayName() {
      return "Oman";
    },
    get$pkCountryDisplayName() {
      return "Pakistan";
    },
    get$pwCountryDisplayName() {
      return "Palau";
    },
    get$psCountryDisplayName() {
      return "Palestinian Territories";
    },
    get$paCountryDisplayName() {
      return "Panama";
    },
    get$pgCountryDisplayName() {
      return "Papua New Guinea";
    },
    get$pyCountryDisplayName() {
      return "Paraguay";
    },
    get$peCountryDisplayName() {
      return "Peru";
    },
    get$phCountryDisplayName() {
      return "Philippines";
    },
    get$plCountryDisplayName() {
      return "Poland";
    },
    get$ptCountryDisplayName() {
      return "Portugal";
    },
    get$prCountryDisplayName() {
      return "Puerto Rico";
    },
    get$qaCountryDisplayName() {
      return "Qatar";
    },
    get$reCountryDisplayName() {
      return "R\xe9union";
    },
    get$roCountryDisplayName() {
      return "Romania";
    },
    get$ruCountryDisplayName() {
      return "Russia";
    },
    get$rwCountryDisplayName() {
      return "Rwanda";
    },
    get$blCountryDisplayName() {
      return "Saint Barth\xe9lemy";
    },
    get$shCountryDisplayName() {
      return "Saint Helena";
    },
    get$knCountryDisplayName() {
      return "St. Kitts";
    },
    get$lcCountryDisplayName() {
      return "St. Lucia";
    },
    get$mfCountryDisplayName() {
      return "Saint Martin";
    },
    get$pmCountryDisplayName() {
      return "Saint Pierre and Miquelon";
    },
    get$vcCountryDisplayName() {
      return "St. Vincent";
    },
    get$wsCountryDisplayName() {
      return "Samoa";
    },
    get$smCountryDisplayName() {
      return "San Marino";
    },
    get$stCountryDisplayName() {
      return "S\xe3o Tom\xe9 and Pr\xedncipe";
    },
    get$saCountryDisplayName() {
      return "Saudi Arabia";
    },
    get$snCountryDisplayName() {
      return "Senegal";
    },
    get$rsCountryDisplayName() {
      return "Serbia";
    },
    get$scCountryDisplayName() {
      return "Seychelles";
    },
    get$slCountryDisplayName() {
      return "Sierra Leone";
    },
    get$sgCountryDisplayName() {
      return "Singapore";
    },
    get$sxCountryDisplayName() {
      return "Sint Maarten";
    },
    get$skCountryDisplayName() {
      return "Slovakia";
    },
    get$siCountryDisplayName() {
      return "Slovenia";
    },
    get$sbCountryDisplayName() {
      return "Solomon Islands";
    },
    get$soCountryDisplayName() {
      return "Somalia";
    },
    get$zaCountryDisplayName() {
      return "South Africa";
    },
    get$gsCountryDisplayName() {
      return "South Georgia and the South Sandwich Islands";
    },
    get$krCountryDisplayName() {
      return "South Korea";
    },
    get$ssCountryDisplayName() {
      return "South Sudan";
    },
    get$esCountryDisplayName() {
      return "Spain";
    },
    get$lkCountryDisplayName() {
      return "Sri Lanka";
    },
    get$sdCountryDisplayName() {
      return "Sudan";
    },
    get$srCountryDisplayName() {
      return "Suriname";
    },
    get$sjCountryDisplayName() {
      return "Svalbard and Jan Mayen";
    },
    get$seCountryDisplayName() {
      return "Sweden";
    },
    get$chCountryDisplayName() {
      return "Switzerland";
    },
    get$syCountryDisplayName() {
      return "Syria";
    },
    get$twCountryDisplayName() {
      return "Taiwan";
    },
    get$tjCountryDisplayName() {
      return "Tajikistan";
    },
    get$tzCountryDisplayName() {
      return "Tanzania";
    },
    get$thCountryDisplayName() {
      return "Thailand";
    },
    get$tgCountryDisplayName() {
      return "Togo";
    },
    get$tkCountryDisplayName() {
      return "Tokelau";
    },
    get$toCountryDisplayName() {
      return "Tonga";
    },
    get$ttCountryDisplayName() {
      return "Trinidad/Tobago";
    },
    get$tnCountryDisplayName() {
      return "Tunisia";
    },
    get$trCountryDisplayName() {
      return "Turkey";
    },
    get$tmCountryDisplayName() {
      return "Turkmenistan";
    },
    get$tcCountryDisplayName() {
      return "Turks and Caicos Islands";
    },
    get$tvCountryDisplayName() {
      return "Tuvalu";
    },
    get$viCountryDisplayName() {
      return "U.S. Virgin Islands";
    },
    get$ugCountryDisplayName() {
      return "Uganda";
    },
    get$uaCountryDisplayName() {
      return "Ukraine";
    },
    get$aeCountryDisplayName() {
      return "United Arab Emirates";
    },
    get$gbCountryDisplayName() {
      return "United Kingdom";
    },
    get$usCountryDisplayName() {
      return "United States";
    },
    get$uyCountryDisplayName() {
      return "Uruguay";
    },
    get$uzCountryDisplayName() {
      return "Uzbekistan";
    },
    get$vuCountryDisplayName() {
      return "Vanuatu";
    },
    get$vaCountryDisplayName() {
      return "Vatican City";
    },
    get$veCountryDisplayName() {
      return "Venezuela";
    },
    get$vnCountryDisplayName() {
      return "Vietnam";
    },
    get$wfCountryDisplayName() {
      return "Wallis and Futuna";
    },
    get$ehCountryDisplayName() {
      return "Western Sahara";
    },
    get$yeCountryDisplayName() {
      return "Yemen";
    },
    get$zmCountryDisplayName() {
      return "Zambia";
    },
    get$zwCountryDisplayName() {
      return "Zimbabwe";
    },
    get$pay() {
      return "Pay";
    },
    invitedToSpace$2(space, user) {
      return user + " has invited you to join a course: " + space + "! Do you wish to accept?";
    },
    get$youreInvited() {
      return "\ud83d\udce9 You're invited!";
    },
    invitedToChat$2($name, user) {
      return user + " has invited you to join a chat: " + $name + "! Do you wish to accept?";
    },
    get$monthlySubscription() {
      return "Monthly";
    },
    get$yearlySubscription() {
      return "Yearly";
    },
    get$defaultSubscription() {
      return "Pangea Chat Subscription";
    },
    get$freeTrial() {
      return "Free Trial";
    },
    get$noDataFound() {
      return "No data found";
    },
    get$bestCorrectionFeedback() {
      return "That's correct!";
    },
    get$distractorFeedback() {
      return "That's not quite right.";
    },
    get$bestAnswerFeedback() {
      return "That's correct!";
    },
    get$definitionDefaultPrompt() {
      return "What does this word mean?";
    },
    get$practiceDefaultPrompt() {
      return "What is the best answer?";
    },
    get$correctionDefaultPrompt() {
      return "What is the best replacement?";
    },
    get$reportToTeacher() {
      return "Who do you want to report this message to?";
    },
    reportMessageTitle$3(reportingUserId, reportedUserId, roomName) {
      return reportingUserId + " has reported a message from " + reportedUserId + " in the chat " + roomName;
    },
    reportMessageBody$2(reportedMessage, reason) {
      return "Message: " + reportedMessage + "\nReason: " + reason;
    },
    get$noTeachersFound() {
      return "No teachers found to report to";
    },
    trialExpiration$1(expiration) {
      return "Your free trial expires on " + expiration;
    },
    get$freeTrialDesc() {
      return "New users recieve a one week free trial of Pangea Chat";
    },
    get$activateTrial() {
      return "Free 7-Day Trial";
    },
    get$successfullySubscribed() {
      return "You have successfully subscribed!";
    },
    get$clickToManageSubscription() {
      return "Click here to manage your subscription.";
    },
    pleaseChooseAtLeastChars$1(min) {
      return "Please choose at least " + min + " characters.";
    },
    get$pleaseEnterValidEmail() {
      return "Please enter a valid email address.";
    },
    get$pleaseChooseAUsername() {
      return "Please choose a username";
    },
    get$listen() {
      return "Listen";
    },
    get$trialPeriodExpired() {
      return "Your trial period has expired";
    },
    get$subscribedToUnlockTools() {
      return "Subscribe to unlock interactive translation and grammar checking, audio playback, personalized practice activities, and learning analytics!";
    },
    get$translationTooltip() {
      return "Translate";
    },
    get$speechToTextTooltip() {
      return "Transcript";
    },
    get$kickBotWarning() {
      return "Kicking Pangea Bot will remove the conversation bot from this chat.";
    },
    get$refresh(_) {
      return "Refresh";
    },
    get$updatePhoneOS() {
      return "You may need to update your device's OS version.";
    },
    get$autoIGCToolName() {
      return "Run Pangea writing assistance automatically";
    },
    get$autoIGCToolDescription() {
      return "Automatically run Pangea Chat grammar and translation writing assistance before sending my message.";
    },
    get$chatCapacity() {
      return "Chat capacity";
    },
    get$roomFull() {
      return "This room is already at capacity.";
    },
    get$chatCapacityHasBeenChanged() {
      return "Chat capacity changed";
    },
    chatCapacitySetTooLow$1(count) {
      return "Chat capacity must be at least " + count + ".";
    },
    get$chatCapacityExplanation() {
      return "Chat capacity limits the number of members allowed in a chat.";
    },
    get$enterNumber() {
      return "Please enter a whole number value.";
    },
    get$buildTranslation() {
      return "Build your translation from the choices above";
    },
    get$practice() {
      return "Practice";
    },
    get$noLanguagesSet() {
      return "No languages set";
    },
    get$speechToTextBody() {
      return "For voice messages, you can see a transcript as well as the speaker's Words Per Minute score.";
    },
    get$versionNotFound() {
      return "Version Not Found";
    },
    get$fetchingVersion() {
      return "Fetching version...";
    },
    get$versionFetchError() {
      return "Error fetching version";
    },
    versionText$2(version, buildNumber) {
      return "Version: " + version + "+" + buildNumber;
    },
    get$l1TranslationBody() {
      return "Messages in your base language will not be translated.";
    },
    get$deleteSubscriptionWarningTitle() {
      return "You have an active subscription";
    },
    get$deleteSubscriptionWarningBody() {
      return "Deleting your account will not automatically cancel your subscription.";
    },
    get$manageSubscription() {
      return "Manage Subscription";
    },
    get$error520Title() {
      return "Please try again.";
    },
    get$error520Desc() {
      return "Sorry, we could not understand your message...";
    },
    get$level(_) {
      return "Level";
    },
    get$translationChoicesBody() {
      return "Click and hold an option for a hint.";
    },
    get$grammar() {
      return "Grammar";
    },
    get$contactHasBeenInvitedToTheChat() {
      return "Contact has been invited to the chat";
    },
    get$inviteChat() {
      return "\ud83d\udce8 Invite chat";
    },
    get$chatName() {
      return "Chat name";
    },
    get$l2SupportNa() {
      return "Not Available";
    },
    get$l2SupportAlpha() {
      return "Alpha";
    },
    get$l2SupportBeta() {
      return "Beta";
    },
    get$l2SupportFull() {
      return "Full";
    },
    get$playAudio() {
      return "Play";
    },
    get$stop(_) {
      return "Stop";
    },
    get$grammarCopyPOSsconj() {
      return "Subordinating Conjunction";
    },
    get$grammarCopyPOSnum() {
      return "Number";
    },
    get$grammarCopyPOSverb() {
      return "Verb";
    },
    get$grammarCopyPOSaffix() {
      return "Affix";
    },
    get$grammarCopyPOSpart() {
      return "Particle";
    },
    get$grammarCopyPOSadj() {
      return "Adjective";
    },
    get$grammarCopyPOScconj() {
      return "Coordinating Conjunction";
    },
    get$grammarCopyPOSpunct() {
      return "Punctuation";
    },
    get$grammarCopyPOSadv() {
      return "Adverb";
    },
    get$grammarCopyPOSaux() {
      return "Auxiliary";
    },
    get$grammarCopyPOSspace() {
      return "Space";
    },
    get$grammarCopyPOSsym() {
      return "Symbol";
    },
    get$grammarCopyPOSdet() {
      return "Determiner";
    },
    get$grammarCopyPOSpron() {
      return "Pronoun";
    },
    get$grammarCopyPOSadp() {
      return "Adposition";
    },
    get$grammarCopyPOSpropn() {
      return "Proper Noun";
    },
    get$grammarCopyPOSnoun() {
      return "Noun";
    },
    get$grammarCopyPOSintj() {
      return "Interjection";
    },
    get$grammarCopyPOSx() {
      return "Other";
    },
    get$grammarCopyGENDERfem() {
      return "Feminine";
    },
    get$grammarCopyPERSON2() {
      return "Second Person";
    },
    get$grammarCopyMOODimp() {
      return "Imperative";
    },
    get$grammarCopyPUNCTTYPEqest() {
      return "Question";
    },
    get$grammarCopyASPECTperf() {
      return "Perfect";
    },
    get$grammarCopyCASEaccnom() {
      return "Accusative, Nominative";
    },
    get$grammarCopyCASEobl() {
      return "Oblique";
    },
    get$grammarCopyVOICEact() {
      return "Active";
    },
    get$grammarCopyPUNCTTYPEbrck() {
      return "Bracket";
    },
    get$grammarCopyNOUNTYPEart() {
      return "Article";
    },
    get$grammarCopyNUMBERsing() {
      return "Singular";
    },
    get$grammarCopyGENDERmasc() {
      return "Masculine";
    },
    get$grammarCopyVERBTYPEmod() {
      return "Modal";
    },
    get$grammarCopyADVTYPEadverbial() {
      return "Adverbial";
    },
    get$grammarCopyTENSEperi() {
      return "Periphrastic";
    },
    get$grammarCopyNUMFORMdigit() {
      return "Digit";
    },
    get$grammarCopyNOUNTYPEnot_proper() {
      return "Not Proper";
    },
    get$grammarCopyNUMTYPEcard() {
      return "Cardinal";
    },
    get$grammarCopyNOUNTYPEprop() {
      return "Proper";
    },
    get$grammarCopyPUNCTTYPEdash() {
      return "Dash";
    },
    get$grammarCopyPUNCTTYPEyes() {
      return "Yes";
    },
    get$grammarCopyPUNCTTYPEsemi() {
      return "Semicolon";
    },
    get$grammarCopyPUNCTTYPEcomm() {
      return "Comma";
    },
    get$grammarCopyMOODcnd() {
      return "Conditional";
    },
    get$grammarCopyCASEacc() {
      return "Accusative";
    },
    get$grammarCopyPARTTYPEpart() {
      return "Partitive";
    },
    get$grammarCopyTENSEpast() {
      return "Past";
    },
    get$grammarCopyDEGREEsup() {
      return "Superlative";
    },
    get$grammarCopyPUNCTTYPEcolo() {
      return "Colon";
    },
    get$grammarCopyPERSON3() {
      return "Third Person";
    },
    get$grammarCopyNUMBERplur() {
      return "Plural";
    },
    get$grammarCopyPRONTYPEnpr() {
      return "Proper Noun";
    },
    get$grammarCopyPRONTYPEinterrogative() {
      return "Interrogative";
    },
    get$grammarCopyPOLITEinfm() {
      return "Informal";
    },
    get$grammarCopyADVTYPEtim() {
      return "Time";
    },
    get$grammarCopyPOLARITYneg() {
      return "Negative";
    },
    get$grammarCopyNUMTYPEtot() {
      return "Total";
    },
    get$grammarCopyADVTYPEadnomial() {
      return "Adnominal";
    },
    get$grammarCopyASPECTprog() {
      return "Progressive";
    },
    get$grammarCopyMOODsub() {
      return "Subjunctive";
    },
    get$grammarCopyVERBFORMcomplementive() {
      return "Complementive";
    },
    get$grammarCopyCASEnom() {
      return "Nominative";
    },
    get$grammarCopyTENSEfut() {
      return "Future";
    },
    get$grammarCopyCASEdat() {
      return "Dative";
    },
    get$grammarCopyTENSEpres() {
      return "Present";
    },
    get$grammarCopyGENDERneut() {
      return "Neuter";
    },
    get$grammarCopyPRONTYPErel() {
      return "Relative";
    },
    get$grammarCopyVERBFORMfinalEnding() {
      return "Final Ending";
    },
    get$grammarCopyPRONTYPEdem() {
      return "Demonstrative";
    },
    get$grammarCopyPREPCASEpre() {
      return "Prepositional";
    },
    get$grammarCopyVERBFORMfin() {
      return "Finite";
    },
    get$grammarCopyDEGREEpos() {
      return "Positive";
    },
    get$grammarCopyPUNCTTYPEquot() {
      return "Quotation";
    },
    get$grammarCopyVERBFORMger() {
      return "Gerund";
    },
    get$grammarCopyVOICEpass() {
      return "Passive";
    },
    get$grammarCopyCASEgen() {
      return "Genitive";
    },
    get$grammarCopyTENSEprs() {
      return "Present";
    },
    get$grammarCopyDEFINITEdef() {
      return "Definite";
    },
    get$grammarCopyNUMTYPEord() {
      return "Ordinal";
    },
    get$grammarCopyCASEins() {
      return "Instrumental";
    },
    get$grammarCopyVERBFORMinf() {
      return "Infinitive";
    },
    get$grammarCopyVERBFORMaux() {
      return "Auxiliary";
    },
    get$grammarCopyNUMFORMlong() {
      return "Long";
    },
    get$grammarCopyCASEloc() {
      return "Locative";
    },
    get$grammarCopyMOODind() {
      return "Indicative";
    },
    get$grammarCopyDEGREEcmp() {
      return "Comparative";
    },
    get$grammarCopyCASErelativeCase() {
      return "Relative";
    },
    get$grammarCopyPUNCTTYPEexcl() {
      return "Exclamative";
    },
    get$grammarCopyPERSON1() {
      return "First Person";
    },
    get$grammarCopyPUNCTSIDEini() {
      return "Initial";
    },
    get$grammarCopyGENDERperson() {
      return "Person";
    },
    get$grammarCopyFOREIGNyes() {
      return "Foreign";
    },
    get$grammarCopyVOICEvoice() {
      return "Voice";
    },
    get$grammarCopyVERBTYPEverbType() {
      return "Verb";
    },
    get$grammarCopyPOSSpass() {
      return "Possessive";
    },
    get$grammarCopyPREPCASEprepCase() {
      return "Prepositional";
    },
    get$grammarCopyNUMTYPEnumType() {
      return "Numeral";
    },
    get$grammarCopyNOUNTYPEnounType() {
      return "Noun";
    },
    get$grammarCopyREFLEXreflex() {
      return "Reflexive";
    },
    get$grammarCopyPRONTYPEpronType() {
      return "Pronoun";
    },
    get$grammarCopyPUNCTSIDEpunctSide() {
      return "Punctuation Side";
    },
    get$grammarCopyVERBFORMverbForm() {
      return "Verb";
    },
    get$grammarCopyGENDERgender() {
      return "Gender";
    },
    get$grammarCopyMOODmood() {
      return "Mood";
    },
    get$grammarCopyASPECTaspect() {
      return "Aspect";
    },
    get$grammarCopyPUNCTTYPEpunctType() {
      return "Punctuation";
    },
    get$grammarCopyTENSEtense() {
      return "Tense";
    },
    get$grammarCopyDEGREEdegree() {
      return "Degree";
    },
    get$grammarCopyPOLITEpolite() {
      return "Politeness";
    },
    get$grammarCopyADVTYPEadvType() {
      return "Adverb";
    },
    get$grammarCopyNUMFORMnumber() {
      return "Number";
    },
    get$grammarCopyCONJTYPEconjType() {
      return "Conjunction";
    },
    get$grammarCopyPOLARITYpolarity() {
      return "Polarity";
    },
    get$grammarCopyCASEcase() {
      return "Case";
    },
    get$grammarCopyDEFINITEdefinite() {
      return "Definiteness";
    },
    get$grammarCopyNUMFORMnumForm() {
      return "Numeral";
    },
    get$grammarCopyPRONTYPEadn() {
      return "Adnominal";
    },
    get$grammarCopyVOCvoc() {
      return "Vocative";
    },
    get$grammarCopyCMPLcmpl() {
      return "Complementizer";
    },
    get$grammarCopyADVadv() {
      return "Adverbial";
    },
    get$grammarCopyMOODjus() {
      return "Jussive";
    },
    get$grammarCopyGENDERcom() {
      return "Common";
    },
    get$grammarCopyREFLEXrflx() {
      return "Reflexive";
    },
    get$grammarCopyPARTTYPEpar() {
      return "Partitive";
    },
    get$grammarCopySPCspc() {
      return "Specific";
    },
    get$grammarCopyTENSEpqp() {
      return "Pluperfect";
    },
    get$grammarCopyREFLEXref() {
      return "Reflexive";
    },
    get$grammarCopyPUNCTTYPEnshrt() {
      return "Short";
    },
    get$grammarCopyNUMBERdual() {
      return "Dual";
    },
    get$grammarCopyNUMFORMlng() {
      return "Long";
    },
    get$grammarCopyVOICEmid() {
      return "Middle";
    },
    get$grammarCopyINTRELintRel() {
      return "Interrogative, Relative";
    },
    get$grammarCopyINTint() {
      return "Interrogative";
    },
    get$grammarCopyVOICEcaus() {
      return "Causative";
    },
    get$grammarCopyUnknown() {
      return "Unknown";
    },
    get$grammarCopyEVIDENTevident() {
      return "Evidentiality";
    },
    get$grammarCopyNUMFORMnumberPsor() {
      return "Possessor's Number";
    },
    get$grammarCopyASPECThab() {
      return "Habitual";
    },
    get$grammarCopyCASEabl() {
      return "Ablative";
    },
    get$grammarCopyCASEall() {
      return "Allative";
    },
    get$grammarCopyCASEess() {
      return "Essive";
    },
    get$grammarCopyCASEtra() {
      return "Translative";
    },
    get$grammarCopyCASEequ() {
      return "Equative";
    },
    get$grammarCopyCASEdis() {
      return "Distributive";
    },
    get$grammarCopyCASEabs() {
      return "Absolutive";
    },
    get$grammarCopyCASEerg() {
      return "Ergative";
    },
    get$grammarCopyCASEcau() {
      return "Causal";
    },
    get$grammarCopyCASEben() {
      return "Benefactive";
    },
    get$grammarCopyCASEtem() {
      return "Temporal";
    },
    get$grammarCopyCONJTYPEcoord() {
      return "Coordinating";
    },
    get$grammarCopyDEFINITEcons() {
      return "Construct State";
    },
    get$grammarCopyDEGREEabs() {
      return "Absolute Degree";
    },
    get$grammarCopyEVIDENTfh() {
      return "Factual Evidentiality";
    },
    get$grammarCopyEVIDENTnfh() {
      return "Non-factual Evidentiality";
    },
    get$grammarCopyMOODopt() {
      return "Optative";
    },
    get$grammarCopyMOODadm() {
      return "Admirative";
    },
    get$grammarCopyMOODdes() {
      return "Desiderative";
    },
    get$grammarCopyMOODnec() {
      return "Necessitative";
    },
    get$grammarCopyMOODpot() {
      return "Potential";
    },
    get$grammarCopyMOODprp() {
      return "Propositive";
    },
    get$grammarCopyMOODqot() {
      return "Quotative";
    },
    get$grammarCopyNUMFORMword() {
      return "Word Form";
    },
    get$grammarCopyNUMFORMroman() {
      return "Roman Numeral";
    },
    get$grammarCopyNUMFORMletter() {
      return "Letter Form";
    },
    get$grammarCopyNUMTYPEmult() {
      return "Multiplicative";
    },
    get$grammarCopyNUMTYPEfrac() {
      return "Fractional";
    },
    get$grammarCopyNUMTYPEsets() {
      return "Set";
    },
    get$grammarCopyNUMTYPErange() {
      return "Range";
    },
    get$grammarCopyNUMTYPEdist() {
      return "Distributive";
    },
    get$grammarCopyNUMBERtri() {
      return "Trial";
    },
    get$grammarCopyNUMBERpauc() {
      return "Paucal";
    },
    get$grammarCopyNUMBERgrpa() {
      return "Greater Paucal";
    },
    get$grammarCopyNUMBERgrpl() {
      return "Greater Plural";
    },
    get$grammarCopyNUMBERinv() {
      return "Inverse";
    },
    get$grammarCopyPERSON0() {
      return "Zero";
    },
    get$grammarCopyPERSON4() {
      return "Fourth";
    },
    get$grammarCopyPOLITEform() {
      return "Formal";
    },
    get$grammarCopyPOLITEelev() {
      return "Elevated";
    },
    get$grammarCopyPOLITEhumb() {
      return "Humble";
    },
    get$grammarCopyPRONTYPEemp() {
      return "Emphatic";
    },
    get$grammarCopyPRONTYPEexc() {
      return "Exclamative";
    },
    get$grammarCopyPRONTYPErcp() {
      return "Reciprocal";
    },
    get$grammarCopyPRONTYPEintRelPronType() {
      return "Interrogative-Relative";
    },
    get$grammarCopyTENSEaor() {
      return "Aorist";
    },
    get$grammarCopyTENSEeps() {
      return "Epistemic";
    },
    get$grammarCopyTENSEprosp() {
      return "Prospective";
    },
    get$grammarCopyVERBFORMpart() {
      return "Participle";
    },
    get$grammarCopyVERBFORMconv() {
      return "Converb";
    },
    get$grammarCopyVERBFORMvnoun() {
      return "Verbal Noun";
    },
    get$grammarCopyVOICEantip() {
      return "Antipassive";
    },
    get$grammarCopyVOICEcauVoice() {
      return "Causative";
    },
    get$grammarCopyVOICedir() {
      return "Direct";
    },
    get$grammarCopyVOICEinvVoice() {
      return "Inverse";
    },
    get$grammarCopyVOICErcpVoice() {
      return "Reciprocal";
    },
    get$grammarCopyPOS() {
      return "Part of Speech";
    },
    get$grammarCopyGENDER() {
      return "Gender";
    },
    get$grammarCopyPERSON() {
      return "Person";
    },
    get$grammarCopyMOOD() {
      return "Mood";
    },
    get$grammarCopyPUNCTTYPE() {
      return "Punctuation Type";
    },
    get$grammarCopyASPECT() {
      return "Aspect";
    },
    get$grammarCopyCASE() {
      return "Case";
    },
    get$grammarCopyVOICE() {
      return "Voice";
    },
    get$grammarCopyNOUNTYPE() {
      return "Noun Type";
    },
    get$grammarCopyVERBTYPE() {
      return "Verb Type";
    },
    get$grammarCopyADVTYPE() {
      return "Adverb Type";
    },
    get$grammarCopyNUMFORM() {
      return "Numeral Form";
    },
    get$grammarCopyNUMTYPE() {
      return "Numeral Type";
    },
    get$grammarCopyNUMBER() {
      return "Number";
    },
    get$grammarCopyDEFINITE() {
      return "Definiteness";
    },
    get$grammarCopyDEGREE() {
      return "Degree";
    },
    get$grammarCopyEVIDENT() {
      return "Evidentiality";
    },
    get$grammarCopyFOREIGN() {
      return "Foreign";
    },
    get$grammarCopyPOLARITY() {
      return "Polarity";
    },
    get$grammarCopyPOLITE() {
      return "Politeness";
    },
    get$grammarCopyPREPCASE() {
      return "Prepositional Case";
    },
    get$grammarCopyPRONTYPE() {
      return "Pronoun Type";
    },
    get$grammarCopyPUNCTSIDE() {
      return "Punctuation Side";
    },
    get$grammarCopyREFLEX() {
      return "Reflexive";
    },
    get$grammarCopyTENSE() {
      return "Tense";
    },
    get$grammarCopyVERBFORM() {
      return "Verb Form";
    },
    get$grammarCopyCONJTYPE() {
      return "Conjunction Type";
    },
    get$grammarCopyUNKNOWN() {
      return "Unknown";
    },
    get$grammarCopyNUMBERPSOR() {
      return "Possessor's Number";
    },
    get$grammarCopyPOSS() {
      return "Possessive";
    },
    get$grammarCopyASPECTimp() {
      return "Imperfective Aspect";
    },
    get$grammarCopyCASEvoc() {
      return "Vocative";
    },
    get$grammarCopyCASEcom() {
      return "Comitative";
    },
    get$grammarCopyCASEpar() {
      return "Partitive";
    },
    get$grammarCopyCASEadv() {
      return "Adverbial";
    },
    get$grammarCopyCASEref() {
      return "Referential";
    },
    get$grammarCopyCASErel() {
      return "Relative";
    },
    get$grammarCopyCASEsub() {
      return "Subessive";
    },
    get$grammarCopyCASEsup() {
      return "Superessive";
    },
    get$grammarCopyCASEaccdat() {
      return "Accusative-Dative";
    },
    get$grammarCopyCASEpre() {
      return "Prepositional";
    },
    get$grammarCopyCONJTYPEsub() {
      return "Subordinating";
    },
    get$grammarCopyCONJTYPEcmp() {
      return "Comparative";
    },
    get$grammarCopyDEFINITEind() {
      return "Indefinite";
    },
    get$grammarCopyMOODint() {
      return "Interrogative Mood";
    },
    get$grammarCopyNOUNTYPEcomm() {
      return "Common Noun";
    },
    get$grammarCopyNUMBERPSORsing() {
      return "Possessor's Singular";
    },
    get$grammarCopyNUMBERPSORplur() {
      return "Possessor's Plural";
    },
    get$grammarCopyNUMBERPSORdual() {
      return "Possessor's Dual";
    },
    get$grammarCopyPOLARITYpos() {
      return "Positive Polarity";
    },
    get$grammarCopyPOSSyes() {
      return "Possessive";
    },
    get$grammarCopyPREPCASEnpr() {
      return "Non-prepositional";
    },
    get$grammarCopyPRONTYPEprs() {
      return "Personal";
    },
    get$grammarCopyPRONTYPEint() {
      return "Interrogative";
    },
    get$grammarCopyPRONTYPEtot() {
      return "Total";
    },
    get$grammarCopyPRONTYPEneg() {
      return "Negative";
    },
    get$grammarCopyPRONTYPEart() {
      return "Article";
    },
    get$grammarCopyPRONTYPEind() {
      return "Indefinite";
    },
    get$grammarCopyPRONTYPEintrel() {
      return "Interrogative-Relative";
    },
    get$grammarCopyPUNCTSIDEfin() {
      return "Final Punctuation";
    },
    get$grammarCopyPUNCTTYPEperi() {
      return "Period";
    },
    get$grammarCopyREFLEXyes() {
      return "Reflexive";
    },
    get$grammarCopyTENSEimp() {
      return "Imperfect";
    },
    get$grammarCopyVERBFORMsup() {
      return "Supine";
    },
    get$grammarCopyVERBFORMadn() {
      return "Adnominal";
    },
    get$grammarCopyVERBFORMlng() {
      return "Long";
    },
    get$grammarCopyVERBFORMshrt() {
      return "Short";
    },
    get$grammarCopyVERBTYPEcaus() {
      return "Causative Verb";
    },
    get$grammarCopyVOICEcau() {
      return "Causative";
    },
    get$grammarCopyVOICEdir() {
      return "Direct";
    },
    get$grammarCopyVOICEinv() {
      return "Inverse";
    },
    get$grammarCopyVOICErcp() {
      return "Reciprocal";
    },
    get$other() {
      return "Other";
    },
    levelShort$1(level) {
      return "LVL " + level;
    },
    get$clickBestOption() {
      return "Choose the best options to translate your message! Click and hold options for a hint.";
    },
    get$completeActivitiesToUnlock() {
      return "Complete at least one activity to unlock the translation!";
    },
    get$downloadGroupText() {
      return "Download group text";
    },
    get$notificationsOn() {
      return "Notifications on";
    },
    get$notificationsOff() {
      return "Notifications off";
    },
    get$createChatAndInviteUsers() {
      return "Create chat and invite users";
    },
    get$updatedNewSpaceDescription() {
      return "Courses allow you to consolidate your chats and build private or public communities.";
    },
    get$enterCodeToJoin() {
      return "Enter code to join";
    },
    get$updateNow() {
      return "Update Now";
    },
    get$updateLater() {
      return "Later";
    },
    get$constructUseWaDesc() {
      return "Used without help";
    },
    get$constructUseGaDesc() {
      return "Grammar assistance";
    },
    get$constructUseTaDesc() {
      return "Translation assistance";
    },
    get$constructUseUnkDesc() {
      return "Unknown";
    },
    get$constructUseCorITDesc() {
      return "Correct in translation";
    },
    get$constructUseIgnITDesc() {
      return "Ignored in translation";
    },
    get$constructUseIncITDesc() {
      return "Incorrect in translation";
    },
    get$constructUseIgnIGCDesc() {
      return "Ignored in grammar correction";
    },
    get$constructUseCorIGCDesc() {
      return "Correct in grammar correction";
    },
    get$constructUseIncIGCDesc() {
      return "Incorrect in grammar correction";
    },
    get$constructUseCorPADesc() {
      return "Correct in word meaning activity";
    },
    get$constructUseIgnPADesc() {
      return "Ignored in word meaning activity";
    },
    get$constructUseIncPADesc() {
      return "Incorrect in word meaning activity";
    },
    get$constructUseCorWLDesc() {
      return "Correct in word listening activity";
    },
    get$constructUseIncWLDesc() {
      return "Incorrect in word listening activity";
    },
    get$constructUseIngWLDesc() {
      return "Ignored in word listening activity";
    },
    get$constructUseCorHWLDesc() {
      return "Correct in hidden word activity";
    },
    get$constructUseIncHWLDesc() {
      return "Incorrect in hidden word activity";
    },
    get$constructUseIgnHWLDesc() {
      return "Ignored in hidden word activity";
    },
    get$constructUseCorLDesc() {
      return "Correct in lemma activity";
    },
    get$constructUseIncLDesc() {
      return "Incorrect in lemma activity";
    },
    get$constructUseIgnLDesc() {
      return "Ignored in lemma activity";
    },
    get$constructUseCorMDesc() {
      return "Correct in grammar activity";
    },
    get$constructUseIncMDesc() {
      return "Incorrect in grammar activity";
    },
    get$constructUseIgnMDesc() {
      return "Ignored in grammar activity";
    },
    get$constructUseEmojiDesc() {
      return "Correct in emoji activity";
    },
    get$constructUseCollected() {
      return "Collected in chat";
    },
    get$constructUseNanDesc() {
      return "Not applicable";
    },
    xpIntoLevel$2(currentXP, maxXP) {
      return "" + currentXP + " / " + maxXP + " XP";
    },
    get$enableTTSToolName() {
      return "Enabled text-to-speech";
    },
    get$enableTTSToolDescription() {
      return "Allow the app to generate text-to-speech output for portions of text in your target language.";
    },
    get$yourUsername() {
      return "Your username";
    },
    get$yourEmail() {
      return "Your email";
    },
    get$iWantToLearn() {
      return "I want to learn";
    },
    get$pleaseEnterEmail() {
      return "Please enter a valid email address.";
    },
    get$myBaseLanguage() {
      return "My base language";
    },
    get$meaningSectionHeader() {
      return "Meaning:";
    },
    get$formSectionHeader() {
      return "Forms used in chats:";
    },
    get$writingExercisesTooltip() {
      return "Writing";
    },
    get$listeningExercisesTooltip() {
      return "Listening";
    },
    get$readingExercisesTooltip() {
      return "Reading";
    },
    get$meaningNotFound() {
      return "Meaning could not be found.";
    },
    get$chooseBaseForm() {
      return "Choose the base form";
    },
    get$notTheCodeError() {
      return "Sorry, that's not the code!";
    },
    get$totalXP() {
      return "Total XP";
    },
    get$numLemmas() {
      return "Total number of lemmas";
    },
    get$numLemmasUsedCorrectly() {
      return "Number of lemmas used correctly at least once";
    },
    get$numLemmasUsedIncorrectly() {
      return "Number of lemmas used correctly 0 times";
    },
    get$numLemmasSmallXP() {
      return "Number of lemmas with 0 - 30 XP";
    },
    get$numLemmasMediumXP() {
      return "Number of lemmas with 31 - 200 XP";
    },
    get$numLemmasLargeXP() {
      return "Number of lemmas with > 200 XP";
    },
    get$numGrammarConcepts() {
      return "Number of grammar concepts";
    },
    get$listGrammarConcepts() {
      return "Grammar concepts";
    },
    get$listGrammarConceptsUsedCorrectly() {
      return "Grammar concepts used correctly in original messages at least 80% of the time";
    },
    get$listGrammarConceptsUsedIncorrectly() {
      return "Grammar concepts used correctly in original messages less than 80% of the time";
    },
    get$listGrammarConceptsUseCorrectlySystemGenerated() {
      return "Grammar concepts chosen correctly from system-generated suggestions at least 80% of the time";
    },
    get$listGrammarConceptsUseIncorrectlySystemGenerated() {
      return "Grammar concepts chosen correctly from system-generated suggestions less than 80% of the time";
    },
    get$listGrammarConceptsSmallXP() {
      return "Grammar concepts with 0-50 xp";
    },
    get$listGrammarConceptsMediumXP() {
      return "Grammar concepts with 51-200 xp";
    },
    get$listGrammarConceptsLargeXP() {
      return "Grammar concepts 201-500 xp";
    },
    get$listGrammarConceptsHugeXP() {
      return "Grammar concepts >500 xp";
    },
    get$numMessagesSent() {
      return "Number of messages sent";
    },
    get$numWordsTyped() {
      return "Number of words typed in original messages";
    },
    get$numCorrectChoices() {
      return "Number of correct words chosen from system-generated suggestions";
    },
    get$numIncorrectChoices() {
      return "Number of incorrect words chosen from system-generated suggestions";
    },
    get$commaSeparatedFile() {
      return "CSV";
    },
    get$excelFile() {
      return "Excel";
    },
    get$fileType() {
      return "File type";
    },
    get$download(_) {
      return "Download";
    },
    get$analyticsNotAvailable() {
      return "User analytics not available";
    },
    get$downloading() {
      return "Downloading...";
    },
    get$failedFetchUserAnalytics() {
      return "Failed to download user analytics";
    },
    get$downloadComplete() {
      return "Download complete!";
    },
    whatIsTheMorphTag$2(morphologicalFeature, wordForm) {
      return "What is the " + morphologicalFeature + " of '" + wordForm + "'?";
    },
    get$dataAvailable() {
      return "Data availability";
    },
    get$available(_) {
      return "Available";
    },
    get$pangeaBotIsFallible() {
      return "Pangea Bot makes mistakes too!";
    },
    whatIsMeaning$2(lemma, partOfSpeech) {
      return "What does '" + lemma + "' mean?";
    },
    get$chooseLemmaMeaningInstructionsBody() {
      return "Match meanings with the words in the message!";
    },
    get$doubleClickToEdit() {
      return "Double-click to edit.";
    },
    get$targetLanguageLabel() {
      return "Target language";
    },
    get$cefrLevelLabel() {
      return "CEFR level";
    },
    get$image(_) {
      return "Image";
    },
    get$activityPlannerOverviewInstructionsBody() {
      return "Choose a topic, mode, learning objective and generate an activity for the chat!";
    },
    get$constructUsePvmDesc() {
      return "Produced in voice message";
    },
    get$leaveSpaceDescription() {
      return "By leaving the course, you will leave all of the chats within it. Other users will see that you have left the course.";
    },
    get$constructUseCorMmDesc() {
      return "Correct message meaning";
    },
    get$constructUseIncMmDesc() {
      return "Incorrect message meaning";
    },
    get$constructUseIgnMmDesc() {
      return "Ignored message meaning";
    },
    get$meaning() {
      return "Meaning";
    },
    chatWith$1(displayname) {
      return "Group with " + displayname;
    },
    get$clickOnEmailLink() {
      return "Please click on the link in the email and then proceed.\n\nCheck your spam folder if the email hasn't arrived.";
    },
    get$dontForgetPassword() {
      return "Don't forget your password!";
    },
    get$enableAutocorrectToolName() {
      return "Enable device autocorrect";
    },
    get$enableAutocorrectDescription() {
      return "If your device supports the language you're learning, you can enable device autocorrect to fix common errors as you type.";
    },
    get$ttsDisbledTitle() {
      return "Text-to-speech disabled";
    },
    get$ttsDisabledBody() {
      return "You can enable text-to-speech in your learning settings";
    },
    get$noSpaceDescriptionYet() {
      return "No course description created yet.";
    },
    get$tooLargeToSend() {
      return "This message is too large to send";
    },
    get$exitWithoutSaving() {
      return "Are you sure you want to leave without saving?";
    },
    get$enableAutocorrectWarning() {
      return "Warning! Requires adding your target language keyboard";
    },
    get$leaveRoomDescription() {
      return "You're about to leave this chat. Other users will see that you have left the chat.";
    },
    get$confirmUserId() {
      return "Please confirm your Pangea Chat username in order to delete your account.";
    },
    paidSubscriptionStarts$1(startDate) {
      return "Starting " + startDate;
    },
    get$cancelInSubscriptionSettings() {
      return "\u2022 Cancel at any time in subscription settings";
    },
    get$autocorrectNotAvailable() {
      return "Unfortunately your platform is not currently supported for this feature. Stay tuned for further development!";
    },
    get$pleaseUpdateApp() {
      return "Please update the app to continue.";
    },
    get$chooseEmojiInstructionsBody() {
      return "Match emojis with the words they best represent. Don't worry! No points off for disagreeing. \ud83d\ude05";
    },
    get$analyticsVocabListBody() {
      return "This is all your vocabulary! As you earn XP for each word, they'll go from seedling to full bloom. Click on any word to see more details.";
    },
    get$morphAnalyticsListBody() {
      return "These are all the grammar concepts in the language you're learning! You'll unlock them as you encounter them while chatting. Click for details.";
    },
    get$knockSpaceSuccess() {
      return "You have requested to join this course! An admin will respond to your request when they receive it \ud83d\ude00";
    },
    get$chooseWordAudioInstructionsBody() {
      return "Listen to the complete message. Then match the audios with the words.";
    },
    get$chooseMorphsInstructionsBody() {
      return "Click the puzzle pieces for grammar questions!";
    },
    get$home() {
      return "Home";
    },
    get$join(_) {
      return "Join";
    },
    get$readingAssistanceOverviewBody() {
      return "Click the buttons below for mini-games on matching emojis, audios, word meanings, and grammar concepts. Or click on any word for details.";
    },
    get$resetInstructionTooltipsTitle() {
      return "Reset instruction tooltips";
    },
    get$resetInstructionTooltipsDesc() {
      return "Click to show instruction tooltips like for a brand new user.";
    },
    get$selectForGrammar() {
      return "Select a grammar icon for activities and details.";
    },
    get$translationProblem() {
      return "Translation problem";
    },
    get$niceJob() {
      return "Nice job!";
    },
    get$askToJoin() {
      return "Ask to join";
    },
    get$emptyChatWarningTitle() {
      return "Chat is empty";
    },
    get$emptyChatWarningDesc() {
      return "You haven't invited anyone to your chat. Go to Chat settings to invite your contacts or the Bot. You can also do this later.";
    },
    get$areYouLikeMe() {
      return "Are you like me?";
    },
    get$tryAgainLater() {
      return "Too many attempts made. Please try again in 5 minutes.";
    },
    get$enterSpaceCode() {
      return "Enter course code";
    },
    get$shareSpaceLink() {
      return "Share link";
    },
    get$byUsingPangeaChat() {
      return "By using Pangea Chat, I agree to the ";
    },
    get$details(_) {
      return "Details";
    },
    get$languageLevelPreA1Desc() {
      return "I have never learned or used the language.";
    },
    get$languageLevelA1Desc() {
      return "I can understand and use some familiar everyday expressions and very basic phrases.";
    },
    get$languageLevelA2Desc() {
      return "I can understand sentences and frequently used expressions related to areas of immediate relevance.";
    },
    get$languageLevelB1Desc() {
      return "I can deal with most familiar situations and can produce simple connected text on familiar topics.";
    },
    get$languageLevelB2Desc() {
      return "I can understand the mains ideas of complex texts and interact with a degree of fluency and spontaneity.";
    },
    get$languageLevelC1Desc() {
      return "I can express ideas fluently and spontaneously without much struggle and understand a wide range of demanding texts.";
    },
    get$languageLevelC2Desc() {
      return "I can understand virtually everything heard or read and express myself fluently and precisely.";
    },
    get$newVocab() {
      return "New vocab";
    },
    get$newGrammar() {
      return "New grammar concepts";
    },
    get$choosePracticeMode() {
      return "Click on one of the buttons above to start a practice activity";
    },
    get$ban() {
      return "Ban";
    },
    get$kick() {
      return "Kick";
    },
    get$lemma() {
      return "Lemma";
    },
    get$grammarFeature() {
      return "Grammar feature";
    },
    get$grammarTag() {
      return "Grammar tag";
    },
    get$forms() {
      return "Forms";
    },
    get$exampleMessages() {
      return "Example messages";
    },
    get$timesUsedIndependently() {
      return "Times used independently";
    },
    get$timesUsedWithAssistance() {
      return "Times used with assistance";
    },
    shareInviteCode$1(code) {
      return "Share invite code: " + code;
    },
    get$skipForNow() {
      return "Skip for now";
    },
    get$permissions(_) {
      return "Permissions";
    },
    get$spaceChildPermission() {
      return "Who can add new chats to this course";
    },
    get$addEnvironmentOverride() {
      return "Add environment override";
    },
    get$defaultOption() {
      return "Default";
    },
    get$deleteChatDesc() {
      return "Are you sure you want to delete this chat? It will be deleted for all participants and all messages within the chat will no longer be available for practice or learning analytics.";
    },
    get$deleteSpaceDesc() {
      return "The course and any selected chats will be deleted for all participants and all messages within the chat will no longer be available for practice or learning analytics. This action cannot be undone.";
    },
    get$configureSpace() {
      return "Configure course";
    },
    get$pinMessages() {
      return "Pin messages";
    },
    get$setJoinRules() {
      return "Set join rules";
    },
    get$changeGeneralSettings() {
      return "Change general settings";
    },
    get$inviteOtherUsersToRoom() {
      return "Invite other users";
    },
    get$changeTheNameOfTheSpace() {
      return "Change the name of the course";
    },
    get$changeTheDescription() {
      return "Change the description";
    },
    get$changeThePermissions() {
      return "Change the permissions";
    },
    get$introductions() {
      return "Introductions";
    },
    get$announcements() {
      return "Announcements";
    },
    get$activities() {
      return "Activities";
    },
    get$access() {
      return "Access";
    },
    get$howSpaceCanBeFound() {
      return "How this course can be found";
    },
    get$$private() {
      return "Private";
    },
    get$cannotBeFoundInSearch() {
      return "Cannot be found in search";
    },
    get$$public(_) {
      return "Public";
    },
    get$visibleToCommunity() {
      return 'Visible to the broader Pangea Chat community via "Find a course"';
    },
    get$howSpaceCanBeJoined() {
      return "How this course can be joined";
    },
    get$canBeFoundVia() {
      return "Can be found via:";
    },
    get$canBeFoundViaInvitation() {
      return "\u2022 invitation";
    },
    get$canBeFoundViaCodeOrLink() {
      return "\u2022 code or link";
    },
    get$canBeFoundViaKnock() {
      return "\u2022 request to join and admin approval";
    },
    get$youHaveLeveledUp() {
      return "You have leveled up!";
    },
    get$sendActivities() {
      return "Send activities";
    },
    get$directMessage() {
      return "Direct Message";
    },
    get$newDirectMessage() {
      return "New direct message";
    },
    get$speakingExercisesTooltip() {
      return "Speaking";
    },
    get$transcriptionFailed() {
      return "Failed to transcribe audio";
    },
    get$aUserIsKnocking() {
      return "1 user is requesting to join your course";
    },
    usersAreKnocking$1(users) {
      return "" + users + " users are requesting to join your course";
    },
    get$failedToFetchTranscription() {
      return "Failed to fetch transcription";
    },
    get$deleteEmptySpaceDesc() {
      return "The course will be deleted for all participants. This action cannot be undone.";
    },
    get$failedToPlayVideo() {
      return "Failed to play video";
    },
    get$done() {
      return "Done";
    },
    get$inThisSpace() {
      return "In this course";
    },
    get$myContacts() {
      return "My contacts";
    },
    get$inviteAllInSpace() {
      return "Invite all in this course";
    },
    get$spaceParticipantsHaveBeenInvitedToTheChat() {
      return "All course participants has been invited to the chat";
    },
    numKnocking$1(count) {
      return "" + count + " knocking";
    },
    numInvited$1(count) {
      return "" + count + " invited";
    },
    get$errorFetchingDefinition() {
      return "Failed to fetch definition";
    },
    get$errorProcessAnalytics() {
      return "Failed to process analytics";
    },
    get$errorDownloading() {
      return "Download failed";
    },
    get$errorFetchingLevelSummary() {
      return "Failed to fetch level summary";
    },
    get$errorLoadingSpaceChildren() {
      return "Failed to load chats within this course";
    },
    get$unexpectedError() {
      return "Unexpected error.";
    },
    get$pleaseReload() {
      return "Please reload and try again.";
    },
    get$translationError() {
      return "Translation error";
    },
    get$errorFetchingTranslation() {
      return "Failed to fetch translation";
    },
    get$errorFetchingActivity() {
      return "Failed to fetch activity";
    },
    get$check(_) {
      return "Check";
    },
    get$unableToFindRoom() {
      return "No chat or course found with that code. Please try again.";
    },
    get$numCompletedActivities() {
      return "Number of completed activities";
    },
    viewingAnalytics$2(visible, users) {
      return "Viewing " + visible + "/" + users + " Analytics";
    },
    get$request(_) {
      return "Request";
    },
    get$requestAll(_) {
      return "Request All";
    },
    get$confirmMessageUnpin() {
      return "Are you sure you want to unpin this message?";
    },
    get$pending(_) {
      return "Pending";
    },
    get$openRoleLabel() {
      return "OPEN";
    },
    joinedTheActivity$2(username, role) {
      return "\ud83d\udc4b " + username + " joined as " + role;
    },
    finishedTheActivity$1(username) {
      return "\ud83c\udfaf " + username + " wrapped up this activity";
    },
    get$endActivityTitle() {
      return "I'm done";
    },
    get$activitySummaryError() {
      return "Activity summaries unavailable";
    },
    get$requestSummaries() {
      return "Request summaries";
    },
    get$requestAccessTitle() {
      return "Request to analytics view access?";
    },
    get$requestAccessDesc() {
      return "Would you like to request access to view participant analytics?\n\nIf participants agree, admins of this course will be able to view their:\n    \u2022 total vocabulary\n    \u2022 total grammar concepts\n    \u2022 total activity sessions completed\n    \u2022 the specific grammar concepts used, correctly and incorrectly\n\nThey will not be able to view their:\n    \u2022 messages in chats outside the course\n    \u2022 vocabulary list";
    },
    get$analyticsInactiveTitle() {
      return "Requests to inactive users couldn\u2019t be sent";
    },
    get$analyticsInactiveDesc() {
      return "Inactive users who haven't logged in since this feature was introduced won't see your request.\n\nThe Request button will appear once they return. You can resend the request later by clicking the Request button under their name when it's available.";
    },
    get$accessRequestedTitle() {
      return "Analytics Access Request";
    },
    accessRequestedDesc$1(space) {
      return "The administrators of \u201c" + space + "\u201d are requesting to view your learning analytics.\n\nIf you agree, admins of this course will be able to view your:\n    \u2022 total vocabulary\n    \u2022 total grammar concepts\n    \u2022 total activity sessions completed\n    \u2022 the specific grammar concepts used, correctly and incorrectly\n\nThey will not be able to view your:\n    \u2022 messages in chats outside the course\n    \u2022 vocabulary list";
    },
    get$allowAccess() {
      return "Allow Access";
    },
    get$denyAccess() {
      return "Deny Access";
    },
    get$adminRequestedAccess() {
      return "Admins asked to view your analytics.";
    },
    lastUpdated$1(time) {
      return "Updated\n" + time;
    },
    get$activityFinishedMessage() {
      return "All Finished!";
    },
    get$endForAll() {
      return "End for all";
    },
    get$newCourse() {
      return "New course";
    },
    numModules$1(num) {
      return "" + num + " modules";
    },
    get$coursePlan() {
      return "Course Plan";
    },
    get$editCourseLater() {
      return "You can edit template title, descriptions, and course image later.";
    },
    get$newCourseAccess() {
      return "By default, courses are private and require admin approval to join. You can edit these settings at any time.";
    },
    get$createCourse() {
      return "Create course";
    },
    get$stats() {
      return "Stats";
    },
    get$createGroupChat() {
      return "Create group chat";
    },
    get$editCourse() {
      return "Edit course";
    },
    get$inviteDesc() {
      return "By username, by code or link";
    },
    get$editCourseDesc() {
      return "Here you can edit course title, description, etc.";
    },
    get$permissionsDesc() {
      return "Set permissions such as who can invite users, send messages, create chats, etc.";
    },
    get$accessDesc() {
      return "You can make your course open to the world! Or, make your course private and secure.";
    },
    get$createGroupChatDesc() {
      return "Whereas activity sessions start and end, group chats will stay open for routine communication.";
    },
    get$deleteDesc() {
      return "Only admins can delete a course. This is a destructive action which removes all users and deletes all selected chats within the course. Proceed with caution.";
    },
    get$noCourseFound() {
      return "Oh, this course needs a plan!\n\nCourse plans are a sequence of topics and conversation activities.";
    },
    additionalParticipants$1(num) {
      return "+ " + num + " others";
    },
    get$directMessages() {
      return "Direct Messages";
    },
    get$whatNow() {
      return "What now?";
    },
    get$chooseNextActivity() {
      return "Choose your next activity!";
    },
    get$letsGo() {
      return "Let's go";
    },
    get$chooseRole() {
      return "Choose a role!";
    },
    get$chooseRoleToParticipate() {
      return "Choose a role to participate!";
    },
    waitingToFillRole$1(num) {
      return "Waiting to fill " + num + " roles...";
    },
    get$pingParticipants() {
      return "Ping course participants";
    },
    get$playWithBot() {
      return "Play with Pangea Bot";
    },
    get$inviteFriendsToActivity() {
      return "Invite friends to activity";
    },
    get$inviteFriendsToActivityCourse() {
      return "Invite friends to activity and course";
    },
    get$waitNotDone() {
      return "Wait I\u2019m not done!";
    },
    get$waitingForOthersToFinish() {
      return "Waiting for the rest to finish up...";
    },
    get$saveToCompletedActivities() {
      return "Save to completed activities";
    },
    get$generatingSummary() {
      return "Analyzing chat and generating results";
    },
    get$activityCompletedDesc() {
      return "Your completed activity was added to analytics where you can review and practice the language you used.";
    },
    pingParticipantsNotification$2(user, room) {
      return user + " is looking for users to join the activity session in " + room;
    },
    get$courseName() {
      return "Course name";
    },
    get$createNewCourse() {
      return "New course";
    },
    get$publicCourses() {
      return "Public courses";
    },
    goToCourse$1(course) {
      return "Go to course: " + course;
    },
    get$startNewSession() {
      return "Start new session";
    },
    get$joinOpenSession() {
      return "Join open session";
    },
    get$activityNotFound() {
      return "Activity not found";
    },
    get$levelUp() {
      return "Level up";
    },
    get$myActivities() {
      return "My activities";
    },
    get$openToJoin() {
      return "Open to join";
    },
    get$activityDone() {
      return "Activity Done!";
    },
    get$promoCodeInfo() {
      return "Promo codes can be entered on the next page";
    },
    get$editsComingSoon() {
      return "The ability to edit cities and activities is coming soon.";
    },
    get$editing() {
      return "Editing";
    },
    get$activityNeedsOneMember() {
      return "Uh oh! This activity needs 1 more person.";
    },
    activityNeedsMembers$1(num) {
      return "Uh oh! This activity needs " + num + " more people.";
    },
    get$inviteFriendsToCourse() {
      return "Invite friends to my course";
    },
    get$subscribeToUnlockActivitySummaries() {
      return "Subscribe to unlock activity summaries";
    },
    get$subscribeToUnlockDefinitions() {
      return "Subscribe to unlock definitions";
    },
    get$subscribeToUnlockTranscriptions() {
      return "Subscribe to unlock transcriptions";
    },
    get$pingSent() {
      return "\ud83d\udd14 Course ping sent! \ud83d\udd14";
    },
    get$courseTitle() {
      return "Course title";
    },
    get$courseDesc() {
      return "Course description";
    },
    get$courseSavedSuccessfully() {
      return "Course saved successfully";
    },
    get$addCoursePlan() {
      return "Add a course plan";
    },
    get$activityStatsButtonInstruction() {
      return "Click here to view your activity stats and to close the activity when finished";
    },
    get$readingAnalyticsDesc() {
      return "Click practice on each message for reading activities.";
    },
    get$speakingAnalyticsDesc() {
      return "Record voice messages for speaking practice.";
    },
    get$audioAnalyticsDesc() {
      return "Click practice on each message for listening activities.";
    },
    get$loginToAccount() {
      return "Login to my account";
    },
    get$appDescription() {
      return "Learn a language\nwhile texting your friends.";
    },
    get$languages(_) {
      return "Languages";
    },
    get$chooseLanguage() {
      return "Choose a target language.";
    },
    get$startOwn() {
      return "Start my own";
    },
    get$joinCourseDesc() {
      return "Each course has 8-10 sequenced topics with a range of task-based language learning activities.";
    },
    get$courseCodeHint() {
      return "Course code";
    },
    get$signupOption() {
      return "How do you want to sign up?";
    },
    get$withApple() {
      return "With Apple";
    },
    get$withGoogle() {
      return "With Google";
    },
    get$withEmail() {
      return "With Email";
    },
    get$createAccount() {
      return "Create account";
    },
    get$loginWithEmail() {
      return "Login with email";
    },
    get$usernameOrEmail() {
      return "Username or email";
    },
    get$email() {
      return "Email";
    },
    get$forgotPassword() {
      return "Forgot password?";
    },
    get$writingAnalyticsDesc() {
      return "Send messages to practice writing.";
    },
    get$endActivity() {
      return "End activity";
    },
    get$allLanguages() {
      return "All languages";
    },
    get$chatListTooltip() {
      return "Here you\u2019ll find your direct messages! Click on any user\u2019s avatar and \u201cstart conversation\u201d to send a DM.";
    },
    get$directMessageBotTitle() {
      return "Direct message Pangea Bot";
    },
    get$feedbackTitle() {
      return "Activity Feedback";
    },
    get$feedbackDesc() {
      return "How should the activity be improved? If you can provide some details, we\u2019ll make the change!";
    },
    get$feedbackRespDesc() {
      return "Check back tomorrow for activity updates.";
    },
    get$feedbackHint() {
      return "Your feedback";
    },
    get$feedbackButton() {
      return "Submit feedback";
    },
    get$directMessageBotDesc() {
      return "Talking to humans is more fun but... AI is always ready!";
    },
    get$inviteYourFriends() {
      return "Invite your friends";
    },
    get$playWithAI() {
      return "Play with AI for now";
    },
    get$courseStartDesc() {
      return "Pangea Bot is ready to go anytime!\n\n...but learning is better with friends!";
    },
    get$activityDropdownDesc() {
      return "When you\u2019re done with this activity, click below";
    },
    get$activityAnalyticsListBody() {
      return "These are your completed activities! After finishing activities, you can view them here.";
    },
    get$languageMismatchTitle() {
      return "Language mismatch";
    },
    get$languageMismatchDesc() {
      return "Your target language doesn't match the language of this activity. Update your target language?";
    },
    get$reportWordIssueTooltip() {
      return "Report word information issue";
    },
    get$tokenInfoFeedbackDialogTitle() {
      return "Word Information Feedback";
    },
    get$tokenInfoFeedbackDialogDesc() {
      return "AI makes mistakes. Please describe any issues you found with the information above.";
    },
    get$noPublicCoursesFound() {
      return "No public courses found. Would you like to create one?";
    },
    get$noCourseTemplatesFound() {
      return "We couldn't find any courses for your target language. You can chat with Pangea Bot in the meantime, and check back later for more courses.";
    },
    get$botActivityJoinFailMessage() {
      return "Pangea Bot is taking a while to respond. Please try again later, or invite a friend.";
    },
    get$unsubscribedResponseError() {
      return "This feature requires a subscription";
    },
    get$leaveDesc() {
      return "Leave this space and all chats within it";
    },
    get$selectAll() {
      return "Select all";
    },
    get$deselectAll(_) {
      return "Deselect all";
    },
    get$shareCourse() {
      return "Share course";
    },
    get$addCourse() {
      return "Add a course";
    },
    get$joinCourseWithCode() {
      return "Join course with code";
    },
    get$joinPublicCourse() {
      return "Join public course";
    },
    get$vocabLevelsDesc() {
      return "This is where vocab words will go once you\u2019ve leveled them up!";
    },
    remove$1($receiver, arg0) {
      return this.get$remove(this).call$1(arg0);
    }
  };
  var typesOffset = hunkHelpers.updateTypes([]);
  (function inheritance() {
    var _inherit = hunkHelpers.inherit;
    _inherit(A.L10nGl, C.L10n);
  })();
  B._Universe_addRules(init.typeUniverse, JSON.parse('{"L10nGl":{"L10n":[]}}'));
};
;
(d => {
  d["EeyMCe+iF9SQnXsL4cOTj2haZV4="] = d.current;
})($__dart_deferred_initializers__);
;
//# sourceMappingURL=main.dart.js_217.part.js.map
