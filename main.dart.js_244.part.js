// Generated by dart2js (, trust primitives, omit checks, lax runtime type, csp, intern-composite-values), the Dart to JavaScript compiler version: 3.9.2.
((s, d) => {
  s[d] = s[d] || {};
})(self, "$__dart_deferred_initializers__");
$__dart_deferred_initializers__.current = function(hunkHelpers, init, holdersList, $) {
  var B, C,
  A = {
    L10nLv$() {
      return new A.L10nLv(B.canonicalizedLocale("lv"));
    },
    L10nLv: function L10nLv(t0) {
      this.localeName = t0;
    }
  };
  B = holdersList[0];
  C = holdersList[54];
  A = hunkHelpers.updateHolder(holdersList[37], A);
  A.L10nLv.prototype = {
    get$alwaysUse24HourFormat() {
      return "n\u0113";
    },
    get$repeatPassword() {
      return "Atk\u0101rtot paroli";
    },
    get$notAnImage() {
      return "Nav att\u0113la datne.";
    },
    get$setCustomPermissionLevel() {
      return "Iestat\u012bt piel\u0101gotu at\u013cauju l\u012bmeni";
    },
    get$setPermissionsLevelDescription() {
      return "L\u016bgums zem\u0101k atlas\u012bt iepriek\u0161izveidotu lomu vai ievad\u012bt piel\u0101gotu at\u013cauju l\u012bmeni starp 0 un 100.";
    },
    get$ignoreUser() {
      return "Ne\u0146emt v\u0113r\u0101 lietot\u0101ju";
    },
    get$normalUser() {
      return "Parasts lietot\u0101js";
    },
    get$remove(_) {
      return "No\u0146emt";
    },
    get$importNow() {
      return "Ievietot tagad";
    },
    get$importEmojis() {
      return "Ievietot emocijz\u012bmes";
    },
    get$importFromZipFile() {
      return "Ievietot no .zip datnes";
    },
    get$exportEmotePack() {
      return "Izg\u016bt emociju paku k\u0101 .zip";
    },
    get$replace(_) {
      return "Aizst\u0101t";
    },
    aboutHomeserver$1(homeserver) {
      return "Par " + homeserver;
    },
    get$accept(_) {
      return "Pie\u0146emt";
    },
    acceptedTheInvitation$1(username) {
      return "\ud83d\udc4d " + username + " pie\u0146\u0113ma uzaicin\u0101jumu";
    },
    get$account() {
      return "Konts";
    },
    activatedEndToEndEncryption$1(username) {
      return "\ud83d\udd10 " + username + " iesp\u0113joja piln\u012bgu \u0161ifr\u0113\u0161anu";
    },
    get$addEmail() {
      return "Pievienot e-pasta adresi";
    },
    supposedMxid$1(mxid) {
      return "Tam b\u016btu j\u0101b\u016bt " + mxid;
    },
    get$admin() {
      return "P\u0101rvald\u012bt\u0101js";
    },
    get$commandHint_roomupgrade() {
      return "Uzlabot \u0161o istabu uz nor\u0101d\u012bto istabas versiju";
    },
    get$commandHint_googly() {
      return "Nos\u016bt\u012bt izbol\u012btu acu p\u0101ri";
    },
    get$commandHint_cuddle() {
      return "Nos\u016bt\u012bt sam\u012b\u013cojienu";
    },
    get$commandHint_hug() {
      return "Nos\u016bt\u012bt apsk\u0101vienu";
    },
    googlyEyesContent$1(senderName) {
      return senderName + " s\u016bta izbol\u012btas acis";
    },
    cuddleContent$1(senderName) {
      return senderName + " sam\u012b\u013co Tevi";
    },
    hugContent$1(senderName) {
      return senderName + " apskauj Tevi";
    },
    answeredTheCall$1(senderName) {
      return senderName + " atbild\u0113ja uz zvanu";
    },
    get$anyoneCanJoin() {
      return "Ikviens var pievienoties";
    },
    get$archive() {
      return "Arh\u012bvs";
    },
    get$areYouSure() {
      return "Vai tie\u0161\u0101m?";
    },
    get$areYouSureYouWantToLogout() {
      return "Vai tie\u0161\u0101m atteikties?";
    },
    get$askSSSSSign() {
      return "Lai var\u0113tu parakst\u012bt otru cilv\u0113ku, l\u016bgums ievad\u012bt savu dro\u0161o kr\u0101tuves paroles v\u0101rdkopu vai atkopes atsl\u0113gu.";
    },
    askVerificationRequest$1(username) {
      return "Pie\u0146emt apliecin\u0101\u0161anas piepras\u012bjumu no " + username + "?";
    },
    badServerLoginTypesException$3(serverVersions, supportedVersions, suportedVersions) {
      return "M\u0101jasserveris nodro\u0161ina pieteik\u0161an\u0101s veidus:\n" + serverVersions + "\nSavuk\u0101rt, \u0161\u012b lietotne atbalsta tikai:\n" + supportedVersions;
    },
    get$sendTypingNotifications() {
      return "Nos\u016bt\u012bt rakst\u012b\u0161anas pazi\u0146ojumus";
    },
    get$swipeRightToLeftToReply() {
      return "Pavilkt no lab\u0101s puses uz kreiso, lai atbild\u0113tu";
    },
    get$sendOnEnter() {
      return "Nos\u016bt\u012bt ar Enter";
    },
    countChatsAndCountParticipants$2(chats, participants) {
      return "" + chats + " t\u0113rz\u0113\u0161anas un " + participants + " dal\u012bbnieki";
    },
    get$banFromChat() {
      return "Izsl\u0113gt no t\u0113rz\u0113\u0161anas";
    },
    get$banned() {
      return "Izsl\u0113gts";
    },
    bannedUser$2(username, targetName) {
      return username + " izsl\u0113dza " + targetName;
    },
    get$blockDevice() {
      return "Liegt ier\u012bci";
    },
    get$blocked() {
      return "Liegta";
    },
    get$cancel(_) {
      return "Atcelt";
    },
    cantOpenUri$1(uri) {
      return "Nevar atv\u0113rt adresi " + uri;
    },
    get$changeDeviceName() {
      return "Main\u012bt ier\u012bces nosaukumu";
    },
    changedTheChatAvatar$1(username) {
      return username + " nomain\u012bja t\u0113rz\u0113\u0161anas att\u0113lu";
    },
    changedTheChatDescriptionTo$2(username, description) {
      return username + " nomain\u012bja t\u0113rz\u0113\u0161anas aprakstu uz '" + description + "'";
    },
    changedTheChatNameTo$2(username, chatname) {
      return username + " nomain\u012bja t\u0113rz\u0113\u0161anas nosaukumu uz '" + chatname + "'";
    },
    changedTheChatPermissions$1(username) {
      return username + " nomain\u012bja t\u0113rz\u0113\u0161anas at\u013caujas";
    },
    changedTheDisplaynameTo$2(username, displayname) {
      return username + " nomain\u012bja savu att\u0113lojamo v\u0101rdu uz '" + displayname + "'";
    },
    changedTheGuestAccessRules$1(username) {
      return username + " nomain\u012bja viesu piek\u013cuves nosac\u012bjumus";
    },
    changedTheGuestAccessRulesTo$2(username, rules) {
      return username + " nomain\u012bja viesu piek\u013cuves nosac\u012bjumus uz " + rules;
    },
    changedTheHistoryVisibility$1(username) {
      return username + " main\u012bja v\u0113stures redzam\u012bbu";
    },
    changedTheHistoryVisibilityTo$2(username, rules) {
      return username + " nomain\u012bja v\u0113stures redzam\u012bbu uz " + rules;
    },
    changedTheJoinRules$1(username) {
      return username + " nomain\u012bja pievieno\u0161an\u0101s nosac\u012bjumus";
    },
    changedTheJoinRulesTo$2(username, joinRules) {
      return username + " nomain\u012bja pievieno\u0161an\u0101s nosac\u012bjumus uz " + joinRules;
    },
    changedTheProfileAvatar$1(username) {
      return username + " nomain\u012bja savu att\u0113lu";
    },
    changedTheRoomAliases$1(username) {
      return username + " nomain\u012bja istabas aizst\u0101jv\u0101rdus";
    },
    changedTheRoomInvitationLink$1(username) {
      return username + " nomain\u012bja uzaicin\u0101juma saiti";
    },
    get$changePassword() {
      return "Nomain\u012bt paroli";
    },
    get$changeTheme() {
      return "Main\u012bt izskatu";
    },
    get$changeYourAvatar() {
      return "Main\u012bt savu att\u0113lu";
    },
    get$channelCorruptedDecryptError() {
      return "\u0160ifr\u0113\u0161ana tika boj\u0101ta";
    },
    get$chat() {
      return "T\u0113rz\u0113\u0161ana";
    },
    get$chatDetails() {
      return "T\u0113rz\u0113\u0161anas izv\u0113rsums";
    },
    get$chats() {
      return "T\u0113rz\u0113\u0161anas";
    },
    get$chooseAStrongPassword() {
      return "J\u0101izv\u0113las dro\u0161a parole";
    },
    get$clearArchive() {
      return "Izt\u012br\u012bt arh\u012bvu";
    },
    get$close(_) {
      return "Aizv\u0113rt";
    },
    get$commandHint_markasdm() {
      return "Atz\u012bm\u0113t k\u0101 tie\u0161o zi\u0146u istabu nor\u0101d\u012btajam Matrix Id";
    },
    get$commandHint_markasgroup() {
      return "Atz\u012bm\u0113t k\u0101 kopu";
    },
    get$commandHint_ban() {
      return "Izsl\u0113gt nor\u0101d\u012bto lietot\u0101ju no \u0161\u012bs istabas";
    },
    get$commandHint_clearcache() {
      return "Izt\u012br\u012bt ke\u0161atmi\u0146u";
    },
    get$commandHint_create() {
      return "Izveidot tuk\u0161u kopas t\u0113rz\u0113\u0161anu\nLai atsp\u0113jotu \u0161ifr\u0113\u0161anu, j\u0101izmanto --no-encryption";
    },
    get$commandHint_discardsession() {
      return "Atmest sesiju";
    },
    get$commandHint_dm() {
      return "Uzs\u0101kt tie\u0161u t\u0113rz\u0113\u0161anu\nLai atsp\u0113jotu \u0161ifr\u0113\u0161anu, j\u0101izmanto --no-encryption";
    },
    get$commandHint_html() {
      return "Nos\u016bt\u012bt ar HTML format\u0113tu tekstu";
    },
    get$commandHint_invite() {
      return "Uzaicin\u0101t nor\u0101d\u012bto lietot\u0101ju \u0161aj\u0101 istab\u0101";
    },
    get$commandHint_join() {
      return "Pievienoties nor\u0101d\u012btajai istabai";
    },
    get$commandHint_kick() {
      return "No\u0146emt nor\u0101d\u012bto lietot\u0101ju no \u0161\u012bs istabas";
    },
    get$commandHint_leave() {
      return "Pamest \u0161o istabu";
    },
    get$commandHint_me() {
      return "Apraksti sevi";
    },
    get$commandHint_myroomavatar() {
      return "Iestat\u012bt savu att\u0113lu \u0161aj\u0101 istab\u0101 (ar mxc-uri)";
    },
    get$commandHint_myroomnick() {
      return "Iestat\u012bt savu att\u0113lojamo v\u0101rdu \u0161aj\u0101 istab\u0101";
    },
    get$commandHint_op() {
      return "Iestat\u012bt nor\u0101d\u012bt\u0101 lietot\u0101ja pilnvaru l\u012bmeni (noklus\u0113jums: 50)";
    },
    get$commandHint_plain() {
      return "Nos\u016bt\u012bt neformat\u0113tu tekstu";
    },
    get$commandHint_react() {
      return "Nos\u016bt\u012bt atbildi k\u0101 reakciju";
    },
    get$commandHint_send() {
      return "Nos\u016bt\u012bt tekstu";
    },
    get$commandHint_unban() {
      return "Atcelt nor\u0101d\u012bt\u0101 lietot\u0101ja izsl\u0113g\u0161anu no \u0161\u012bs istabas";
    },
    get$compareEmojiMatch() {
      return "L\u016bgums sal\u012bdzin\u0101t emocijz\u012bmes";
    },
    get$compareNumbersMatch() {
      return "L\u016bgums sal\u012bdzin\u0101t skait\u013cus";
    },
    get$configureChat() {
      return "Konfigur\u0113t t\u0113rz\u0113\u0161anu";
    },
    get$confirm(_) {
      return "Apstiprin\u0101t";
    },
    get$copiedToClipboard() {
      return "Ievietots starpliktuv\u0113";
    },
    get$copy(_) {
      return "Ievietot starpliktuv\u0113";
    },
    couldNotDecryptMessage$1(error) {
      return "Nevar\u0113ja at\u0161ifr\u0113t zi\u0146u: " + error;
    },
    get$checkList() {
      return "P\u0101rbau\u017eu saraksts";
    },
    countParticipants$1(count) {
      return "" + count + " dal\u012bbnieki";
    },
    countInvited$1(count) {
      return "" + count + " uzaicin\u0101ti";
    },
    get$create(_) {
      return "Izveidot";
    },
    createdTheChat$1(username) {
      return "\ud83d\udcac " + username + " izveidoja t\u0113rz\u0113\u0161anu";
    },
    get$createGroup() {
      return "Izveidot kopu";
    },
    get$currentlyActive() {
      return "Pa\u0161reiz darb\u012bgi";
    },
    get$darkTheme() {
      return "Tum\u0161s";
    },
    dateAndTimeOfDay$2(date, timeOfDay) {
      return date + ", " + timeOfDay;
    },
    get$deactivateAccountWarning() {
      return "Tas atsp\u0113jos Tavu lietot\u0101ja kontu. To nevar atdar\u012bt. Vai tie\u0161\u0101m?";
    },
    get$defaultPermissionLevel() {
      return "Noklus\u0113juma at\u013cauju l\u012bmenis jauniem lietot\u0101jiem";
    },
    get$$delete(_) {
      return "Izdz\u0113st";
    },
    get$deleteAccount() {
      return "Izdz\u0113st kontu";
    },
    get$deleteMessage() {
      return "Izdz\u0113st zi\u0146u";
    },
    get$devices() {
      return "Ier\u012bces";
    },
    get$displaynameHasBeenChanged() {
      return "Att\u0113lojamais v\u0101rds tika nomain\u012bts";
    },
    get$downloadFile() {
      return "Lejupiel\u0101d\u0113t datni";
    },
    get$edit() {
      return "Labot";
    },
    get$editBlockedServers() {
      return "Labot liegtos serverus";
    },
    get$chatPermissions() {
      return "T\u0113rz\u0113\u0161anas at\u013caujas";
    },
    get$editDisplayname() {
      return "Labot att\u0113lojamo v\u0101rdu";
    },
    get$editRoomAvatar() {
      return "Labot istabas att\u0113lu";
    },
    get$emoteExists() {
      return "Emocija jau past\u0101v.";
    },
    get$emoteInvalid() {
      return "Neder\u012bgs emocijas \u012bskods.";
    },
    get$emoteKeyboardNoRecents() {
      return "Nesen izmantot\u0101s emocijas par\u0101d\u012bsies \u0161eit...";
    },
    get$emotePacks() {
      return "Emociju pakas istabai";
    },
    get$customEmojisAndStickers() {
      return "Piel\u0101gotas emocijz\u012bmes un uzl\u012bmes";
    },
    get$emoteShortcode() {
      return "Emocijas \u012bskods";
    },
    get$emoteWarnNeedToPick() {
      return "Nepiecie\u0161ams izv\u0113l\u0113ties emocijas \u012bskodu un att\u0113lu.";
    },
    get$emptyChat() {
      return "Tuk\u0161a t\u0113rz\u0113\u0161ana";
    },
    get$enableEmotesGlobally() {
      return "Iesp\u0113jot k\u0101 visp\u0101r\u0113ju emociju paku";
    },
    get$enableEncryption() {
      return "Iesp\u0113jot \u0161ifr\u0113\u0161anu";
    },
    get$encrypted() {
      return "\u0160ifr\u0113ta";
    },
    get$encryptionNotEnabled() {
      return "\u0160ifr\u0113\u0161ana nav iesp\u0113jota";
    },
    endedTheCall$1(senderName) {
      return senderName + " beidza zvanu";
    },
    get$enterAnEmailAddress() {
      return "J\u0101ievada e-pasta adrese";
    },
    errorObtainingLocation$1(error) {
      return "K\u013c\u016bda atra\u0161an\u0101s vietas ieg\u016b\u0161an\u0101: " + error;
    },
    get$fontSize(_) {
      return "Fonta izm\u0113rs";
    },
    get$forward(_) {
      return "P\u0101rs\u016bt\u012bt";
    },
    get$fromJoining() {
      return "No pievieno\u0161an\u0101s";
    },
    get$fromTheInvitation() {
      return "No uzaicin\u0101juma";
    },
    get$guestsAreForbidden() {
      return "Viesi nav \u013cauti";
    },
    get$guestsCanJoin() {
      return "Viesi var pievienoties";
    },
    hasWithdrawnTheInvitationFor$2(username, targetName) {
      return username + " atsauca uzaicin\u0101jumu " + targetName;
    },
    get$help() {
      return "Pal\u012bdz\u012bba";
    },
    get$hideRedactedMessages() {
      return "Pasl\u0113pt labo\u0161anas zi\u0146as";
    },
    get$hideRedactedMessagesBody() {
      return "Ja k\u0101ds labo zi\u0146u, t\u0101 vairs neb\u016bs redzama t\u0113rz\u0113\u0161an\u0101.";
    },
    get$hideInvalidOrUnknownMessageFormats() {
      return "Pasl\u0113pt neder\u012bgus vai nezin\u0101mus zi\u0146u form\u0101tus";
    },
    get$block() {
      return "Izsl\u0113gt";
    },
    get$blockedUsers() {
      return "Atsl\u0113gtie lietot\u0101ji";
    },
    get$blockListDescription() {
      return "Ir iesp\u0113jams atsl\u0113gt trauc\u0113jo\u0161us lietot\u0101jus. Neb\u016bs iesp\u0113jams sa\u0146em jebk\u0101das zi\u0146as vai uzaicin\u0101jumus uz istab\u0101m no lietot\u0101jiem, kas ir person\u012bgaj\u0101 izsl\u0113g\u0161anas sarakst\u0101.";
    },
    get$blockUsername() {
      return "Ne\u0146emt v\u0113r\u0101 lietot\u0101jv\u0101rdu";
    },
    get$iHaveClickedOnLink() {
      return "Es uzklik\u0161\u0137in\u0101ju uz saites";
    },
    get$incorrectPassphraseOrKey() {
      return "Nepareiza paroles v\u0101rdkopa vai atkopes atsl\u0113ga";
    },
    get$inviteContact() {
      return "Uzaicin\u0101t kontaktpersonu";
    },
    get$noChatDescriptionYet() {
      return "T\u0113rz\u0113\u0161anas apraksts v\u0113l nav izveidots.";
    },
    get$tryAgain() {
      return "J\u0101m\u0113\u0123ina v\u0113lreiz";
    },
    get$invited() {
      return "Uzaicin\u0101ts";
    },
    get$redactMessageDescription() {
      return "Zi\u0146a tiks labota visiem \u0161\u012bs sarunas dal\u012bbniekiem. To nevar atdar\u012bt.";
    },
    get$optionalRedactReason() {
      return "(P\u0113c izv\u0113les) Zi\u0146as labo\u0161anas iemesls...";
    },
    invitedUser$2(username, targetName) {
      return "\ud83d\udce9 " + username + " uzaicin\u0101ja " + targetName;
    },
    get$invitedUsersOnly() {
      return "Tikai uzaicin\u0101ti lietot\u0101ji";
    },
    get$inviteForMe() {
      return "Uzaicin\u0101jumu man";
    },
    get$isTyping() {
      return "raksta\u2026";
    },
    joinedTheChat$1(username) {
      return "\ud83d\udc4b " + username + " pievienoj\u0101s t\u0113rz\u0113\u0161anai";
    },
    kicked$2(username, targetName) {
      return "\ud83d\udc5e " + username + " izmeta " + targetName;
    },
    get$kickFromChat() {
      return "Izmest no t\u0113rz\u0113\u0161anas";
    },
    lastActiveAgo$1(localizedTimeShort) {
      return "P\u0113d\u0113joreiz tie\u0161saist\u0113: " + localizedTimeShort;
    },
    get$leave() {
      return "Pamest";
    },
    get$leftTheChat() {
      return "Pameta t\u0113rz\u0113\u0161anu";
    },
    get$lightTheme() {
      return "Gai\u0161s";
    },
    get$dehydrate() {
      return "Izg\u016bt sesiju un izt\u012br\u012bt ier\u012bci";
    },
    get$dehydrateWarning() {
      return "\u0160\u012b darb\u012bba nav atdar\u0101ma. J\u0101nodro\u0161ina, ka rezerves kopijas datne tiek dro\u0161i uzglab\u0101ta.";
    },
    get$dehydrateTor() {
      return "TOR lietot\u0101ji: izg\u016bt sesiju";
    },
    get$dehydrateTorLong() {
      return "TOR lietot\u0101jiem ir ieteicams izg\u016bt sesiju pirms loga aizv\u0113r\u0161anas.";
    },
    get$loadingPleaseWait() {
      return "Iel\u0101d\u0113... L\u016bgums uzgaid\u012bt.";
    },
    get$loadMore() {
      return "Iel\u0101d\u0113t v\u0113l\u2026";
    },
    get$locationDisabledNotice() {
      return "Atra\u0161an\u0101s vietas pakalpojumi ir atsp\u0113joti. L\u016bgums tos iesp\u0113jot, lai b\u016btu iesp\u0113jams kop\u012bgot savu atra\u0161an\u0101s vietu.";
    },
    get$locationPermissionDeniedNotice() {
      return "Atra\u0161an\u0101s vietas at\u013cauja noliegta. L\u016bgums nodro\u0161in\u0101t to, lai b\u016btu iesp\u0113jams kop\u012bgot savu atra\u0161an\u0101s vietu.";
    },
    get$login() {
      return "Pieteikties";
    },
    get$logout() {
      return "Atteikties";
    },
    get$mention() {
      return "Piemin\u0113t";
    },
    get$messages() {
      return "Zi\u0146as";
    },
    get$messagesStyle() {
      return "Zi\u0146as:";
    },
    get$moderator() {
      return "Moderators";
    },
    get$newChat() {
      return "Jauna t\u0113rz\u0113\u0161ana";
    },
    get$newVerificationRequest() {
      return "Jauns apliecin\u0101\u0161anas piepras\u012bjums.";
    },
    get$next(_) {
      return "N\u0101kamais";
    },
    get$no() {
      return "N\u0113";
    },
    get$noConnectionToTheServer() {
      return "Nav savienojuma ar serveri";
    },
    get$noEmotesFound() {
      return "Netika atrasta neviena emocija. \ud83d\ude15";
    },
    get$shareInviteLink() {
      return "Kop\u012bgot uzaicin\u0101juma saiti";
    },
    get$none() {
      return "Neviens";
    },
    get$noPasswordRecoveryDescription() {
      return "V\u0113l nav pievienots paroles atjauno\u0161anas veids.";
    },
    get$noPermission() {
      return "Nav at\u013caujas";
    },
    get$noRoomsFound() {
      return "Istabas netika atrastas\u2026";
    },
    get$notifications() {
      return "Pazi\u0146ojumi";
    },
    get$obtainingLocation() {
      return "Ieg\u016bst atra\u0161an\u0101s vietu\u2026";
    },
    get$offensive() {
      return "Aizskaro\u0161s";
    },
    get$ok() {
      return "Labi";
    },
    get$oopsSomethingWentWrong() {
      return "Ups! Kaut kas nog\u0101ja greizi\u2026";
    },
    get$oneClientLoggedOut() {
      return "Viens no klientiem ir atteicies";
    },
    get$openInMaps() {
      return "Atv\u0113rt kart\u0113s";
    },
    get$link() {
      return "Saite";
    },
    get$serverRequiresEmail() {
      return "\u0160im serverim ir nepiecie\u0161ams p\u0101rbaud\u012bt Tavu e-pasta adresi re\u0123istr\u0101cijai.";
    },
    get$participant() {
      return "Dal\u012bbnieks";
    },
    get$passphraseOrKey() {
      return "paroles v\u0101rdkopa vai atkopes atsl\u0113ga";
    },
    get$password(_) {
      return "Parole";
    },
    get$passwordForgotten() {
      return "Aizmirsta parole";
    },
    get$passwordHasBeenChanged() {
      return "Parole tikai nomain\u012bta";
    },
    get$overview() {
      return "P\u0101rskats";
    },
    get$passwordRecoverySettings() {
      return "Paroles atkopes iestat\u012bjumi";
    },
    get$passwordRecovery() {
      return "Paroles atkope";
    },
    get$pickImage() {
      return "Izv\u0113l\u0113ties att\u0113lu";
    },
    get$pin() {
      return "PIN";
    },
    get$pleaseChoose() {
      return "L\u016bgums izv\u0113l\u0113ties";
    },
    get$pleaseEnterYourPassword() {
      return "L\u016bgums ievad\u012bt savu paroli";
    },
    get$pleaseEnterYourPin() {
      return "L\u016bgums ievad\u012bt savu PIN";
    },
    get$pleaseEnterYourUsername() {
      return "L\u016bgums ievad\u012bt savu lietot\u0101jv\u0101rdu";
    },
    get$pleaseFollowInstructionsOnWeb() {
      return 'L\u016bgums sekot nor\u0101d\u0113m t\u012bmek\u013cvietn\u0113 un piesist "N\u0101kamais".';
    },
    get$privacy() {
      return "Priv\u0101tums";
    },
    get$reason(_) {
      return "Iemesls";
    },
    redactedBy$1(username) {
      return "Laboja " + username;
    },
    get$directChat() {
      return "Tie\u0161\u0101 t\u0113rz\u0113\u0161ana";
    },
    redactedByBecause$2(username, reason) {
      return "Laboja " + username + ', jo: "' + reason + '"';
    },
    redactedAnEvent$1(username) {
      return username + " laboja notikumu";
    },
    get$redactMessage() {
      return "Labot zi\u0146u";
    },
    get$reject() {
      return "Noraid\u012bt";
    },
    rejectedTheInvitation$1(username) {
      return username + " noraid\u012bja uzaicin\u0101jumu";
    },
    get$removeAllOtherDevices() {
      return "No\u0146emt visas p\u0101r\u0113j\u0101s ier\u012bces";
    },
    get$unbanFromChat() {
      return "Atcelt liegumu t\u0113rz\u0113\u0161an\u0101";
    },
    get$removeYourAvatar() {
      return "No\u0146emt savu att\u0113lu";
    },
    get$replaceRoomWithNewerVersion() {
      return "Aizvietot istabu ar jaun\u0101ku versiju";
    },
    get$reply(_) {
      return "Atbild\u0113t";
    },
    get$reportMessage() {
      return "Zi\u0146ot par zi\u0146u";
    },
    get$roomHasBeenUpgraded() {
      return "Istaba tika atjaunin\u0101ta";
    },
    get$search(_) {
      return "Mekl\u0113t";
    },
    get$security() {
      return "Dro\u0161\u012bba";
    },
    get$send(_) {
      return "Nos\u016bt\u012bt";
    },
    get$sendAMessage() {
      return "Nos\u016bt\u012bt zi\u0146u";
    },
    get$sendAudio() {
      return "Nos\u016bt\u012bt ska\u0146u";
    },
    get$sendFile() {
      return "Nos\u016bt\u012bt datni";
    },
    get$sendImage() {
      return "Nos\u016bt\u012bt att\u0113lu";
    },
    sendImages$1(count) {
      return "Nos\u016bt\u012bt " + count + " att\u0113lu(s)";
    },
    get$sendMessages() {
      return "Nos\u016bt\u012bt zi\u0146as";
    },
    get$sendVideo() {
      return "Nos\u016bt\u012bt video";
    },
    sentAFile$1(username) {
      return "\ud83d\udcc1 " + username + " nos\u016bt\u012bja datni";
    },
    sentAnAudio$1(username) {
      return "\ud83c\udfa4 " + username + " nos\u016bt\u012bja ska\u0146u";
    },
    sentAPicture$1(username) {
      return "\ud83d\uddbc\ufe0f " + username + " nos\u016bt\u012bja att\u0113lu";
    },
    sentASticker$1(username) {
      return "\ud83d\ude0a " + username + " nos\u016bt\u012bja uzl\u012bmi";
    },
    sentAVideo$1(username) {
      return "\ud83c\udfa5 " + username + " nos\u016bt\u012bja video";
    },
    sentCallInformations$1(senderName) {
      return senderName + " nos\u016bt\u012bja inform\u0101ciju par zvanu";
    },
    get$separateChatTypes() {
      return "Atdal\u012bt tie\u0161\u0101s t\u0113rz\u0113\u0161anas un kopas";
    },
    get$setChatDescription() {
      return "Iestat\u012bt t\u0113rz\u0113\u0161anas aprakstu";
    },
    get$setStatus() {
      return "Iestat\u012bt st\u0101vokli";
    },
    get$settings() {
      return "Iestat\u012bjumi";
    },
    get$share(_) {
      return "Kop\u012bgot";
    },
    sharedTheLocation$1(username) {
      return username + " kop\u012bgoja savu atra\u0161an\u0101s vietu";
    },
    get$shareLocation() {
      return "Kop\u012bgot atra\u0161an\u0101s vietu";
    },
    get$presencesToggle() {
      return "R\u0101d\u012bt citu lietot\u0101ju st\u0101vok\u013ca zi\u0146as";
    },
    get$skip(_) {
      return "Izlaist";
    },
    get$sourceCode() {
      return "Pirmkods";
    },
    startedACall$1(senderName) {
      return senderName + " uzs\u0101ka zvanu";
    },
    get$status(_) {
      return "St\u0101voklis";
    },
    get$statusExampleMessage() {
      return "K\u0101 Tev \u0161odien kl\u0101jas?";
    },
    get$submit(_) {
      return "Iesniegt";
    },
    get$synchronizingPleaseWait() {
      return "Sinhroniz\u0113... L\u016bgums uzgaid\u012bt.";
    },
    synchronizingPleaseWaitCounter$1(percentage) {
      return " Sinhroniz\u0113... (" + percentage + "%)";
    },
    get$systemTheme() {
      return "Sist\u0113mas";
    },
    get$theyDontMatch() {
      return "T\u0101s nesakr\u012bt";
    },
    get$theyMatch() {
      return "T\u0101s sakr\u012bt";
    },
    get$tooManyRequestsWarning() {
      return "P\u0101r\u0101k daudz piepras\u012bjumu. L\u016bgums v\u0113l\u0101k m\u0113\u0123in\u0101t v\u0113lreiz.";
    },
    get$tryToSendAgain() {
      return "M\u0113\u0123in\u0101t nos\u016bt\u012bt v\u0113lreiz";
    },
    get$unavailable() {
      return "Nav pieejams";
    },
    unbannedUser$2(username, targetName) {
      return username + " atc\u0113la " + targetName + " piek\u013cuves liegumu";
    },
    get$unblockDevice() {
      return "Atsl\u0113gt ier\u012bci";
    },
    get$unknownDevice() {
      return "Nezin\u0101ma ier\u012bce";
    },
    get$unknownEncryptionAlgorithm() {
      return "Nezin\u0101ms \u0161ifr\u0113\u0161anas algoritms";
    },
    unknownEvent$1(type) {
      return "Nezin\u0101ms notikums '" + type + "'";
    },
    get$unpin() {
      return "Atspraust";
    },
    userAndOthersAreTyping$2(username, count) {
      return username + " un " + count + " citi raksta\u2026";
    },
    userAndUserAreTyping$2(username, username2) {
      return username + " un " + username2 + " raksta\u2026";
    },
    userIsTyping$1(username) {
      return username + " raksta\u2026";
    },
    userLeftTheChat$1(username) {
      return "\ud83d\udeaa " + username + " pameta t\u0113rz\u0113\u0161anu";
    },
    get$username(_) {
      return "Lietot\u0101jv\u0101rds";
    },
    userSentUnknownEvent$2(username, type) {
      return username + " nos\u016bt\u012bja notikumu " + type;
    },
    get$unverified() {
      return "Neapliecin\u0101ta";
    },
    get$verified() {
      return "Apliecin\u0101ta";
    },
    get$verifyStart() {
      return "Uzs\u0101kt apliecin\u0101\u0161anu";
    },
    get$verifySuccess() {
      return "Apliecin\u0101\u0161ana bija sekm\u012bga.";
    },
    get$verifyTitle() {
      return "Apliecina citu kontu";
    },
    get$visibleForAllParticipants() {
      return "Redzama visiem dal\u012bbniekiem";
    },
    get$visibleForEveryone() {
      return "Redzama visiem";
    },
    get$voiceMessage() {
      return "Balss zi\u0146a";
    },
    get$waitingPartnerAcceptRequest() {
      return "Gaida, l\u012bdz biedrs apstiprin\u0101s piepras\u012bjumu\u2026";
    },
    get$waitingPartnerEmoji() {
      return "Gaida, l\u012bdz biedrs apstiprin\u0101s emocijz\u012bmi\u2026";
    },
    get$waitingPartnerNumbers() {
      return "Gaida, l\u012bdz biedrs apstiprin\u0101s skait\u013cus\u2026";
    },
    get$warning() {
      return "Uzman\u012bbu!";
    },
    get$weSentYouAnEmail() {
      return "M\u0113s nos\u016bt\u012bja e-pasta zi\u0146u";
    },
    get$whyDoYouWantToReportThis() {
      return "K\u0101d\u0113\u013c v\u0113lies zi\u0146ot par \u0161o?";
    },
    get$withTheseAddressesRecoveryDescription() {
      return "Ar \u0161\u012bm adres\u0113m var atjaunot savu paroli.";
    },
    get$writeAMessage() {
      return "Rakst\u012bt zi\u0146u\u2026";
    },
    get$yes() {
      return "J\u0101";
    },
    get$you() {
      return "Tu";
    },
    get$youAreNoLongerParticipatingInThisChat() {
      return "Tu vairs nepiedalies \u0161aj\u0101 t\u0113rz\u0113\u0161an\u0101";
    },
    get$youHaveBeenBannedFromThisChat() {
      return "Tev tika liegta piek\u013cuve \u0161ai t\u0113rz\u0113\u0161anai";
    },
    get$yourPublicKey() {
      return "Tava publisk\u0101 atsl\u0113ga";
    },
    get$messageInfo() {
      return "Inform\u0101cija par zi\u0146u";
    },
    get$time(_) {
      return "Laiks";
    },
    get$sender() {
      return "S\u016bt\u012bt\u0101js";
    },
    get$openGallery() {
      return "Atv\u0113rt galeriju";
    },
    get$start(_) {
      return "Uzs\u0101kt";
    },
    get$markAsRead() {
      return "Atz\u012bm\u0113t k\u0101 las\u012btu";
    },
    reactedWith$2(sender, reaction) {
      return sender + " atsauc\u0101s ar " + reaction;
    },
    get$pinMessage() {
      return "Piespraust istabai";
    },
    get$emojis() {
      return "Emocijz\u012bmes";
    },
    get$youRejectedTheInvitation() {
      return "Tu noraid\u012bji uzaicin\u0101jumu";
    },
    get$youJoinedTheChat() {
      return "Tu pievienojies t\u0113rz\u0113\u0161anai";
    },
    get$youAcceptedTheInvitation() {
      return "\ud83d\udc4d Tu pie\u0146\u0113mi uzaicin\u0101jumu";
    },
    youBannedUser$1(user) {
      return "Tu " + user + " liedzi piek\u013cuvi";
    },
    youHaveWithdrawnTheInvitationFor$1(user) {
      return "Tu atsauci " + user + " uzaicin\u0101jumu";
    },
    youInvitedBy$1(user) {
      return "\ud83d\udce9 " + user + " Tevi uzaicin\u0101ja";
    },
    youInvitedUser$1(user) {
      return "\ud83d\udce9 Tu uzaicin\u0101ji " + user;
    },
    youKicked$1(user) {
      return "\ud83d\udc5e Tu izraid\u012bji " + user;
    },
    youUnbannedUser$1(user) {
      return "Tu atc\u0113li " + user + " piek\u013cuves liegumu";
    },
    hasKnocked$1(user) {
      return "\ud83d\udeaa " + user + " pieklauv\u0113ja";
    },
    get$users() {
      return "Lietot\u0101ji";
    },
    countFiles$1(count) {
      return "" + count + " datnes";
    },
    get$user() {
      return "Lietot\u0101js";
    },
    get$custom() {
      return "Piel\u0101gots";
    },
    get$noKeyForThisMessage() {
      return "T\u0101 var notikt, ja zi\u0146a tika nos\u016bt\u012bta, pirms pieteicies sav\u0101 kont\u0101 \u0161aj\u0101 ier\u012bc\u0113.\n\nIr ar\u012b iesp\u0113jams, ka s\u016bt\u012bt\u0101js noliedza Tavu ier\u012bci vai kaut kas nog\u0101ja greizi ar interneta savienojumu.\n\nVai zi\u0146as ir las\u0101mas cit\u0101 sesij\u0101? Tad Tu vari p\u0101rs\u016bt\u012bt zi\u0146u no t\u0101s. J\u0101dodas uz Iestat\u012bjumi > Ier\u012bces un j\u0101p\u0101rliecin\u0101s, ka ier\u012bces viena otru ir apliecin\u0101ju\u0161as. Kad n\u0101kamreiz atv\u0113rsi istabu un abas sesijas b\u016bs priek\u0161pl\u0101n\u0101, atsl\u0113gas tiks autom\u0101tiski p\u0101rs\u016bt\u012btas.\n\nVai nev\u0113lies zaud\u0113t atsl\u0113gas, kad atsakies vai maini ier\u012bces? J\u0101p\u0101rliecin\u0101s, ka iestat\u012bjumos ir iesp\u0113jota t\u0113rz\u0113\u0161anu rezerves kopija.";
    },
    wasDirectChatDisplayName$1(oldDisplayName) {
      return "Tuk\u0161a t\u0113rz\u0113\u0161ana (bija " + oldDisplayName + ")";
    },
    get$reopenChat() {
      return "Atk\u0101rtoti atv\u0113rt t\u0113rz\u0113\u0161anu";
    },
    get$noOtherDevicesFound() {
      return "Netika atrastas citas ier\u012bces";
    },
    fileIsTooBigForServer$1(max) {
      return "Nevar nos\u016bt\u012bt. Serveris nodro\u0161ina pielikums l\u012bdz " + max + ".";
    },
    get$jumpToLastReadMessage() {
      return "P\u0101rl\u0113kt uz p\u0113d\u0113jo izlas\u012bto zi\u0146u";
    },
    get$readUpToHere() {
      return "Izlas\u012bts l\u012bdz \u0161ejienei";
    },
    get$jump() {
      return "P\u0101rl\u0113kt";
    },
    get$openLinkInBrowser() {
      return "Atv\u0113rt saiti p\u0101rl\u016bk\u0101";
    },
    get$setColorTheme() {
      return "Iestat\u012bt kr\u0101su izskatu:";
    },
    get$invite() {
      return "Uzaicin\u0101t";
    },
    get$invalidInput() {
      return "Neder\u012bga ievade.";
    },
    wrongPinEntered$1(seconds) {
      return "Ievad\u012bts nepareizs PIN. L\u016bgums m\u0113\u0123in\u0101t v\u0113lreiz p\u0113c " + seconds + " sekund\u0113m...";
    },
    get$pleaseEnterANumber() {
      return "L\u016bgums ievad\u012bt skaitli liel\u0101ku par 0";
    },
    get$removeDevicesDescription() {
      return "Tu tiksi izrakst\u012bts no \u0161\u012bs ier\u012bces un vairs nevar\u0113si sa\u0146emt zi\u0146as.";
    },
    get$banUserDescription() {
      return "Lietot\u0101jam tiks liegta piek\u013cuve t\u0113rz\u0113\u0161anai, un vairs nevar\u0113s v\u0113lreiz pievienoties t\u0113rz\u0113\u0161anai, l\u012bdz liegums tiks atcelts.";
    },
    get$unbanUserDescription() {
      return "Lietot\u0101js var\u0113s atkal pievienoties t\u0113rz\u0113\u0161anai, ja m\u0113\u0123in\u0101s.";
    },
    get$kickUserDescription() {
      return "Lietot\u0101js ir izmests no t\u0113rz\u0113\u0161anas, bet piek\u013cuve nav liegta. Publisk\u0101s t\u0113rz\u0113\u0161an\u0101s lietot\u0101js var atk\u0101rtoti pievienoties jebkur\u0101 laik\u0101.";
    },
    get$makeAdminDescription() {
      return "Tikl\u012bdz \u0161is lietot\u0101js tiks padar\u012bts par p\u0101rvald\u012bt\u0101ju, to vairs nevar\u0113s atdar\u012bt, jo tad tam b\u016bs t\u0101das pa\u0161as at\u013caujas k\u0101 Tev.";
    },
    get$yourGlobalUserIdIs() {
      return "Visp\u0101r\u0113jais lietot\u0101ja Id ir: ";
    },
    noUsersFoundWithQuery$1(query) {
      return 'Diem\u017e\u0113l ar "' + query + '" netika atrasts neviens lietot\u0101js. L\u016bgums p\u0101rbaud\u012bt, vai ir pie\u013cauta drukas k\u013c\u016bda.';
    },
    get$knocking() {
      return "Klauv\u0113";
    },
    get$nothingFound() {
      return "Nekas netika atrasts...";
    },
    get$groupName() {
      return "Kopas nosaukums";
    },
    get$wrongRecoveryKey() {
      return "Atvaino... Ne\u0161\u0137iet, ka \u0161\u012b b\u016btu pareiza atkopes atsl\u0113ga.";
    },
    get$startConversation() {
      return "Uzs\u0101kt sarunu";
    },
    get$commandHint_sendraw() {
      return "Nos\u016bt\u012bt neapstr\u0101d\u0101tu JSON";
    },
    get$leaveEmptyToClearStatus() {
      return "Atst\u0101t tuk\u0161u, lai not\u012br\u012btu savu st\u0101vokli.";
    },
    get$searchForUsers() {
      return "Mekl\u0113t @lietot\u0101jus...";
    },
    get$pleaseEnterYourCurrentPassword() {
      return "L\u016bgums ievad\u012bt savu pa\u0161reiz\u0113jo paroli";
    },
    get$newPassword() {
      return "Jauna parole";
    },
    get$pleaseChooseAStrongPassword() {
      return "L\u016bgums izv\u0113l\u0113ties sp\u0113c\u012bgu paroli";
    },
    get$passwordsDoNotMatch() {
      return "Paroles nesakr\u012bt";
    },
    get$passwordIsWrong() {
      return "Ievad\u012bt\u0101 parole ir nepareiza";
    },
    get$decline() {
      return "Atteikt";
    },
    get$thisDevice() {
      return "\u0160\u012b ier\u012bce:";
    },
    get$initAppError() {
      return "Atgad\u012bj\u0101s k\u013c\u016bda lietotnes s\u0101kn\u0113\u0161anas laik\u0101";
    },
    searchIn$1(chat) {
      return 'Mekl\u0113t t\u0113rz\u0113\u0161an\u0101 "' + chat + '"...';
    },
    get$searchMore() {
      return "Mekl\u0113t vair\u0101k...";
    },
    get$gallery() {
      return "Galerija";
    },
    get$files(_) {
      return "Datnes";
    },
    sessionLostBody$2(url, error) {
      return "Sesija ir zaud\u0113ta. L\u016bgums zi\u0146ot par \u0161o k\u013c\u016bdu izstr\u0101d\u0101t\u0101jiem " + url + ". K\u013c\u016bdas zi\u0146ojums ir: " + error;
    },
    restoreSessionBody$2(url, error) {
      return "Lietotne tagad m\u0113\u0123ina atjaunot sesiju no rezerves kopijas. L\u016bgums zi\u0146ot par \u0161o k\u013c\u016bdu izstr\u0101d\u0101t\u0101jiem " + url + ". K\u013c\u016bdas zi\u0146ojums ir: " + error;
    },
    get$sendReadReceipts() {
      return "Nos\u016bt\u012bt las\u012b\u0161anas atskaites";
    },
    get$sendTypingNotificationsDescription() {
      return "Citi t\u0113rz\u0113\u0161anas dal\u012bbnieki var redz\u0113t, kad raksti jaunu zi\u0146u.";
    },
    get$sendReadReceiptsDescription() {
      return "Citi t\u0113rz\u0113\u0161anas dal\u012bbnieki var redz\u0113t, kad izlas\u012bji zi\u0146u.";
    },
    get$verifyOtherDevice() {
      return "\ud83d\udd10 Apliecin\u0101t otru ier\u012bci";
    },
    get$verifyOtherDeviceDescription() {
      return "Kad apliecini citu ier\u012bci, \u0161\u012bs ier\u012bces var apmain\u012bt atsl\u0113gas, palielinot visp\u0101r\u0113jo dro\u0161\u012bbu. \ud83d\udcaa P\u0113c apliecin\u0101\u0161anas uzs\u0101k\u0161anas ab\u0101s ier\u012bc\u0113s lietotn\u0113 par\u0101d\u012bsies uznirsto\u0161ais logs. Taj\u0101 b\u016bs redzamas da\u017e\u0101das emocijz\u012bmes vai skait\u013ci, kas j\u0101sal\u012bdzina ab\u0101s ier\u012bc\u0113s. Vislab\u0101k, ja abas ier\u012bces ir pieejamas, pirms tiek uzs\u0101kta apliecin\u0101\u0161ana. \ud83e\udd33";
    },
    acceptedKeyVerification$1(sender) {
      return sender + " apstiprin\u0101ja atsl\u0113gas apliecin\u0101\u0161anu";
    },
    canceledKeyVerification$1(sender) {
      return sender + " atc\u0113la atsl\u0113gas apliecin\u0101\u0161anu";
    },
    completedKeyVerification$1(sender) {
      return sender + " pabeidza atsl\u0113gas apliecin\u0101\u0161anu";
    },
    isReadyForKeyVerification$1(sender) {
      return sender + " ir gatavs atsl\u0113gas apliecin\u0101\u0161anai";
    },
    requestedKeyVerification$1(sender) {
      return sender + " piepras\u012bja atsl\u0113gas apliecin\u0101\u0161anu";
    },
    startedKeyVerification$1(sender) {
      return sender + " uzs\u0101ka atsl\u0113gas apliecin\u0101\u0161anu";
    },
    get$stickers() {
      return "Uzl\u012bmes";
    },
    get$commandHint_ignore() {
      return "Ne\u0146emt v\u0113r\u0101 nor\u0101d\u012bto Matrix Id";
    },
    get$commandHint_unignore() {
      return "Atcelt nor\u0101d\u012bt\u0101 Matrix Id ne\u0146em\u0161anu v\u0113r\u0101";
    },
    thereAreCountUsersBlocked$1(count) {
      return "\u0160obr\u012bd ir izsl\u0113gti " + count + " lietot\u0101ji.";
    },
    get$restricted() {
      return "Ierobe\u017eots";
    },
    get$markAsUnread() {
      return "Atz\u012bm\u0113t k\u0101 nelas\u012btu";
    },
    userLevel$1(level) {
      return "" + level + " - Lietot\u0101js";
    },
    moderatorLevel$1(level) {
      return "" + level + " - Moderators";
    },
    adminLevel$1(level) {
      return "" + level + " - P\u0101rvald\u012bt\u0101js";
    },
    get$changeTheVisibilityOfChatHistory() {
      return "Main\u012bt t\u0113rz\u0113\u0161anas v\u0113stures redzam\u012bbu";
    },
    get$changeTheCanonicalRoomAlias() {
      return "Main\u012bt t\u0113rz\u0113\u0161anas galveno publisko adresi";
    },
    get$sendRoomNotifications() {
      return "S\u016bt\u012bt @istaba pazi\u0146ojumus";
    },
    get$chatPermissionsDescription() {
      return "Noteikt, kur\u0161 sp\u0113ka l\u012bmenis ir nepiecie\u0161ams noteikt\u0101m darb\u012bb\u0101m \u0161aj\u0101 t\u0113rz\u0113\u0161an\u0101. Sp\u0113ka l\u012bme\u0146i 0, 50 un 100 parasti atbilst lietot\u0101jiem, moderatoriem un p\u0101rvald\u012bt\u0101jiem, bet ir iesp\u0113jams jebk\u0101ds iedal\u012bjums.";
    },
    updateInstalled$1(version) {
      return "\ud83c\udf89 Atjaunin\u0101jums " + version + " uzst\u0101d\u012bts.";
    },
    get$sendCanceled() {
      return "S\u016bt\u012b\u0161ana atcelta";
    },
    get$doesNotSeemToBeAValidHomeserver() {
      return "Neizskat\u0101s p\u0113c sader\u012bga m\u0101jasservera. Nepareizs URL?";
    },
    get$calculatingFileSize() {
      return "Apr\u0113\u0137ina datnes lielumu...";
    },
    get$prepareSendingAttachment() {
      return "Sagatavo pielikuma nos\u016bt\u012b\u0161anu...";
    },
    get$sendingAttachment() {
      return "Nos\u016bta pielikumu...";
    },
    sendingAttachmentCountOfCount$2(index, $length) {
      return "Nos\u016bta " + index + ". pielikumu no " + $length + "...";
    },
    serverLimitReached$1(seconds) {
      return "Sasniegts servera ierobe\u017eojums. Gaida " + seconds + " sekundes...";
    },
    get$noticeChatBackupDeviceVerification() {
      return "Piez\u012bme: kad visas ier\u012bces tiek savienotas ar t\u0113rz\u0113\u0161anu rezerves kopiju, t\u0101s tiek autom\u0101tiski apliecin\u0101tas.";
    },
    get$continueText() {
      return "Turpin\u0101t";
    },
    get$blur(_) {
      return "Aizmiglojums:";
    },
    get$opacity(_) {
      return "Necaurredzam\u012bba:";
    },
    get$setWallpaper() {
      return "Iestat\u012bt ekr\u0101ntapeti";
    },
    get$noContactInformationProvided() {
      return "Serveris nesniedz nek\u0101du der\u012bgu sazi\u0146as inform\u0101ciju";
    },
    get$contactServerAdmin() {
      return "Sazin\u0101ties ar servera p\u0101rvald\u012bt\u0101ju";
    },
    get$contactServerSecurity() {
      return "Sazin\u0101ties ar servera dro\u0161\u012bbas uztur\u0113t\u0101jiem";
    },
    get$supportPage() {
      return "Atbalsta lapa";
    },
    get$serverInformation() {
      return "Inform\u0101cija par serveri:";
    },
    get$name(_) {
      return "Nosaukums";
    },
    get$version(_) {
      return "Versija";
    },
    get$compress() {
      return "Saspiest";
    },
    get$boldText() {
      return "Teksts treknrakst\u0101";
    },
    get$italicText() {
      return "Teksts sl\u012bprakst\u0101";
    },
    get$strikeThrough() {
      return "P\u0101rsv\u012btrots";
    },
    get$pleaseFillOut() {
      return "L\u016bgums aizpild\u012bt";
    },
    get$invalidUrl() {
      return "Neder\u012bgs URL";
    },
    get$addLink() {
      return "Pievienot saiti";
    },
    get$unableToJoinChat() {
      return "Nevar\u0113ja pievienoties t\u0113rz\u0113\u0161anai. Varb\u016bt otra puse jau ir aizv\u0113rusi sarunu.";
    },
    get$previous() {
      return "Iepriek\u0161\u0113jais";
    },
    get$otherPartyNotLoggedIn() {
      return "Otra puse pa\u0161laik nav pieteikusies un t\u0101d\u0113\u013c nevar sa\u0146emt zi\u0146as.";
    },
    get$open(_) {
      return "Atv\u0113rt";
    },
    get$waitingForServer() {
      return "Gaida serveri...";
    },
    get$newChatRequest() {
      return "\ud83d\udce9 Jauns t\u0113rz\u0113\u0161anas piepras\u012bjums";
    },
    get$contentNotificationSettings() {
      return "Satura pazi\u0146ojumu iestat\u012bjumi";
    },
    get$generalNotificationSettings() {
      return "Visp\u0101r\u0113ji pazi\u0146ojumu iestat\u012bjumi";
    },
    get$roomNotificationSettings() {
      return "Istabu pazi\u0146ojumu iestat\u012bjumi";
    },
    get$userSpecificNotificationSettings() {
      return "Lietot\u0101ja pazi\u0146ojumu iestat\u012bjumi";
    },
    get$otherNotificationSettings() {
      return "Citi pazi\u0146ojumu iestat\u012bjumi";
    },
    get$notificationRuleContainsUserName() {
      return "Saturs lietot\u0101ja v\u0101rdu";
    },
    get$notificationRuleContainsUserNameDescription() {
      return "Pazi\u0146o lietot\u0101jam, kad zi\u0146a satur vi\u0146a lietot\u0101jv\u0101rdu.";
    },
    get$notificationRuleMaster() {
      return "Apklusin\u0101t visus pazi\u0146ojumus";
    },
    get$notificationRuleMasterDescription() {
      return "Aizvieto visas p\u0101r\u0113j\u0101s k\u0101rtulas un atsp\u0113jo visus pazi\u0146ojumus.";
    },
    get$notificationRuleSuppressNotices() {
      return "Apspiest autom\u0101tisk\u0101s zi\u0146as";
    },
    get$notificationRuleSuppressNoticesDescription() {
      return "Apspie\u017e pazi\u0146ojumus no automatiz\u0113tiem klientiem, piem\u0113ram, robotprogrammat\u016bras.";
    },
    get$notificationRuleInviteForMe() {
      return "Uzaicin\u0101jums man";
    },
    get$notificationRuleInviteForMeDescription() {
      return "Pazi\u0146o lietot\u0101jam, kad vi\u0146\u0161 ir uzaicin\u0101ts pievienoties istabai.";
    },
    get$notificationRuleMemberEvent() {
      return "Dal\u012bbnieka notikums";
    },
    get$notificationRuleMemberEventDescription() {
      return "Apspie\u017e pazi\u0146ojums par dal\u012bbas notikumiem.";
    },
    get$notificationRuleIsUserMention() {
      return "Lietot\u0101ja piemin\u0113\u0161ana";
    },
    get$notificationRuleIsUserMentionDescription() {
      return "Pazi\u0146o lietot\u0101jam, kad vi\u0146\u0161 zi\u0146\u0101 ir tie\u0161i piemin\u0113ts.";
    },
    get$notificationRuleContainsDisplayName() {
      return "Satur att\u0113lojamo v\u0101rdu";
    },
    get$notificationRuleContainsDisplayNameDescription() {
      return "Pazi\u0146o lietot\u0101jam, kad zi\u0146a satur vi\u0146a att\u0113lojamo v\u0101rdu.";
    },
    get$notificationRuleIsRoomMention() {
      return "Istabas piemin\u0113\u0161ana";
    },
    get$notificationRuleIsRoomMentionDescription() {
      return "Pazi\u0146o lietot\u0101jam, kad tiek piemin\u0113ta istaba.";
    },
    get$notificationRuleRoomnotif() {
      return "Istabas pazi\u0146ojums";
    },
    get$notificationRuleRoomnotifDescription() {
      return 'Pazi\u0146o lietot\u0101jam, kad zi\u0146a satur "@istaba".';
    },
    get$notificationRuleTombstone() {
      return "Kapakmens";
    },
    get$notificationRuleTombstoneDescription() {
      return "Pazi\u0146o lietot\u0101jam par istabu aizv\u0113r\u0161anas zi\u0146\u0101m.";
    },
    get$notificationRuleReaction() {
      return "Reakcija";
    },
    get$notificationRuleReactionDescription() {
      return "Apspie\u017e pazi\u0146ojums par reakcij\u0101m.";
    },
    get$notificationRuleRoomServerAcl() {
      return "Istabas servera ACL";
    },
    get$notificationRuleRoomServerAclDescription() {
      return "Apspie\u017e pazi\u0146ojumus par istabas servera piek\u013cuves kontroles sarakstiem (ACL).";
    },
    get$notificationRuleSuppressEdits() {
      return "Apspiest labojumus";
    },
    get$notificationRuleSuppressEditsDescription() {
      return "Apspie\u017e pazi\u0146ojumus par labot\u0101m zi\u0146\u0101m.";
    },
    get$notificationRuleCall() {
      return "Zvans";
    },
    get$notificationRuleCallDescription() {
      return "Pazi\u0146o lietot\u0101jam par zvaniem.";
    },
    get$notificationRuleEncryptedRoomOneToOne() {
      return "\u0160ifr\u0113ta viens pret viens istaba";
    },
    get$notificationRuleEncryptedRoomOneToOneDescription() {
      return "Pazi\u0146o lietot\u0101jam par zi\u0146\u0101m \u0161ifr\u0113t\u0101s viens pret viens istab\u0101s.";
    },
    get$notificationRuleRoomOneToOne() {
      return "Viens pret viens istaba";
    },
    get$notificationRuleRoomOneToOneDescription() {
      return "Pazi\u0146o lietot\u0101jam par zi\u0146\u0101m viens pret viens istab\u0101s.";
    },
    get$notificationRuleMessage() {
      return "Zi\u0146a";
    },
    get$notificationRuleMessageDescription() {
      return "Pazi\u0146o lietot\u0101jam par visp\u0101r\u0113j\u0101m zi\u0146\u0101m.";
    },
    get$notificationRuleEncrypted() {
      return "\u0160ifr\u0113ts";
    },
    get$notificationRuleEncryptedDescription() {
      return "Pazi\u0146o lietot\u0101jam par zi\u0146\u0101m \u0161ifr\u0113t\u0101s istab\u0101s.";
    },
    get$notificationRuleJitsi() {
      return "Jitsi";
    },
    get$notificationRuleJitsiDescription() {
      return "Pazi\u0146o lietot\u0101jam par Jitsi logr\u012bka notikumiem.";
    },
    get$notificationRuleServerAcl() {
      return "Apspiest servera ACL notikumus";
    },
    get$notificationRuleServerAclDescription() {
      return "Apspie\u017e notikumus par servera ACL notikumiem.";
    },
    unknownPushRule$1(rule) {
      return "Nezin\u0101ma pa\u0161pieg\u0101des k\u0101rtula '" + rule + "'";
    },
    sentVoiceMessage$2(sender, duration) {
      return "\ud83c\udf99\ufe0f " + duration + " - Balss zi\u0146a no " + sender;
    },
    get$deletePushRuleCanNotBeUndone() {
      return "Ja tiek izdz\u0113sts \u0161is pazi\u0146ojuma iestat\u012bjums, to nevar atsaukt.";
    },
    get$more() {
      return "Vair\u0101k";
    },
    get$shareKeysWith() {
      return "Kop\u012bgot atsl\u0113gas ar...";
    },
    get$shareKeysWithDescription() {
      return "Kur\u0101m ier\u012bc\u0113m vajadz\u0113tu uztic\u0113ties, lai taj\u0101s var\u0113tu las\u012bt zi\u0146as \u0161ifr\u0113taj\u0101s t\u0113rz\u0113\u0161an\u0101s?";
    },
    get$allDevices() {
      return "Visas ier\u012bces";
    },
    get$crossVerifiedDevicesIfEnabled() {
      return "Savstarp\u0113ji apliecin\u0101tas ier\u012bces, ja iesp\u0113jots";
    },
    get$crossVerifiedDevices() {
      return "Savstarp\u0113ji apliecin\u0101tas ier\u012bces";
    },
    get$verifiedDevicesOnly() {
      return "Tikai apliecin\u0101tas ier\u012bces";
    },
    get$optionalMessage() {
      return "(P\u0113c izv\u0113les) Zi\u0146ojums...";
    },
    get$notSupportedOnThisDevice() {
      return "\u0160aj\u0101 ier\u012bc\u0113 nav atbalst\u012bts";
    },
    get$enterNewChat() {
      return "Ieiet jaunaj\u0101 t\u0113rz\u0113\u0161an\u0101";
    },
    get$approve() {
      return "Apstiprin\u0101t";
    },
    get$commandHint_logout() {
      return "Atteikties pa\u0161reiz\u0113j\u0101 ier\u012bc\u0113";
    },
    get$commandHint_logoutall() {
      return "Atteikties vis\u0101s izmantotaj\u0101s ier\u012bc\u0113s";
    },
    get$customReaction() {
      return "Custom reaction";
    },
    writeAMessageLangCodes$2(l1, l2) {
      return "Type in " + l1 + " or " + l2 + "...";
    },
    get$holdForInfo() {
      return "Click and hold for word info.";
    },
    get$greenFeedback() {
      return "That's what I would put!";
    },
    get$yellowFeedback() {
      return "Hm, you can try that and see if it works! To use this word, just click it again.";
    },
    get$redFeedback() {
      return "I don't think that's right...";
    },
    get$itInstructionsTitle() {
      return "I can help you translate!";
    },
    get$itInstructionsBody() {
      return "You can click and hold choices for word info.";
    },
    get$gaTooltip() {
      return "L2 use with grammar assistance";
    },
    get$taTooltip() {
      return "L2 use with translation assistance";
    },
    get$interactiveTranslatorSliderHeader() {
      return "Interactive Translator";
    },
    get$interactiveGrammarSliderHeader() {
      return "Interactive Grammar Checker";
    },
    get$waTooltip() {
      return "L2 use without assistance";
    },
    get$noIdenticalLanguages() {
      return "Please choose different base and target languages";
    },
    get$joinWithClassCode() {
      return "Join course";
    },
    get$languageLevelPreA1() {
      return "True Beginner (Pre A1)";
    },
    get$languageLevelA1() {
      return "Beginner (A1)";
    },
    get$languageLevelA2() {
      return "Elementary (A2)";
    },
    get$languageLevelB1() {
      return "Intermediate (B1)";
    },
    get$languageLevelB2() {
      return "Upper Intermediate (B2)";
    },
    get$languageLevelC1() {
      return "Advanced (C1)";
    },
    get$languageLevelC2() {
      return "Mastery (C2)";
    },
    get$changeTheNameOfTheClass() {
      return "Change the name";
    },
    get$changeTheNameOfTheChat() {
      return "Change the name of the chat";
    },
    get$sorryNoResults() {
      return "Sorry, no results.";
    },
    get$ignoreInThisText() {
      return "Ignore";
    },
    needsItMessage$1(targetLanguage) {
      return "Wait, that's not " + targetLanguage + "! Do you need help translating?";
    },
    get$countryInformation() {
      return "My country";
    },
    get$targetLanguage() {
      return "Target Language";
    },
    get$updateLanguage() {
      return "My languages";
    },
    get$whatLanguageYouWantToLearn() {
      return "What language do you want to learn?";
    },
    get$whatIsYourBaseLanguage() {
      return "What is your base language?";
    },
    get$saveChanges() {
      return "Save changes";
    },
    get$publicProfileTitle() {
      return "Allow my profile to be found in search";
    },
    get$publicProfileDesc() {
      return "By turning on, you enable other users to find your profile in the global search bar and send requests to chat. At this point, you can choose to accept or deny the request.";
    },
    get$errorDisableIT() {
      return "Translation assistance is turned off.";
    },
    get$errorDisableIGC() {
      return "Grammar assistance is turned off.";
    },
    get$errorDisableLanguageAssistance() {
      return "Translation assistance and grammar assistance are turned off.";
    },
    get$errorDisableITUserDesc() {
      return "Click here to update translation assistance settings";
    },
    get$errorDisableIGCUserDesc() {
      return "Click here to update grammar assistance settings";
    },
    get$errorDisableLanguageAssistanceUserDesc() {
      return "Click here to update translation assistance and grammar assistance settings";
    },
    get$errorDisableITClassDesc() {
      return "Translation assistance is turned off for the course that this chat is in.";
    },
    get$errorDisableIGCClassDesc() {
      return "Grammar assistance is turned off for the course that this chat is in.";
    },
    get$error405Title() {
      return "Languages not set";
    },
    get$error405Desc() {
      return "Please set your languages in Main Menu > Learning Settings.";
    },
    get$termsAndConditions() {
      return "Terms and Conditions";
    },
    get$andCertifyIAmAtLeast13YearsOfAge() {
      return " and certify I am at least 16 years of age.";
    },
    get$error502504Title() {
      return "Wow, there are a lot of students online!";
    },
    get$error502504Desc() {
      return "Translation and grammar tools may be slow or unavailable while the Pangea bots catch up.";
    },
    get$error404Title() {
      return "Translation error!";
    },
    get$error404Desc() {
      return "Pangea Bot isn't sure how to translate that...";
    },
    get$errorPleaseRefresh() {
      return "We're looking into it! Please reload and try again.";
    },
    get$connectedToStaging() {
      return "Connected to Staging";
    },
    get$learningSettings() {
      return "Learning settings";
    },
    get$participants() {
      return "Participants";
    },
    get$clickMessageTitle() {
      return "Need help?";
    },
    get$clickMessageBody() {
      return "Click a message for language tools like translation, play back and more!";
    },
    get$allDone() {
      return "All done!";
    },
    get$vocab() {
      return "Vocab";
    },
    get$subscribe(_) {
      return "Subscribe";
    },
    get$getAccess() {
      return "Subscribe now!";
    },
    get$subscriptionDesc() {
      return "Messaging is free! Subscribe to unlock interactive translation, grammar checking and learning analytics.";
    },
    get$subscriptionManagement() {
      return "Subscription Management";
    },
    get$currentSubscription() {
      return "Current Subscription";
    },
    get$cancelSubscription() {
      return "Cancel your subscription";
    },
    get$selectYourPlan() {
      return "Select Your Plan";
    },
    get$subsciptionPlatformTooltip() {
      return "Please login to your original device to manage your subscription plan";
    },
    get$subscriptionManagementUnavailable() {
      return "Subscription management not available";
    },
    get$paymentMethod() {
      return "Payment Method";
    },
    get$paymentHistory() {
      return "Payment History";
    },
    get$emptyChatDownloadWarning() {
      return "Cannot download empty chat";
    },
    get$toggleImmersionMode() {
      return "Immersion Mode";
    },
    get$toggleImmersionModeDesc() {
      return "When enabled, all messages are displayed in your target language. This setting is most useful in language exchanges.";
    },
    get$itToggleDescription() {
      return "This language learning tool will identify words in your base language and help you translate them to your target language. Though rare, the AI can make translation errors.";
    },
    get$igcToggleDescription() {
      return "This language learning tool will identify common spelling, grammar and punctuation errors in your message and suggest corrections. Though rare, the AI can make correction errors.";
    },
    get$originalMessage() {
      return "Original Message";
    },
    get$sentMessage() {
      return "Sent Message";
    },
    get$useType() {
      return "Use Type";
    },
    get$notAvailable() {
      return "Not Available";
    },
    get$taAndGaTooltip() {
      return "L2 use with translation assistance and grammar assistance";
    },
    get$definitionsToolName() {
      return "Word Definitions";
    },
    get$definitionsToolDescription() {
      return "When enabled, words underlined in blue can be clicked for definitions. Click messages to access definitions.";
    },
    get$welcomeBack() {
      return "Welcome back! If you were part of the 2023-2024 pilot, please contact us for your special pilot subscription. If you are a teacher who has (or whose institution has) purchased licenses for your class, contact us for your teacher subscription.";
    },
    get$downloadTxtFile() {
      return "Download Text File";
    },
    get$downloadCSVFile() {
      return "Download CSV File";
    },
    get$promotionalSubscriptionDesc() {
      return "You currently have a lifetime promotional subscription. Message support@pangea.chat for help changing your subscription.";
    },
    originalSubscriptionPlatform$1(purchasePlatform) {
      return "Subscription purchased through " + purchasePlatform;
    },
    get$oneWeekTrial() {
      return "One Week Trial";
    },
    get$downloadXLSXFile() {
      return "Download Excel File";
    },
    get$unkDisplayName() {
      return "Unknown";
    },
    get$wwCountryDisplayName() {
      return "World Wide";
    },
    get$afCountryDisplayName() {
      return "Afghanistan";
    },
    get$axCountryDisplayName() {
      return "Aland Islands";
    },
    get$alCountryDisplayName() {
      return "Albania";
    },
    get$dzCountryDisplayName() {
      return "Algeria";
    },
    get$asCountryDisplayName() {
      return "American Samoa";
    },
    get$adCountryDisplayName() {
      return "Andorra";
    },
    get$aoCountryDisplayName() {
      return "Angola";
    },
    get$aiCountryDisplayName() {
      return "Anguilla";
    },
    get$agCountryDisplayName() {
      return "Antigua and Barbuda";
    },
    get$arCountryDisplayName() {
      return "Argentina";
    },
    get$amCountryDisplayName() {
      return "Armenia";
    },
    get$awCountryDisplayName() {
      return "Aruba";
    },
    get$acCountryDisplayName() {
      return "Ascension Island";
    },
    get$auCountryDisplayName() {
      return "Australia";
    },
    get$atCountryDisplayName() {
      return "Austria";
    },
    get$azCountryDisplayName() {
      return "Azerbaijan";
    },
    get$bsCountryDisplayName() {
      return "Bahamas";
    },
    get$bhCountryDisplayName() {
      return "Bahrain";
    },
    get$bdCountryDisplayName() {
      return "Bangladesh";
    },
    get$bbCountryDisplayName() {
      return "Barbados";
    },
    get$byCountryDisplayName() {
      return "Belarus";
    },
    get$beCountryDisplayName() {
      return "Belgium";
    },
    get$bzCountryDisplayName() {
      return "Belize";
    },
    get$bjCountryDisplayName() {
      return "Benin";
    },
    get$bmCountryDisplayName() {
      return "Bermuda";
    },
    get$btCountryDisplayName() {
      return "Bhutan";
    },
    get$boCountryDisplayName() {
      return "Bolivia";
    },
    get$baCountryDisplayName() {
      return "Bosnia and Herzegovina";
    },
    get$bwCountryDisplayName() {
      return "Botswana";
    },
    get$brCountryDisplayName() {
      return "Brazil";
    },
    get$ioCountryDisplayName() {
      return "British Indian Ocean Territory";
    },
    get$vgCountryDisplayName() {
      return "British Virgin Islands";
    },
    get$bnCountryDisplayName() {
      return "Brunei";
    },
    get$bgCountryDisplayName() {
      return "Bulgaria";
    },
    get$bfCountryDisplayName() {
      return "Burkina Faso";
    },
    get$biCountryDisplayName() {
      return "Burundi";
    },
    get$khCountryDisplayName() {
      return "Cambodia";
    },
    get$cmCountryDisplayName() {
      return "Cameroon";
    },
    get$caCountryDisplayName() {
      return "Canada";
    },
    get$cvCountryDisplayName() {
      return "Cape Verde";
    },
    get$bqCountryDisplayName() {
      return "Caribbean Netherlands";
    },
    get$kyCountryDisplayName() {
      return "Cayman Islands";
    },
    get$cfCountryDisplayName() {
      return "Central African Republic";
    },
    get$tdCountryDisplayName() {
      return "Chad";
    },
    get$clCountryDisplayName() {
      return "Chile";
    },
    get$cnCountryDisplayName() {
      return "China";
    },
    get$cxCountryDisplayName() {
      return "Christmas Island";
    },
    get$ccCountryDisplayName() {
      return "Cocos [Keeling] Islands";
    },
    get$coCountryDisplayName() {
      return "Colombia";
    },
    get$kmCountryDisplayName() {
      return "Comoros";
    },
    get$cdCountryDisplayName() {
      return "Democratic Republic Congo";
    },
    get$cgCountryDisplayName() {
      return "Republic of Congo";
    },
    get$ckCountryDisplayName() {
      return "Cook Islands";
    },
    get$crCountryDisplayName() {
      return "Costa Rica";
    },
    get$ciCountryDisplayName() {
      return "C\xf4te d'Ivoire";
    },
    get$hrCountryDisplayName() {
      return "Croatia";
    },
    get$cuCountryDisplayName() {
      return "Cuba";
    },
    get$cwCountryDisplayName() {
      return "Cura\xe7ao";
    },
    get$cyCountryDisplayName() {
      return "Cyprus";
    },
    get$czCountryDisplayName() {
      return "Czech Republic";
    },
    get$dkCountryDisplayName() {
      return "Denmark";
    },
    get$djCountryDisplayName() {
      return "Djibouti";
    },
    get$dmCountryDisplayName() {
      return "Dominica";
    },
    get$doCountryDisplayName() {
      return "Dominican Republic";
    },
    get$tlCountryDisplayName() {
      return "East Timor";
    },
    get$ecCountryDisplayName() {
      return "Ecuador";
    },
    get$egCountryDisplayName() {
      return "Egypt";
    },
    get$svCountryDisplayName() {
      return "El Salvador";
    },
    get$gqCountryDisplayName() {
      return "Equatorial Guinea";
    },
    get$erCountryDisplayName() {
      return "Eritrea";
    },
    get$eeCountryDisplayName() {
      return "Estonia";
    },
    get$szCountryDisplayName() {
      return "Eswatini";
    },
    get$etCountryDisplayName() {
      return "Ethiopia";
    },
    get$fkCountryDisplayName() {
      return "Falkland Islands";
    },
    get$foCountryDisplayName() {
      return "Faroe Islands";
    },
    get$fjCountryDisplayName() {
      return "Fiji";
    },
    get$fiCountryDisplayName() {
      return "Finland";
    },
    get$frCountryDisplayName() {
      return "France";
    },
    get$gfCountryDisplayName() {
      return "French Guiana";
    },
    get$pfCountryDisplayName() {
      return "French Polynesia";
    },
    get$gaCountryDisplayName() {
      return "Gabon";
    },
    get$gmCountryDisplayName() {
      return "Gambia";
    },
    get$geCountryDisplayName() {
      return "Georgia";
    },
    get$deCountryDisplayName() {
      return "Germany";
    },
    get$ghCountryDisplayName() {
      return "Ghana";
    },
    get$giCountryDisplayName() {
      return "Gibraltar";
    },
    get$grCountryDisplayName() {
      return "Greece";
    },
    get$glCountryDisplayName() {
      return "Greenland";
    },
    get$gdCountryDisplayName() {
      return "Grenada";
    },
    get$gpCountryDisplayName() {
      return "Guadeloupe";
    },
    get$guCountryDisplayName() {
      return "Guam";
    },
    get$gtCountryDisplayName() {
      return "Guatemala";
    },
    get$ggCountryDisplayName() {
      return "Guernsey";
    },
    get$gnCountryDisplayName() {
      return "Guinea Conakry";
    },
    get$gwCountryDisplayName() {
      return "Guinea-Bissau";
    },
    get$gyCountryDisplayName() {
      return "Guyana";
    },
    get$htCountryDisplayName() {
      return "Haiti";
    },
    get$hmCountryDisplayName() {
      return "Heard Island and McDonald Islands";
    },
    get$hnCountryDisplayName() {
      return "Honduras";
    },
    get$hkCountryDisplayName() {
      return "Hong Kong";
    },
    get$huCountryDisplayName() {
      return "Hungary";
    },
    get$isCountryDisplayName() {
      return "Iceland";
    },
    get$inCountryDisplayName() {
      return "India";
    },
    get$idCountryDisplayName() {
      return "Indonesia";
    },
    get$irCountryDisplayName() {
      return "Iran";
    },
    get$iqCountryDisplayName() {
      return "Iraq";
    },
    get$ieCountryDisplayName() {
      return "Ireland";
    },
    get$imCountryDisplayName() {
      return "Isle of Man";
    },
    get$ilCountryDisplayName() {
      return "Israel";
    },
    get$itCountryDisplayName() {
      return "Italy";
    },
    get$jmCountryDisplayName() {
      return "Jamaica";
    },
    get$jpCountryDisplayName() {
      return "Japan";
    },
    get$jeCountryDisplayName() {
      return "Jersey";
    },
    get$joCountryDisplayName() {
      return "Jordan";
    },
    get$kzCountryDisplayName() {
      return "Kazakhstan";
    },
    get$keCountryDisplayName() {
      return "Kenya";
    },
    get$kiCountryDisplayName() {
      return "Kiribati";
    },
    get$xkCountryDisplayName() {
      return "Kosovo";
    },
    get$kwCountryDisplayName() {
      return "Kuwait";
    },
    get$kgCountryDisplayName() {
      return "Kyrgyzstan";
    },
    get$laCountryDisplayName() {
      return "Laos";
    },
    get$lvCountryDisplayName() {
      return "Latvia";
    },
    get$lbCountryDisplayName() {
      return "Lebanon";
    },
    get$lsCountryDisplayName() {
      return "Lesotho";
    },
    get$lrCountryDisplayName() {
      return "Liberia";
    },
    get$lyCountryDisplayName() {
      return "Libya";
    },
    get$liCountryDisplayName() {
      return "Liechtenstein";
    },
    get$ltCountryDisplayName() {
      return "Lithuania";
    },
    get$luCountryDisplayName() {
      return "Luxembourg";
    },
    get$moCountryDisplayName() {
      return "Macau";
    },
    get$mkCountryDisplayName() {
      return "Macedonia";
    },
    get$mgCountryDisplayName() {
      return "Madagascar";
    },
    get$mwCountryDisplayName() {
      return "Malawi";
    },
    get$myCountryDisplayName() {
      return "Malaysia";
    },
    get$mvCountryDisplayName() {
      return "Maldives";
    },
    get$mlCountryDisplayName() {
      return "Mali";
    },
    get$mtCountryDisplayName() {
      return "Malta";
    },
    get$mhCountryDisplayName() {
      return "Marshall Islands";
    },
    get$mqCountryDisplayName() {
      return "Martinique";
    },
    get$mrCountryDisplayName() {
      return "Mauritania";
    },
    get$muCountryDisplayName() {
      return "Mauritius";
    },
    get$ytCountryDisplayName() {
      return "Mayotte";
    },
    get$mxCountryDisplayName() {
      return "Mexico";
    },
    get$fmCountryDisplayName() {
      return "Micronesia";
    },
    get$mdCountryDisplayName() {
      return "Moldova";
    },
    get$mcCountryDisplayName() {
      return "Monaco";
    },
    get$mnCountryDisplayName() {
      return "Mongolia";
    },
    get$meCountryDisplayName() {
      return "Montenegro";
    },
    get$msCountryDisplayName() {
      return "Montserrat";
    },
    get$maCountryDisplayName() {
      return "Morocco";
    },
    get$mzCountryDisplayName() {
      return "Mozambique";
    },
    get$mmCountryDisplayName() {
      return "Myanmar (Burma)";
    },
    get$naCountryDisplayName() {
      return "Namibia";
    },
    get$nrCountryDisplayName() {
      return "Nauru";
    },
    get$npCountryDisplayName() {
      return "Nepal";
    },
    get$nlCountryDisplayName() {
      return "Netherlands";
    },
    get$ncCountryDisplayName() {
      return "New Caledonia";
    },
    get$nzCountryDisplayName() {
      return "New Zealand";
    },
    get$niCountryDisplayName() {
      return "Nicaragua";
    },
    get$neCountryDisplayName() {
      return "Niger";
    },
    get$ngCountryDisplayName() {
      return "Nigeria";
    },
    get$nuCountryDisplayName() {
      return "Niue";
    },
    get$nfCountryDisplayName() {
      return "Norfolk Island";
    },
    get$kpCountryDisplayName() {
      return "North Korea";
    },
    get$mpCountryDisplayName() {
      return "Northern Mariana Islands";
    },
    get$noCountryDisplayName() {
      return "Norway";
    },
    get$omCountryDisplayName() {
      return "Oman";
    },
    get$pkCountryDisplayName() {
      return "Pakistan";
    },
    get$pwCountryDisplayName() {
      return "Palau";
    },
    get$psCountryDisplayName() {
      return "Palestinian Territories";
    },
    get$paCountryDisplayName() {
      return "Panama";
    },
    get$pgCountryDisplayName() {
      return "Papua New Guinea";
    },
    get$pyCountryDisplayName() {
      return "Paraguay";
    },
    get$peCountryDisplayName() {
      return "Peru";
    },
    get$phCountryDisplayName() {
      return "Philippines";
    },
    get$plCountryDisplayName() {
      return "Poland";
    },
    get$ptCountryDisplayName() {
      return "Portugal";
    },
    get$prCountryDisplayName() {
      return "Puerto Rico";
    },
    get$qaCountryDisplayName() {
      return "Qatar";
    },
    get$reCountryDisplayName() {
      return "R\xe9union";
    },
    get$roCountryDisplayName() {
      return "Romania";
    },
    get$ruCountryDisplayName() {
      return "Russia";
    },
    get$rwCountryDisplayName() {
      return "Rwanda";
    },
    get$blCountryDisplayName() {
      return "Saint Barth\xe9lemy";
    },
    get$shCountryDisplayName() {
      return "Saint Helena";
    },
    get$knCountryDisplayName() {
      return "St. Kitts";
    },
    get$lcCountryDisplayName() {
      return "St. Lucia";
    },
    get$mfCountryDisplayName() {
      return "Saint Martin";
    },
    get$pmCountryDisplayName() {
      return "Saint Pierre and Miquelon";
    },
    get$vcCountryDisplayName() {
      return "St. Vincent";
    },
    get$wsCountryDisplayName() {
      return "Samoa";
    },
    get$smCountryDisplayName() {
      return "San Marino";
    },
    get$stCountryDisplayName() {
      return "S\xe3o Tom\xe9 and Pr\xedncipe";
    },
    get$saCountryDisplayName() {
      return "Saudi Arabia";
    },
    get$snCountryDisplayName() {
      return "Senegal";
    },
    get$rsCountryDisplayName() {
      return "Serbia";
    },
    get$scCountryDisplayName() {
      return "Seychelles";
    },
    get$slCountryDisplayName() {
      return "Sierra Leone";
    },
    get$sgCountryDisplayName() {
      return "Singapore";
    },
    get$sxCountryDisplayName() {
      return "Sint Maarten";
    },
    get$skCountryDisplayName() {
      return "Slovakia";
    },
    get$siCountryDisplayName() {
      return "Slovenia";
    },
    get$sbCountryDisplayName() {
      return "Solomon Islands";
    },
    get$soCountryDisplayName() {
      return "Somalia";
    },
    get$zaCountryDisplayName() {
      return "South Africa";
    },
    get$gsCountryDisplayName() {
      return "South Georgia and the South Sandwich Islands";
    },
    get$krCountryDisplayName() {
      return "South Korea";
    },
    get$ssCountryDisplayName() {
      return "South Sudan";
    },
    get$esCountryDisplayName() {
      return "Spain";
    },
    get$lkCountryDisplayName() {
      return "Sri Lanka";
    },
    get$sdCountryDisplayName() {
      return "Sudan";
    },
    get$srCountryDisplayName() {
      return "Suriname";
    },
    get$sjCountryDisplayName() {
      return "Svalbard and Jan Mayen";
    },
    get$seCountryDisplayName() {
      return "Sweden";
    },
    get$chCountryDisplayName() {
      return "Switzerland";
    },
    get$syCountryDisplayName() {
      return "Syria";
    },
    get$twCountryDisplayName() {
      return "Taiwan";
    },
    get$tjCountryDisplayName() {
      return "Tajikistan";
    },
    get$tzCountryDisplayName() {
      return "Tanzania";
    },
    get$thCountryDisplayName() {
      return "Thailand";
    },
    get$tgCountryDisplayName() {
      return "Togo";
    },
    get$tkCountryDisplayName() {
      return "Tokelau";
    },
    get$toCountryDisplayName() {
      return "Tonga";
    },
    get$ttCountryDisplayName() {
      return "Trinidad/Tobago";
    },
    get$tnCountryDisplayName() {
      return "Tunisia";
    },
    get$trCountryDisplayName() {
      return "Turkey";
    },
    get$tmCountryDisplayName() {
      return "Turkmenistan";
    },
    get$tcCountryDisplayName() {
      return "Turks and Caicos Islands";
    },
    get$tvCountryDisplayName() {
      return "Tuvalu";
    },
    get$viCountryDisplayName() {
      return "U.S. Virgin Islands";
    },
    get$ugCountryDisplayName() {
      return "Uganda";
    },
    get$uaCountryDisplayName() {
      return "Ukraine";
    },
    get$aeCountryDisplayName() {
      return "United Arab Emirates";
    },
    get$gbCountryDisplayName() {
      return "United Kingdom";
    },
    get$usCountryDisplayName() {
      return "United States";
    },
    get$uyCountryDisplayName() {
      return "Uruguay";
    },
    get$uzCountryDisplayName() {
      return "Uzbekistan";
    },
    get$vuCountryDisplayName() {
      return "Vanuatu";
    },
    get$vaCountryDisplayName() {
      return "Vatican City";
    },
    get$veCountryDisplayName() {
      return "Venezuela";
    },
    get$vnCountryDisplayName() {
      return "Vietnam";
    },
    get$wfCountryDisplayName() {
      return "Wallis and Futuna";
    },
    get$ehCountryDisplayName() {
      return "Western Sahara";
    },
    get$yeCountryDisplayName() {
      return "Yemen";
    },
    get$zmCountryDisplayName() {
      return "Zambia";
    },
    get$zwCountryDisplayName() {
      return "Zimbabwe";
    },
    get$pay() {
      return "Pay";
    },
    invitedToSpace$2(space, user) {
      return user + " has invited you to join a course: " + space + "! Do you wish to accept?";
    },
    get$youreInvited() {
      return "\ud83d\udce9 You're invited!";
    },
    invitedToChat$2($name, user) {
      return user + " has invited you to join a chat: " + $name + "! Do you wish to accept?";
    },
    get$monthlySubscription() {
      return "Monthly";
    },
    get$yearlySubscription() {
      return "Yearly";
    },
    get$defaultSubscription() {
      return "Pangea Chat Subscription";
    },
    get$freeTrial() {
      return "Free Trial";
    },
    get$noDataFound() {
      return "No data found";
    },
    get$blurMeansTranslateTitle() {
      return "Why is the message blurred?";
    },
    get$blurMeansTranslateBody() {
      return "While Immersion Mode is on, messages that are sent in your base language will be blurred while Pangea Bot translates them to your target language. Immersion Mode can be toggled in individual and course settings.";
    },
    get$bestCorrectionFeedback() {
      return "That's correct!";
    },
    get$distractorFeedback() {
      return "That's not quite right.";
    },
    get$bestAnswerFeedback() {
      return "That's correct!";
    },
    get$definitionDefaultPrompt() {
      return "What does this word mean?";
    },
    get$practiceDefaultPrompt() {
      return "What is the best answer?";
    },
    get$correctionDefaultPrompt() {
      return "What is the best replacement?";
    },
    get$reportToTeacher() {
      return "Who do you want to report this message to?";
    },
    reportMessageTitle$3(reportingUserId, reportedUserId, roomName) {
      return reportingUserId + " has reported a message from " + reportedUserId + " in the chat " + roomName;
    },
    reportMessageBody$2(reportedMessage, reason) {
      return "Message: " + reportedMessage + "\nReason: " + reason;
    },
    get$noTeachersFound() {
      return "No teachers found to report to";
    },
    trialExpiration$1(expiration) {
      return "Your free trial expires on " + expiration;
    },
    get$freeTrialDesc() {
      return "New users recieve a one week free trial of Pangea Chat";
    },
    get$activateTrial() {
      return "Free 7-Day Trial";
    },
    get$successfullySubscribed() {
      return "You have successfully subscribed!";
    },
    get$clickToManageSubscription() {
      return "Click here to manage your subscription.";
    },
    pleaseChooseAtLeastChars$1(min) {
      return "Please choose at least " + min + " characters.";
    },
    get$pleaseEnterValidEmail() {
      return "Please enter a valid email address.";
    },
    get$pleaseChooseAUsername() {
      return "Please choose a username";
    },
    get$listen() {
      return "Listen";
    },
    get$trialPeriodExpired() {
      return "Your trial period has expired";
    },
    get$subscribedToUnlockTools() {
      return "Subscribe to unlock interactive translation and grammar checking, audio playback, personalized practice activities, and learning analytics!";
    },
    get$translationTooltip() {
      return "Translate";
    },
    get$speechToTextTooltip() {
      return "Transcript";
    },
    get$kickBotWarning() {
      return "Kicking Pangea Bot will remove the conversation bot from this chat.";
    },
    get$refresh(_) {
      return "Refresh";
    },
    get$updatePhoneOS() {
      return "You may need to update your device's OS version.";
    },
    get$autoIGCToolName() {
      return "Run Pangea writing assistance automatically";
    },
    get$autoIGCToolDescription() {
      return "Automatically run Pangea Chat grammar and translation writing assistance before sending my message.";
    },
    get$tooltipInstructionsTitle() {
      return "Not sure what that does?";
    },
    get$tooltipInstructionsBrowserBody() {
      return "Hover over items to view tooltips.";
    },
    get$chatCapacity() {
      return "Chat capacity";
    },
    get$roomFull() {
      return "This room is already at capacity.";
    },
    get$chatCapacityHasBeenChanged() {
      return "Chat capacity changed";
    },
    chatCapacitySetTooLow$1(count) {
      return "Chat capacity must be at least " + count + ".";
    },
    get$chatCapacityExplanation() {
      return "Chat capacity limits the number of members allowed in a chat.";
    },
    get$enterNumber() {
      return "Please enter a whole number value.";
    },
    get$buildTranslation() {
      return "Build your translation from the choices above";
    },
    get$practice() {
      return "Practice";
    },
    get$noLanguagesSet() {
      return "No languages set";
    },
    get$speechToTextBody() {
      return "For voice messages, you can see a transcript as well as the speaker's Words Per Minute score.";
    },
    get$versionNotFound() {
      return "Version Not Found";
    },
    get$fetchingVersion() {
      return "Fetching version...";
    },
    get$versionFetchError() {
      return "Error fetching version";
    },
    versionText$2(version, buildNumber) {
      return "Version: " + version + "+" + buildNumber;
    },
    get$l1TranslationBody() {
      return "Messages in your base language will not be translated.";
    },
    get$deleteSubscriptionWarningTitle() {
      return "You have an active subscription";
    },
    get$deleteSubscriptionWarningBody() {
      return "Deleting your account will not automatically cancel your subscription.";
    },
    get$manageSubscription() {
      return "Manage Subscription";
    },
    get$error520Title() {
      return "Please try again.";
    },
    get$error520Desc() {
      return "Sorry, we could not understand your message...";
    },
    get$level(_) {
      return "Level";
    },
    get$translationChoicesBody() {
      return "Click and hold an option for a hint.";
    },
    get$grammar() {
      return "Grammar";
    },
    get$contactHasBeenInvitedToTheChat() {
      return "Contact has been invited to the chat";
    },
    get$inviteChat() {
      return "\ud83d\udce8 Invite chat";
    },
    get$chatName() {
      return "Chat name";
    },
    get$clickTheWordAgainToDeselect() {
      return "Click the selected word to deselect it.";
    },
    get$l2SupportNa() {
      return "Not Available";
    },
    get$l2SupportAlpha() {
      return "Alpha";
    },
    get$l2SupportBeta() {
      return "Beta";
    },
    get$l2SupportFull() {
      return "Full";
    },
    get$missingVoiceTitle() {
      return "Missing voice";
    },
    get$voiceNotAvailable() {
      return "You don't have a voice installed for this language.";
    },
    get$playAudio() {
      return "Play";
    },
    get$stop(_) {
      return "Stop";
    },
    get$grammarCopyPOSsconj() {
      return "Subordinating Conjunction";
    },
    get$grammarCopyPOSnum() {
      return "Number";
    },
    get$grammarCopyPOSverb() {
      return "Verb";
    },
    get$grammarCopyPOSaffix() {
      return "Affix";
    },
    get$grammarCopyPOSpart() {
      return "Particle";
    },
    get$grammarCopyPOSadj() {
      return "Adjective";
    },
    get$grammarCopyPOScconj() {
      return "Coordinating Conjunction";
    },
    get$grammarCopyPOSpunct() {
      return "Punctuation";
    },
    get$grammarCopyPOSadv() {
      return "Adverb";
    },
    get$grammarCopyPOSaux() {
      return "Auxiliary";
    },
    get$grammarCopyPOSspace() {
      return "Space";
    },
    get$grammarCopyPOSsym() {
      return "Symbol";
    },
    get$grammarCopyPOSdet() {
      return "Determiner";
    },
    get$grammarCopyPOSpron() {
      return "Pronoun";
    },
    get$grammarCopyPOSadp() {
      return "Adposition";
    },
    get$grammarCopyPOSpropn() {
      return "Proper Noun";
    },
    get$grammarCopyPOSnoun() {
      return "Noun";
    },
    get$grammarCopyPOSintj() {
      return "Interjection";
    },
    get$grammarCopyPOSx() {
      return "Other";
    },
    get$grammarCopyGENDERfem() {
      return "Feminine";
    },
    get$grammarCopyPERSON2() {
      return "Second Person";
    },
    get$grammarCopyMOODimp() {
      return "Imperative";
    },
    get$grammarCopyPUNCTTYPEqest() {
      return "Question";
    },
    get$grammarCopyASPECTperf() {
      return "Perfect";
    },
    get$grammarCopyCASEaccnom() {
      return "Accusative, Nominative";
    },
    get$grammarCopyCASEobl() {
      return "Oblique";
    },
    get$grammarCopyVOICEact() {
      return "Active";
    },
    get$grammarCopyPUNCTTYPEbrck() {
      return "Bracket";
    },
    get$grammarCopyNOUNTYPEart() {
      return "Article";
    },
    get$grammarCopyNUMBERsing() {
      return "Singular";
    },
    get$grammarCopyGENDERmasc() {
      return "Masculine";
    },
    get$grammarCopyVERBTYPEmod() {
      return "Modal";
    },
    get$grammarCopyADVTYPEadverbial() {
      return "Adverbial";
    },
    get$grammarCopyTENSEperi() {
      return "Periphrastic";
    },
    get$grammarCopyNUMFORMdigit() {
      return "Digit";
    },
    get$grammarCopyNOUNTYPEnot_proper() {
      return "Not Proper";
    },
    get$grammarCopyNUMTYPEcard() {
      return "Cardinal";
    },
    get$grammarCopyNOUNTYPEprop() {
      return "Proper";
    },
    get$grammarCopyPUNCTTYPEdash() {
      return "Dash";
    },
    get$grammarCopyPUNCTTYPEyes() {
      return "Yes";
    },
    get$grammarCopyPUNCTTYPEsemi() {
      return "Semicolon";
    },
    get$grammarCopyPUNCTTYPEcomm() {
      return "Comma";
    },
    get$grammarCopyMOODcnd() {
      return "Conditional";
    },
    get$grammarCopyCASEacc() {
      return "Accusative";
    },
    get$grammarCopyPARTTYPEpart() {
      return "Partitive";
    },
    get$grammarCopyTENSEpast() {
      return "Past";
    },
    get$grammarCopyDEGREEsup() {
      return "Superlative";
    },
    get$grammarCopyPUNCTTYPEcolo() {
      return "Colon";
    },
    get$grammarCopyPERSON3() {
      return "Third Person";
    },
    get$grammarCopyNUMBERplur() {
      return "Plural";
    },
    get$grammarCopyPRONTYPEnpr() {
      return "Proper Noun";
    },
    get$grammarCopyPRONTYPEinterrogative() {
      return "Interrogative";
    },
    get$grammarCopyPOLITEinfm() {
      return "Informal";
    },
    get$grammarCopyADVTYPEtim() {
      return "Time";
    },
    get$grammarCopyPOLARITYneg() {
      return "Negative";
    },
    get$grammarCopyNUMTYPEtot() {
      return "Total";
    },
    get$grammarCopyADVTYPEadnomial() {
      return "Adnominal";
    },
    get$grammarCopyASPECTprog() {
      return "Progressive";
    },
    get$grammarCopyMOODsub() {
      return "Subjunctive";
    },
    get$grammarCopyVERBFORMcomplementive() {
      return "Complementive";
    },
    get$grammarCopyCASEnom() {
      return "Nominative";
    },
    get$grammarCopyTENSEfut() {
      return "Future";
    },
    get$grammarCopyCASEdat() {
      return "Dative";
    },
    get$grammarCopyTENSEpres() {
      return "Present";
    },
    get$grammarCopyGENDERneut() {
      return "Neuter";
    },
    get$grammarCopyPRONTYPErel() {
      return "Relative";
    },
    get$grammarCopyVERBFORMfinalEnding() {
      return "Final Ending";
    },
    get$grammarCopyPRONTYPEdem() {
      return "Demonstrative";
    },
    get$grammarCopyPREPCASEpre() {
      return "Prepositional";
    },
    get$grammarCopyVERBFORMfin() {
      return "Finite";
    },
    get$grammarCopyDEGREEpos() {
      return "Positive";
    },
    get$grammarCopyPUNCTTYPEquot() {
      return "Quotation";
    },
    get$grammarCopyVERBFORMger() {
      return "Gerund";
    },
    get$grammarCopyVOICEpass() {
      return "Passive";
    },
    get$grammarCopyCASEgen() {
      return "Genitive";
    },
    get$grammarCopyTENSEprs() {
      return "Present";
    },
    get$grammarCopyDEFINITEdef() {
      return "Definite";
    },
    get$grammarCopyNUMTYPEord() {
      return "Ordinal";
    },
    get$grammarCopyCASEins() {
      return "Instrumental";
    },
    get$grammarCopyVERBFORMinf() {
      return "Infinitive";
    },
    get$grammarCopyVERBFORMaux() {
      return "Auxiliary";
    },
    get$grammarCopyNUMFORMlong() {
      return "Long";
    },
    get$grammarCopyCASEloc() {
      return "Locative";
    },
    get$grammarCopyMOODind() {
      return "Indicative";
    },
    get$grammarCopyDEGREEcmp() {
      return "Comparative";
    },
    get$grammarCopyCASErelativeCase() {
      return "Relative";
    },
    get$grammarCopyPUNCTTYPEexcl() {
      return "Exclamative";
    },
    get$grammarCopyPERSON1() {
      return "First Person";
    },
    get$grammarCopyPUNCTSIDEini() {
      return "Initial";
    },
    get$grammarCopyGENDERperson() {
      return "Person";
    },
    get$grammarCopyFOREIGNyes() {
      return "Foreign";
    },
    get$grammarCopyVOICEvoice() {
      return "Voice";
    },
    get$grammarCopyVERBTYPEverbType() {
      return "Verb";
    },
    get$grammarCopyPOSSpass() {
      return "Possessive";
    },
    get$grammarCopyPREPCASEprepCase() {
      return "Prepositional";
    },
    get$grammarCopyNUMTYPEnumType() {
      return "Numeral";
    },
    get$grammarCopyNOUNTYPEnounType() {
      return "Noun";
    },
    get$grammarCopyREFLEXreflex() {
      return "Reflexive";
    },
    get$grammarCopyPRONTYPEpronType() {
      return "Pronoun";
    },
    get$grammarCopyPUNCTSIDEpunctSide() {
      return "Punctuation Side";
    },
    get$grammarCopyVERBFORMverbForm() {
      return "Verb";
    },
    get$grammarCopyGENDERgender() {
      return "Gender";
    },
    get$grammarCopyMOODmood() {
      return "Mood";
    },
    get$grammarCopyASPECTaspect() {
      return "Aspect";
    },
    get$grammarCopyPUNCTTYPEpunctType() {
      return "Punctuation";
    },
    get$grammarCopyTENSEtense() {
      return "Tense";
    },
    get$grammarCopyDEGREEdegree() {
      return "Degree";
    },
    get$grammarCopyPOLITEpolite() {
      return "Politeness";
    },
    get$grammarCopyADVTYPEadvType() {
      return "Adverb";
    },
    get$grammarCopyNUMFORMnumber() {
      return "Number";
    },
    get$grammarCopyCONJTYPEconjType() {
      return "Conjunction";
    },
    get$grammarCopyPOLARITYpolarity() {
      return "Polarity";
    },
    get$grammarCopyCASEcase() {
      return "Case";
    },
    get$grammarCopyDEFINITEdefinite() {
      return "Definiteness";
    },
    get$grammarCopyNUMFORMnumForm() {
      return "Numeral";
    },
    get$grammarCopyPRONTYPEadn() {
      return "Adnominal";
    },
    get$grammarCopyVOCvoc() {
      return "Vocative";
    },
    get$grammarCopyCMPLcmpl() {
      return "Complementizer";
    },
    get$grammarCopyADVadv() {
      return "Adverbial";
    },
    get$grammarCopyMOODjus() {
      return "Jussive";
    },
    get$grammarCopyGENDERcom() {
      return "Common";
    },
    get$grammarCopyREFLEXrflx() {
      return "Reflexive";
    },
    get$grammarCopyPARTTYPEpar() {
      return "Partitive";
    },
    get$grammarCopySPCspc() {
      return "Specific";
    },
    get$grammarCopyTENSEpqp() {
      return "Pluperfect";
    },
    get$grammarCopyREFLEXref() {
      return "Reflexive";
    },
    get$grammarCopyPUNCTTYPEnshrt() {
      return "Short";
    },
    get$grammarCopyNUMBERdual() {
      return "Dual";
    },
    get$grammarCopyNUMFORMlng() {
      return "Long";
    },
    get$grammarCopyVOICEmid() {
      return "Middle";
    },
    get$grammarCopyINTRELintRel() {
      return "Interrogative, Relative";
    },
    get$grammarCopyINTint() {
      return "Interrogative";
    },
    get$grammarCopyVOICEcaus() {
      return "Causative";
    },
    get$grammarCopyUnknown() {
      return "Unknown";
    },
    get$grammarCopyEVIDENTevident() {
      return "Evidentiality";
    },
    get$grammarCopyNUMFORMnumberPsor() {
      return "Possessor's Number";
    },
    get$grammarCopyASPECThab() {
      return "Habitual";
    },
    get$grammarCopyCASEabl() {
      return "Ablative";
    },
    get$grammarCopyCASEall() {
      return "Allative";
    },
    get$grammarCopyCASEess() {
      return "Essive";
    },
    get$grammarCopyCASEtra() {
      return "Translative";
    },
    get$grammarCopyCASEequ() {
      return "Equative";
    },
    get$grammarCopyCASEdis() {
      return "Distributive";
    },
    get$grammarCopyCASEabs() {
      return "Absolutive";
    },
    get$grammarCopyCASEerg() {
      return "Ergative";
    },
    get$grammarCopyCASEcau() {
      return "Causal";
    },
    get$grammarCopyCASEben() {
      return "Benefactive";
    },
    get$grammarCopyCASEtem() {
      return "Temporal";
    },
    get$grammarCopyCONJTYPEcoord() {
      return "Coordinating";
    },
    get$grammarCopyDEFINITEcons() {
      return "Construct State";
    },
    get$grammarCopyDEGREEabs() {
      return "Absolute Degree";
    },
    get$grammarCopyEVIDENTfh() {
      return "Factual Evidentiality";
    },
    get$grammarCopyEVIDENTnfh() {
      return "Non-factual Evidentiality";
    },
    get$grammarCopyMOODopt() {
      return "Optative";
    },
    get$grammarCopyMOODadm() {
      return "Admirative";
    },
    get$grammarCopyMOODdes() {
      return "Desiderative";
    },
    get$grammarCopyMOODnec() {
      return "Necessitative";
    },
    get$grammarCopyMOODpot() {
      return "Potential";
    },
    get$grammarCopyMOODprp() {
      return "Propositive";
    },
    get$grammarCopyMOODqot() {
      return "Quotative";
    },
    get$grammarCopyNUMFORMword() {
      return "Word Form";
    },
    get$grammarCopyNUMFORMroman() {
      return "Roman Numeral";
    },
    get$grammarCopyNUMFORMletter() {
      return "Letter Form";
    },
    get$grammarCopyNUMTYPEmult() {
      return "Multiplicative";
    },
    get$grammarCopyNUMTYPEfrac() {
      return "Fractional";
    },
    get$grammarCopyNUMTYPEsets() {
      return "Set";
    },
    get$grammarCopyNUMTYPErange() {
      return "Range";
    },
    get$grammarCopyNUMTYPEdist() {
      return "Distributive";
    },
    get$grammarCopyNUMBERtri() {
      return "Trial";
    },
    get$grammarCopyNUMBERpauc() {
      return "Paucal";
    },
    get$grammarCopyNUMBERgrpa() {
      return "Greater Paucal";
    },
    get$grammarCopyNUMBERgrpl() {
      return "Greater Plural";
    },
    get$grammarCopyNUMBERinv() {
      return "Inverse";
    },
    get$grammarCopyPERSON0() {
      return "Zero";
    },
    get$grammarCopyPERSON4() {
      return "Fourth";
    },
    get$grammarCopyPOLITEform() {
      return "Formal";
    },
    get$grammarCopyPOLITEelev() {
      return "Elevated";
    },
    get$grammarCopyPOLITEhumb() {
      return "Humble";
    },
    get$grammarCopyPRONTYPEemp() {
      return "Emphatic";
    },
    get$grammarCopyPRONTYPEexc() {
      return "Exclamative";
    },
    get$grammarCopyPRONTYPErcp() {
      return "Reciprocal";
    },
    get$grammarCopyPRONTYPEintRelPronType() {
      return "Interrogative-Relative";
    },
    get$grammarCopyTENSEaor() {
      return "Aorist";
    },
    get$grammarCopyTENSEeps() {
      return "Epistemic";
    },
    get$grammarCopyTENSEprosp() {
      return "Prospective";
    },
    get$grammarCopyVERBFORMpart() {
      return "Participle";
    },
    get$grammarCopyVERBFORMconv() {
      return "Converb";
    },
    get$grammarCopyVERBFORMvnoun() {
      return "Verbal Noun";
    },
    get$grammarCopyVOICEantip() {
      return "Antipassive";
    },
    get$grammarCopyVOICEcauVoice() {
      return "Causative";
    },
    get$grammarCopyVOICedir() {
      return "Direct";
    },
    get$grammarCopyVOICEinvVoice() {
      return "Inverse";
    },
    get$grammarCopyVOICErcpVoice() {
      return "Reciprocal";
    },
    get$grammarCopyPOS() {
      return "Part of Speech";
    },
    get$grammarCopyGENDER() {
      return "Gender";
    },
    get$grammarCopyPERSON() {
      return "Person";
    },
    get$grammarCopyMOOD() {
      return "Mood";
    },
    get$grammarCopyPUNCTTYPE() {
      return "Punctuation Type";
    },
    get$grammarCopyASPECT() {
      return "Aspect";
    },
    get$grammarCopyCASE() {
      return "Case";
    },
    get$grammarCopyVOICE() {
      return "Voice";
    },
    get$grammarCopyNOUNTYPE() {
      return "Noun Type";
    },
    get$grammarCopyVERBTYPE() {
      return "Verb Type";
    },
    get$grammarCopyADVTYPE() {
      return "Adverb Type";
    },
    get$grammarCopyNUMFORM() {
      return "Numeral Form";
    },
    get$grammarCopyNUMTYPE() {
      return "Numeral Type";
    },
    get$grammarCopyNUMBER() {
      return "Number";
    },
    get$grammarCopyDEFINITE() {
      return "Definiteness";
    },
    get$grammarCopyDEGREE() {
      return "Degree";
    },
    get$grammarCopyEVIDENT() {
      return "Evidentiality";
    },
    get$grammarCopyFOREIGN() {
      return "Foreign";
    },
    get$grammarCopyPOLARITY() {
      return "Polarity";
    },
    get$grammarCopyPOLITE() {
      return "Politeness";
    },
    get$grammarCopyPREPCASE() {
      return "Prepositional Case";
    },
    get$grammarCopyPRONTYPE() {
      return "Pronoun Type";
    },
    get$grammarCopyPUNCTSIDE() {
      return "Punctuation Side";
    },
    get$grammarCopyREFLEX() {
      return "Reflexive";
    },
    get$grammarCopyTENSE() {
      return "Tense";
    },
    get$grammarCopyVERBFORM() {
      return "Verb Form";
    },
    get$grammarCopyCONJTYPE() {
      return "Conjunction Type";
    },
    get$grammarCopyUNKNOWN() {
      return "Unknown";
    },
    get$grammarCopyNUMBERPSOR() {
      return "Possessor's Number";
    },
    get$grammarCopyPOSS() {
      return "Possessive";
    },
    get$grammarCopyASPECTimp() {
      return "Imperfective Aspect";
    },
    get$grammarCopyCASEvoc() {
      return "Vocative";
    },
    get$grammarCopyCASEcom() {
      return "Comitative";
    },
    get$grammarCopyCASEpar() {
      return "Partitive";
    },
    get$grammarCopyCASEadv() {
      return "Adverbial";
    },
    get$grammarCopyCASEref() {
      return "Referential";
    },
    get$grammarCopyCASErel() {
      return "Relative";
    },
    get$grammarCopyCASEsub() {
      return "Subessive";
    },
    get$grammarCopyCASEsup() {
      return "Superessive";
    },
    get$grammarCopyCASEaccdat() {
      return "Accusative-Dative";
    },
    get$grammarCopyCASEpre() {
      return "Prepositional";
    },
    get$grammarCopyCONJTYPEsub() {
      return "Subordinating";
    },
    get$grammarCopyCONJTYPEcmp() {
      return "Comparative";
    },
    get$grammarCopyDEFINITEind() {
      return "Indefinite";
    },
    get$grammarCopyMOODint() {
      return "Interrogative Mood";
    },
    get$grammarCopyNOUNTYPEcomm() {
      return "Common Noun";
    },
    get$grammarCopyNUMBERPSORsing() {
      return "Possessor's Singular";
    },
    get$grammarCopyNUMBERPSORplur() {
      return "Possessor's Plural";
    },
    get$grammarCopyNUMBERPSORdual() {
      return "Possessor's Dual";
    },
    get$grammarCopyPOLARITYpos() {
      return "Positive Polarity";
    },
    get$grammarCopyPOSSyes() {
      return "Possessive";
    },
    get$grammarCopyPREPCASEnpr() {
      return "Non-prepositional";
    },
    get$grammarCopyPRONTYPEprs() {
      return "Personal";
    },
    get$grammarCopyPRONTYPEint() {
      return "Interrogative";
    },
    get$grammarCopyPRONTYPEtot() {
      return "Total";
    },
    get$grammarCopyPRONTYPEneg() {
      return "Negative";
    },
    get$grammarCopyPRONTYPEart() {
      return "Article";
    },
    get$grammarCopyPRONTYPEind() {
      return "Indefinite";
    },
    get$grammarCopyPRONTYPEintrel() {
      return "Interrogative-Relative";
    },
    get$grammarCopyPUNCTSIDEfin() {
      return "Final Punctuation";
    },
    get$grammarCopyPUNCTTYPEperi() {
      return "Period";
    },
    get$grammarCopyREFLEXyes() {
      return "Reflexive";
    },
    get$grammarCopyTENSEimp() {
      return "Imperfect";
    },
    get$grammarCopyVERBFORMsup() {
      return "Supine";
    },
    get$grammarCopyVERBFORMadn() {
      return "Adnominal";
    },
    get$grammarCopyVERBFORMlng() {
      return "Long";
    },
    get$grammarCopyVERBFORMshrt() {
      return "Short";
    },
    get$grammarCopyVERBTYPEcaus() {
      return "Causative Verb";
    },
    get$grammarCopyVOICEcau() {
      return "Causative";
    },
    get$grammarCopyVOICEdir() {
      return "Direct";
    },
    get$grammarCopyVOICEinv() {
      return "Inverse";
    },
    get$grammarCopyVOICErcp() {
      return "Reciprocal";
    },
    get$other() {
      return "Other";
    },
    levelShort$1(level) {
      return "LVL " + level;
    },
    get$clickBestOption() {
      return "Choose the best options to translate your message!";
    },
    get$completeActivitiesToUnlock() {
      return "Complete at least one activity to unlock the translation!";
    },
    get$downloadGroupText() {
      return "Download group text";
    },
    get$notificationsOn() {
      return "Notifications on";
    },
    get$notificationsOff() {
      return "Notifications off";
    },
    get$createChatAndInviteUsers() {
      return "Create chat and invite users";
    },
    get$updatedNewSpaceDescription() {
      return "Courses allow you to consolidate your chats and build private or public communities.";
    },
    get$updateNow() {
      return "Update Now";
    },
    get$updateLater() {
      return "Later";
    },
    get$constructUseWaDesc() {
      return "Used without help";
    },
    get$constructUseGaDesc() {
      return "Grammar assistance";
    },
    get$constructUseTaDesc() {
      return "Translation assistance";
    },
    get$constructUseUnkDesc() {
      return "Unknown";
    },
    get$constructUseCorITDesc() {
      return "Correct in translation";
    },
    get$constructUseIgnITDesc() {
      return "Ignored in translation";
    },
    get$constructUseIncITDesc() {
      return "Incorrect in translation";
    },
    get$constructUseIgnIGCDesc() {
      return "Ignored in grammar correction";
    },
    get$constructUseCorIGCDesc() {
      return "Correct in grammar correction";
    },
    get$constructUseIncIGCDesc() {
      return "Incorrect in grammar correction";
    },
    get$constructUseCorPADesc() {
      return "Correct in word meaning activity";
    },
    get$constructUseIgnPADesc() {
      return "Ignored in word meaning activity";
    },
    get$constructUseIncPADesc() {
      return "Incorrect in word meaning activity";
    },
    get$constructUseCorWLDesc() {
      return "Correct in word listening activity";
    },
    get$constructUseIncWLDesc() {
      return "Incorrect in word listening activity";
    },
    get$constructUseIngWLDesc() {
      return "Ignored in word listening activity";
    },
    get$constructUseCorHWLDesc() {
      return "Correct in hidden word activity";
    },
    get$constructUseIncHWLDesc() {
      return "Incorrect in hidden word activity";
    },
    get$constructUseIgnHWLDesc() {
      return "Ignored in hidden word activity";
    },
    get$constructUseCorLDesc() {
      return "Correct in lemma activity";
    },
    get$constructUseIncLDesc() {
      return "Incorrect in lemma activity";
    },
    get$constructUseIgnLDesc() {
      return "Ignored in lemma activity";
    },
    get$constructUseCorMDesc() {
      return "Correct in grammar activity";
    },
    get$constructUseIncMDesc() {
      return "Incorrect in grammar activity";
    },
    get$constructUseIgnMDesc() {
      return "Ignored in grammar activity";
    },
    get$constructUseEmojiDesc() {
      return "Correct in emoji activity";
    },
    get$constructUseCollected() {
      return "Collected in chat";
    },
    get$constructUseNanDesc() {
      return "Not applicable";
    },
    xpIntoLevel$2(currentXP, maxXP) {
      return "" + currentXP + " / " + maxXP + " XP";
    },
    get$enableTTSToolName() {
      return "Enabled text-to-speech";
    },
    get$enableTTSToolDescription() {
      return "Allow the app to generate text-to-speech output for portions of text in your target language.";
    },
    get$yourUsername() {
      return "Your username";
    },
    get$yourEmail() {
      return "Your email";
    },
    get$iWantToLearn() {
      return "I want to learn";
    },
    get$pleaseEnterEmail() {
      return "Please enter a valid email address.";
    },
    get$myBaseLanguage() {
      return "My base language";
    },
    get$clickWordsInstructions() {
      return "\ud83d\udd75\ufe0f Click any word for details. \ud83e\uddd0";
    },
    get$meaningSectionHeader() {
      return "Meaning:";
    },
    get$formSectionHeader() {
      return "Forms used in chats:";
    },
    get$writingExercisesTooltip() {
      return "Writing";
    },
    get$listeningExercisesTooltip() {
      return "Listening";
    },
    get$readingExercisesTooltip() {
      return "Reading";
    },
    get$meaningNotFound() {
      return "Meaning could not be found.";
    },
    get$chooseBaseForm() {
      return "Choose the base form";
    },
    get$notTheCodeError() {
      return "Sorry, that's not the code!";
    },
    get$totalXP() {
      return "Total XP";
    },
    get$numLemmas() {
      return "Total number of lemmas";
    },
    get$numLemmasUsedCorrectly() {
      return "Number of lemmas used correctly at least once";
    },
    get$numLemmasUsedIncorrectly() {
      return "Number of lemmas used correctly 0 times";
    },
    get$numLemmasSmallXP() {
      return "Number of lemmas with 0 - 30 XP";
    },
    get$numLemmasMediumXP() {
      return "Number of lemmas with 31 - 200 XP";
    },
    get$numLemmasLargeXP() {
      return "Number of lemmas with > 200 XP";
    },
    get$numGrammarConcepts() {
      return "Number of grammar concepts";
    },
    get$listGrammarConcepts() {
      return "Grammar concepts";
    },
    get$listGrammarConceptsUsedCorrectly() {
      return "Grammar concepts used correctly in original messages at least 80% of the time";
    },
    get$listGrammarConceptsUsedIncorrectly() {
      return "Grammar concepts used correctly in original messages less than 80% of the time";
    },
    get$listGrammarConceptsUseCorrectlySystemGenerated() {
      return "Grammar concepts chosen correctly from system-generated suggestions at least 80% of the time";
    },
    get$listGrammarConceptsUseIncorrectlySystemGenerated() {
      return "Grammar concepts chosen correctly from system-generated suggestions less than 80% of the time";
    },
    get$listGrammarConceptsSmallXP() {
      return "Grammar concepts with 0-50 xp";
    },
    get$listGrammarConceptsMediumXP() {
      return "Grammar concepts with 51-200 xp";
    },
    get$listGrammarConceptsLargeXP() {
      return "Grammar concepts 201-500 xp";
    },
    get$listGrammarConceptsHugeXP() {
      return "Grammar concepts >500 xp";
    },
    get$numMessagesSent() {
      return "Number of messages sent";
    },
    get$numWordsTyped() {
      return "Number of words typed in original messages";
    },
    get$numCorrectChoices() {
      return "Number of correct words chosen from system-generated suggestions";
    },
    get$numIncorrectChoices() {
      return "Number of incorrect words chosen from system-generated suggestions";
    },
    get$commaSeparatedFile() {
      return "CSV";
    },
    get$excelFile() {
      return "Excel";
    },
    get$fileType() {
      return "File type";
    },
    get$download(_) {
      return "Download";
    },
    get$analyticsNotAvailable() {
      return "User analytics not available";
    },
    get$downloading() {
      return "Downloading...";
    },
    get$failedFetchUserAnalytics() {
      return "Failed to download user analytics";
    },
    get$downloadComplete() {
      return "Download complete!";
    },
    whatIsTheMorphTag$2(morphologicalFeature, wordForm) {
      return "What is the " + morphologicalFeature + " of '" + wordForm + "'?";
    },
    get$dataAvailable() {
      return "Data availability";
    },
    get$available(_) {
      return "Available";
    },
    get$pangeaBotIsFallible() {
      return "Pangea Bot makes mistakes too!";
    },
    whatIsMeaning$2(lemma, partOfSpeech) {
      return "What does '" + lemma + "' mean?";
    },
    get$chooseLemmaMeaningInstructionsBody() {
      return "Match meanings with the words in the message!";
    },
    get$doubleClickToEdit() {
      return "Double-click to edit.";
    },
    get$targetLanguageLabel() {
      return "Target language";
    },
    get$cefrLevelLabel() {
      return "CEFR level";
    },
    get$image(_) {
      return "Image";
    },
    get$activityPlannerOverviewInstructionsBody() {
      return "Choose a topic, mode, learning objective and generate an activity for the chat!";
    },
    get$constructUsePvmDesc() {
      return "Produced in voice message";
    },
    get$leaveSpaceDescription() {
      return "By leaving the course, you will leave all of the chats within it. Other users will see that you have left the course.";
    },
    get$constructUseCorMmDesc() {
      return "Correct message meaning";
    },
    get$constructUseIncMmDesc() {
      return "Incorrect message meaning";
    },
    get$constructUseIgnMmDesc() {
      return "Ignored message meaning";
    },
    get$meaning() {
      return "Meaning";
    },
    chatWith$1(displayname) {
      return "Group with " + displayname;
    },
    get$clickOnEmailLink() {
      return "Please click on the link in the email and then proceed.\n\nCheck your spam folder if the email hasn't arrived.";
    },
    get$dontForgetPassword() {
      return "Don't forget your password!";
    },
    get$enableAutocorrectToolName() {
      return "Enable device autocorrect";
    },
    get$enableAutocorrectDescription() {
      return "If your device supports the language you're learning, you can enable device autocorrect to fix common errors as you type.";
    },
    get$ttsDisbledTitle() {
      return "Text-to-speech disabled";
    },
    get$ttsDisabledBody() {
      return "You can enable text-to-speech in your learning settings";
    },
    get$noSpaceDescriptionYet() {
      return "No course description created yet.";
    },
    get$tooLargeToSend() {
      return "This message is too large to send";
    },
    get$exitWithoutSaving() {
      return "Are you sure you want to leave without saving?";
    },
    get$enableAutocorrectWarning() {
      return "Warning! Requires adding your target language keyboard";
    },
    get$leaveRoomDescription() {
      return "You're about to leave this chat. Other users will see that you have left the chat.";
    },
    get$confirmUserId() {
      return "Please confirm your Pangea Chat username in order to delete your account.";
    },
    paidSubscriptionStarts$1(startDate) {
      return "Starting " + startDate;
    },
    get$cancelInSubscriptionSettings() {
      return "\u2022 Cancel at any time in subscription settings";
    },
    get$autocorrectNotAvailable() {
      return "Unfortunately your platform is not currently supported for this feature. Stay tuned for further development!";
    },
    get$pleaseUpdateApp() {
      return "Please update the app to continue.";
    },
    get$chooseEmojiInstructionsBody() {
      return "Match emojis with the words they best represent. Don't worry! No points off for disagreeing. \ud83d\ude05";
    },
    get$analyticsVocabListBody() {
      return "This is all your vocabulary! As you earn XP for each word, they'll go from seedling to full bloom. Click on any word to see more details.";
    },
    get$morphAnalyticsListBody() {
      return "These are all the grammar concepts in the language you're learning! You'll unlock them as you encounter them while chatting. Click for details.";
    },
    get$knockSpaceSuccess() {
      return "You have requested to join this course! An admin will respond to your request when they receive it \ud83d\ude00";
    },
    get$chooseWordAudioInstructionsBody() {
      return "Listen to the complete message. Then match the audios with the words.";
    },
    get$chooseMorphsInstructionsBody() {
      return "Click the puzzle pieces for grammar questions!";
    },
    get$home() {
      return "Home";
    },
    get$join(_) {
      return "Join";
    },
    get$readingAssistanceOverviewBody() {
      return "Click the buttons below for mini-games on matching emojis, audios, word meanings, and grammar concepts. Or click on any word for details.";
    },
    get$resetInstructionTooltipsTitle() {
      return "Reset instruction tooltips";
    },
    get$resetInstructionTooltipsDesc() {
      return "Click to show instruction tooltips like for a brand new user.";
    },
    get$selectForGrammar() {
      return "Select a grammar icon for activities and details.";
    },
    get$translationProblem() {
      return "Translation problem";
    },
    get$niceJob() {
      return "Nice job!";
    },
    get$askToJoin() {
      return "Ask to join";
    },
    get$emptyChatWarningTitle() {
      return "Chat is empty";
    },
    get$emptyChatWarningDesc() {
      return "You haven't invited anyone to your chat. Go to Chat settings to invite your contacts or the Bot. You can also do this later.";
    },
    get$areYouLikeMe() {
      return "Are you like me?";
    },
    get$tryAgainLater() {
      return "Too many attempts made. Please try again in 5 minutes.";
    },
    get$enterSpaceCode() {
      return "Enter course code";
    },
    get$shareSpaceLink() {
      return "Share link";
    },
    get$byUsingPangeaChat() {
      return "By using Pangea Chat, I agree to the ";
    },
    get$details(_) {
      return "Details";
    },
    get$languageLevelPreA1Desc() {
      return "I have never learned or used the language.";
    },
    get$languageLevelA1Desc() {
      return "I can understand and use some familiar everyday expressions and very basic phrases.";
    },
    get$languageLevelA2Desc() {
      return "I can understand sentences and frequently used expressions related to areas of immediate relevance.";
    },
    get$languageLevelB1Desc() {
      return "I can deal with most familiar situations and can produce simple connected text on familiar topics.";
    },
    get$languageLevelB2Desc() {
      return "I can understand the mains ideas of complex texts and interact with a degree of fluency and spontaneity.";
    },
    get$languageLevelC1Desc() {
      return "I can express ideas fluently and spontaneously without much struggle and understand a wide range of demanding texts.";
    },
    get$languageLevelC2Desc() {
      return "I can understand virtually everything heard or read and express myself fluently and precisely.";
    },
    get$newVocab() {
      return "New vocab";
    },
    get$newGrammar() {
      return "New grammar concepts";
    },
    get$choosePracticeMode() {
      return "Click on one of the buttons above to start a practice activity";
    },
    get$ban() {
      return "Ban";
    },
    get$kick() {
      return "Kick";
    },
    get$lemma() {
      return "Lemma";
    },
    get$grammarFeature() {
      return "Grammar feature";
    },
    get$grammarTag() {
      return "Grammar tag";
    },
    get$forms() {
      return "Forms";
    },
    get$exampleMessages() {
      return "Example messages";
    },
    get$timesUsedIndependently() {
      return "Times used independently";
    },
    get$timesUsedWithAssistance() {
      return "Times used with assistance";
    },
    shareInviteCode$1(code) {
      return "Share invite code: " + code;
    },
    get$permissions(_) {
      return "Permissions";
    },
    get$spaceChildPermission() {
      return "Who can add new chats to this course";
    },
    get$addEnvironmentOverride() {
      return "Add environment override";
    },
    get$defaultOption() {
      return "Default";
    },
    get$deleteChatDesc() {
      return "Are you sure you want to delete this chat? It will be deleted for all participants and all messages within the chat will no longer be available for practice or learning analytics.";
    },
    get$deleteSpaceDesc() {
      return "The course and any selected chats will be deleted for all participants and all messages within the chat will no longer be available for practice or learning analytics. This action cannot be undone.";
    },
    get$configureSpace() {
      return "Configure course";
    },
    get$pinMessages() {
      return "Pin messages";
    },
    get$setJoinRules() {
      return "Set join rules";
    },
    get$changeGeneralSettings() {
      return "Change general settings";
    },
    get$inviteOtherUsersToRoom() {
      return "Invite other users";
    },
    get$changeTheNameOfTheSpace() {
      return "Change the name of the course";
    },
    get$changeTheDescription() {
      return "Change the description";
    },
    get$changeThePermissions() {
      return "Change the permissions";
    },
    get$introductions() {
      return "Introductions";
    },
    get$announcements() {
      return "Announcements";
    },
    get$activities() {
      return "Activities";
    },
    get$access() {
      return "Access";
    },
    get$howSpaceCanBeFound() {
      return "How this course can be found";
    },
    get$$private() {
      return "Private";
    },
    get$cannotBeFoundInSearch() {
      return "Cannot be found in search";
    },
    get$$public(_) {
      return "Public";
    },
    get$visibleToCommunity() {
      return 'Visible to the broader Pangea Chat community via "Find a course"';
    },
    get$howSpaceCanBeJoined() {
      return "How this course can be joined";
    },
    get$canBeFoundVia() {
      return "Can be found via:";
    },
    get$canBeFoundViaInvitation() {
      return "\u2022 invitation";
    },
    get$canBeFoundViaCodeOrLink() {
      return "\u2022 code or link";
    },
    get$canBeFoundViaKnock() {
      return "\u2022 request to join and admin approval";
    },
    get$youHaveLeveledUp() {
      return "You have leveled up!";
    },
    get$sendActivities() {
      return "Send activities";
    },
    get$directMessage() {
      return "Direct Message";
    },
    get$newDirectMessage() {
      return "New direct message";
    },
    get$speakingExercisesTooltip() {
      return "Speaking";
    },
    get$transcriptionFailed() {
      return "Failed to transcribe audio";
    },
    get$aUserIsKnocking() {
      return "1 user is requesting to join your course";
    },
    usersAreKnocking$1(users) {
      return "" + users + " users are requesting to join your course";
    },
    get$failedToFetchTranscription() {
      return "Failed to fetch transcription";
    },
    get$deleteEmptySpaceDesc() {
      return "The course will be deleted for all participants. This action cannot be undone.";
    },
    get$failedToPlayVideo() {
      return "Failed to play video";
    },
    get$done() {
      return "Done";
    },
    get$inThisSpace() {
      return "In this course";
    },
    get$myContacts() {
      return "My contacts";
    },
    get$inviteAllInSpace() {
      return "Invite all in this course";
    },
    get$spaceParticipantsHaveBeenInvitedToTheChat() {
      return "All course participants has been invited to the chat";
    },
    numKnocking$1(count) {
      return "" + count + " knocking";
    },
    numInvited$1(count) {
      return "" + count + " invited";
    },
    get$errorFetchingDefinition() {
      return "Failed to fetch definition";
    },
    get$errorProcessAnalytics() {
      return "Failed to process analytics";
    },
    get$errorDownloading() {
      return "Download failed";
    },
    get$errorFetchingLevelSummary() {
      return "Failed to fetch level summary";
    },
    get$errorLoadingSpaceChildren() {
      return "Failed to load chats within this course";
    },
    get$unexpectedError() {
      return "Unexpected error.";
    },
    get$pleaseReload() {
      return "Please reload and try again.";
    },
    get$translationError() {
      return "Translation error";
    },
    get$errorFetchingTranslation() {
      return "Failed to fetch translation";
    },
    get$errorFetchingActivity() {
      return "Failed to fetch activity";
    },
    get$check(_) {
      return "Check";
    },
    get$unableToFindRoom() {
      return "No chat or course found with that code. Please try again.";
    },
    get$numCompletedActivities() {
      return "Number of completed activities";
    },
    viewingAnalytics$2(visible, users) {
      return "Viewing " + visible + "/" + users + " Analytics";
    },
    get$request(_) {
      return "Request";
    },
    get$requestAll(_) {
      return "Request All";
    },
    get$confirmMessageUnpin() {
      return "Are you sure you want to unpin this message?";
    },
    get$pending(_) {
      return "Pending";
    },
    get$openRoleLabel() {
      return "OPEN";
    },
    joinedTheActivity$2(username, role) {
      return "\ud83d\udc4b " + username + " joined as " + role;
    },
    finishedTheActivity$1(username) {
      return "\ud83c\udfaf " + username + " wrapped up this activity";
    },
    get$endActivityTitle() {
      return "I'm done";
    },
    get$activitySummaryError() {
      return "Activity summaries unavailable";
    },
    get$requestSummaries() {
      return "Request summaries";
    },
    get$requestAccessTitle() {
      return "Request to analytics view access?";
    },
    get$requestAccessDesc() {
      return "Would you like to request access to view participant analytics?\n\nIf participants agree, admins of this course will be able to view their:\n    \u2022 total vocabulary\n    \u2022 total grammar concepts\n    \u2022 total activity sessions completed\n    \u2022 the specific grammar concepts used, correctly and incorrectly\n\nThey will not be able to view their:\n    \u2022 messages in chats outside the course\n    \u2022 vocabulary list";
    },
    get$analyticsInactiveTitle() {
      return "Requests to inactive users couldn\u2019t be sent";
    },
    get$analyticsInactiveDesc() {
      return "Inactive users who haven't logged in since this feature was introduced won't see your request.\n\nThe Request button will appear once they return. You can resend the request later by clicking the Request button under their name when it's available.";
    },
    get$accessRequestedTitle() {
      return "Analytics Access Request";
    },
    accessRequestedDesc$1(space) {
      return "The administrators of \u201c" + space + "\u201d are requesting to view your learning analytics.\n\nIf you agree, admins of this course will be able to view your:\n    \u2022 total vocabulary\n    \u2022 total grammar concepts\n    \u2022 total activity sessions completed\n    \u2022 the specific grammar concepts used, correctly and incorrectly\n\nThey will not be able to view your:\n    \u2022 messages in chats outside the course\n    \u2022 vocabulary list";
    },
    get$allowAccess() {
      return "Allow Access";
    },
    get$denyAccess() {
      return "Deny Access";
    },
    get$adminRequestedAccess() {
      return "Admins asked to view your analytics.";
    },
    lastUpdated$1(time) {
      return "Updated\n" + time;
    },
    get$activityFinishedMessage() {
      return "All Finished!";
    },
    get$endForAll() {
      return "End for all";
    },
    get$newCourse() {
      return "New course";
    },
    numModules$1(num) {
      return "" + num + " modules";
    },
    numActivityPlans$1(num) {
      return "" + num + " activity plans";
    },
    get$coursePlan() {
      return "Course Plan";
    },
    get$editCourseLater() {
      return "You can edit template title, descriptions, and course image later.";
    },
    get$newCourseAccess() {
      return "By default, courses are private and require admin approval to join. You can edit these settings at any time.";
    },
    get$createCourse() {
      return "Create course";
    },
    get$stats() {
      return "Stats";
    },
    get$createGroupChat() {
      return "Create group chat";
    },
    get$editCourse() {
      return "Edit course";
    },
    get$inviteDesc() {
      return "By username, by code or link";
    },
    get$editCourseDesc() {
      return "Here you can edit course title, description, etc.";
    },
    get$permissionsDesc() {
      return "Set permissions such as who can invite users, send messages, create chats, etc.";
    },
    get$accessDesc() {
      return "You can make your course open to the world! Or, make your course private and secure.";
    },
    get$createGroupChatDesc() {
      return "Whereas activity sessions start and end, group chats will stay open for routine communication.";
    },
    get$deleteDesc() {
      return "Only admins can delete a course. This is a destructive action which removes all users and deletes all selected chats within the course. Proceed with caution.";
    },
    get$noCourseFound() {
      return "Oh, this course needs a plan!\n\nCourse plans are a sequence of topics and conversation activities.";
    },
    additionalParticipants$1(num) {
      return "+ " + num + " others";
    },
    get$directMessages() {
      return "Direct Messages";
    },
    get$whatNow() {
      return "What now?";
    },
    get$chooseNextActivity() {
      return "Choose your next activity!";
    },
    get$letsGo() {
      return "Let's go";
    },
    get$chooseRole() {
      return "Choose a role!";
    },
    get$chooseRoleToParticipate() {
      return "Choose a role to participate!";
    },
    waitingToFillRole$1(num) {
      return "Waiting to fill " + num + " roles...";
    },
    get$pingParticipants() {
      return "Ping course participants";
    },
    get$playWithBot() {
      return "Play with Pangea Bot";
    },
    get$inviteFriendsToActivity() {
      return "Invite friends to activity";
    },
    get$inviteFriendsToActivityCourse() {
      return "Invite friends to activity and course";
    },
    get$waitNotDone() {
      return "Wait I\u2019m not done!";
    },
    get$waitingForOthersToFinish() {
      return "Waiting for the rest to finish up...";
    },
    get$saveToCompletedActivities() {
      return "Save to completed activities";
    },
    get$generatingSummary() {
      return "Analyzing chat and generating results";
    },
    get$findCourse() {
      return "Find a course";
    },
    get$activityCompletedDesc() {
      return "Your completed activity was added to analytics where you can review and practice the language you used.";
    },
    pingParticipantsNotification$2(user, room) {
      return user + " is looking for users to join the activity session in " + room;
    },
    get$courseName() {
      return "Course name";
    },
    get$createNewCourse() {
      return "New course";
    },
    get$publicCourses() {
      return "Public courses";
    },
    goToCourse$1(course) {
      return "Go to course: " + course;
    },
    get$startNewSession() {
      return "Start new session";
    },
    get$joinOpenSession() {
      return "Join open session";
    },
    get$activityNotFound() {
      return "Activity not found";
    },
    get$levelUp() {
      return "Level up";
    },
    get$myActivities() {
      return "My activities";
    },
    get$openToJoin() {
      return "Open to join";
    },
    get$activityDone() {
      return "Activity Done!";
    },
    get$promoCodeInfo() {
      return "Promo codes can be entered on the next page";
    },
    get$editsComingSoon() {
      return "The ability to edit cities and activities is coming soon.";
    },
    get$editing() {
      return "Editing";
    },
    get$activityNeedsOneMember() {
      return "Uh oh! This activity needs 1 more person.";
    },
    activityNeedsMembers$1(num) {
      return "Uh oh! This activity needs " + num + " more people.";
    },
    get$inviteFriendsToCourse() {
      return "Invite friends to my course";
    },
    get$subscribeToUnlockActivitySummaries() {
      return "Subscribe to unlock activity summaries";
    },
    get$subscribeToUnlockDefinitions() {
      return "Subscribe to unlock definitions";
    },
    get$subscribeToUnlockTranscriptions() {
      return "Subscribe to unlock transcriptions";
    },
    get$pingSent() {
      return "\ud83d\udd14 Course ping sent! \ud83d\udd14";
    },
    get$courseTitle() {
      return "Course title";
    },
    get$courseDesc() {
      return "Course description";
    },
    get$courseSavedSuccessfully() {
      return "Course saved successfully";
    },
    get$addCoursePlan() {
      return "Add a course plan";
    },
    get$activityStatsButtonInstruction() {
      return "Click here to view your activity stats and to close the activity when finished";
    },
    get$readingAnalyticsDesc() {
      return "Click practice on each message for reading activities.";
    },
    get$speakingAnalyticsDesc() {
      return "Record voice messages for speaking practice.";
    },
    get$audioAnalyticsDesc() {
      return "Click practice on each message for listening activities.";
    },
    get$loginToAccount() {
      return "Login to my account";
    },
    get$appDescription() {
      return "Learn a language\nwhile texting your friends.";
    },
    get$languages(_) {
      return "Languages";
    },
    get$chooseLanguage() {
      return "Choose a language.";
    },
    get$planTrip() {
      return "Plan your trip";
    },
    get$howAreYouTraveling() {
      return "How are you traveling?";
    },
    get$unlockPrivateTrip() {
      return "Unlock a private trip";
    },
    get$joinPublicTrip() {
      return "Join a public trip";
    },
    get$startOwnTrip() {
      return "Start my own";
    },
    get$tripPlanDesc() {
      return "Trips are courses. Each has 8-10 sequenced topics with a range of task-based language learning activities.";
    },
    get$unlockPrivateTripTitle() {
      return "Unlock private trip";
    },
    get$browsePublicTrips() {
      return "Browse public trips";
    },
    get$startOwnTripTitle() {
      return "Start my own trip";
    },
    get$courseCode() {
      return "What\u2019s the secret password?";
    },
    get$courseCodeHint() {
      return "Trip code or link";
    },
    get$unlockMyTrip() {
      return "Unlock my trip";
    },
    get$signupOption() {
      return "How do you want to sign up?";
    },
    get$withApple() {
      return "With Apple";
    },
    get$withGoogle() {
      return "With Google";
    },
    get$withEmail() {
      return "With Email";
    },
    get$createAccount() {
      return "Create account";
    },
    get$loginWithEmail() {
      return "Login with email";
    },
    get$usernameOrEmail() {
      return "Username or email";
    },
    get$email() {
      return "Email";
    },
    get$forgotPassword() {
      return "Forgot password?";
    },
    get$writingAnalyticsDesc() {
      return "Send messages to practice writing.";
    },
    get$endActivity() {
      return "End activity";
    },
    get$allLanguages() {
      return "All languages";
    },
    get$chatListTooltip() {
      return "Here you\u2019ll find your direct messages! Click on any user\u2019s avatar and \u201cstart conversation\u201d to send a DM.";
    },
    get$directMessageBotTitle() {
      return "Direct message Pangea Bot";
    },
    get$feedbackTitle() {
      return "Activity Feedback";
    },
    get$feedbackDesc() {
      return "How should the activity be improved? If you can provide some details, we\u2019ll make the change!";
    },
    get$feedbackRespDesc() {
      return "Check back tomorrow for activity updates.";
    },
    get$feedbackHint() {
      return "Your feedback";
    },
    get$feedbackButton() {
      return "Submit feedback";
    },
    get$directMessageBotDesc() {
      return "Talking to humans is more fun but... AI is always ready!";
    },
    get$inviteYourFriends() {
      return "Invite your friends";
    },
    get$playWithAI() {
      return "Play with AI for now";
    },
    get$courseStartDesc() {
      return "Pangea Bot is ready to go anytime!\n\n...but learning is better with friends!";
    },
    get$activityDropdownDesc() {
      return "When you\u2019re done with this activity, click below";
    },
    get$activityAnalyticsListBody() {
      return "These are your completed activities! After finishing activities, you can view them here.";
    },
    get$languageMismatchTitle() {
      return "Language mismatch";
    },
    get$languageMismatchDesc() {
      return "Your target language doesn't match the language of this activity. Update your target language?";
    },
    get$reportWordIssueTooltip() {
      return "Report word information issue";
    },
    get$tokenInfoFeedbackDialogTitle() {
      return "Word Information Feedback";
    },
    get$tokenInfoFeedbackDialogDesc() {
      return "AI makes mistakes. Please describe any issues you found with the information above.";
    },
    get$noPublicCoursesFound() {
      return "No public courses found. Would you like to create one?";
    },
    get$noCourseTemplatesFound() {
      return "We couldn't find any courses for your target language. You can chat with Pangea Bot in the meantime, and check back later for more courses.";
    },
    get$botActivityJoinFailMessage() {
      return "Pangea Bot is taking a while to respond. Please try again later, or invite a friend.";
    },
    remove$1($receiver, arg0) {
      return this.get$remove(this).call$1(arg0);
    }
  };
  var typesOffset = hunkHelpers.updateTypes([]);
  (function inheritance() {
    var _inherit = hunkHelpers.inherit;
    _inherit(A.L10nLv, C.L10n);
  })();
  B._Universe_addRules(init.typeUniverse, JSON.parse('{"L10nLv":{"L10n":[]}}'));
};
;
(d => {
  d["nr3zp4Pq59J0ElzqhHwgL4muVG8="] = d.current;
})($__dart_deferred_initializers__);
;
//# sourceMappingURL=main.dart.js_244.part.js.map
