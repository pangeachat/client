// Generated by dart2js (, trust primitives, omit checks, lax runtime type, csp, intern-composite-values), the Dart to JavaScript compiler version: 3.9.2.
((s, d) => {
  s[d] = s[d] || {};
})(self, "$__dart_deferred_initializers__");
$__dart_deferred_initializers__.current = function(hunkHelpers, init, holdersList, $) {
  var B, C,
  A = {
    L10nPl$() {
      return new A.L10nPl(B.canonicalizedLocale("pl"));
    },
    L10nPl: function L10nPl(t0) {
      this.localeName = t0;
    }
  };
  B = holdersList[0];
  C = holdersList[54];
  A = hunkHelpers.updateHolder(holdersList[40], A);
  A.L10nPl.prototype = {
    get$alwaysUse24HourFormat() {
      return "false";
    },
    get$repeatPassword() {
      return "Powt\xf3rz has\u0142o";
    },
    get$notAnImage() {
      return "To nie jest plik obrazu.";
    },
    get$setCustomPermissionLevel() {
      return "Ustaw w\u0142asny poziom uprawnie\u0144";
    },
    get$setPermissionsLevelDescription() {
      return "Prosz\u0119 wybra\u0107 predefiniowan\u0105 rol\u0119 poni\u017cej, lub wprowadzi\u0107 w\u0142asny poziom uprawnie\u0144 pomi\u0119dzy 0 a 100.";
    },
    get$ignoreUser() {
      return "Ignoruj u\u017cytkownika";
    },
    get$normalUser() {
      return "Zwyk\u0142y u\u017cytkownik";
    },
    get$remove(_) {
      return "Usu\u0144";
    },
    get$importNow() {
      return "Zaimportuj";
    },
    get$importEmojis() {
      return "Zaimportuj emotikony";
    },
    get$importFromZipFile() {
      return "Zaimportuj z pliku .zip";
    },
    get$exportEmotePack() {
      return "Eksportuj pakiet emotikon\xf3w jako .zip";
    },
    get$replace(_) {
      return "Zast\u0105p";
    },
    aboutHomeserver$1(homeserver) {
      return "O " + homeserver;
    },
    get$accept(_) {
      return "Akceptuj";
    },
    acceptedTheInvitation$1(username) {
      return "\ud83d\udc4d " + username + " zaakceptowa\u0142/-a zaproszenie";
    },
    get$account() {
      return "Konto";
    },
    activatedEndToEndEncryption$1(username) {
      return "\ud83d\udd10 " + username + " aktywowa\u0142/-a szyfrowanie od ko\u0144ca do ko\u0144ca";
    },
    get$addEmail() {
      return "Dodaj adres email";
    },
    supposedMxid$1(mxid) {
      return "To powinno by\u0107 " + mxid;
    },
    get$admin() {
      return "Administrator";
    },
    get$commandHint_roomupgrade() {
      return "Zaktualizuj ten pok\xf3j do podanej wersji";
    },
    get$commandHint_googly() {
      return "Wy\u015blij kr\u0119c\u0105ce si\u0119 oczka";
    },
    get$commandHint_cuddle() {
      return "Wy\u015blij przytulenie";
    },
    get$commandHint_hug() {
      return "Wy\u015blij u\u015bcisk";
    },
    googlyEyesContent$1(senderName) {
      return senderName + " wysy\u0142a ci kr\u0119c\u0105ce si\u0119 oczka";
    },
    cuddleContent$1(senderName) {
      return senderName + " przytula ci\u0119";
    },
    hugContent$1(senderName) {
      return senderName + " u\u015bciska ci\u0119";
    },
    answeredTheCall$1(senderName) {
      return senderName + " odebra\u0142/-a po\u0142\u0105czenie";
    },
    get$anyoneCanJoin() {
      return "Ka\u017cdy mo\u017ce do\u0142\u0105czy\u0107";
    },
    get$archive() {
      return "Archiwum";
    },
    get$areYouSure() {
      return "Czy na pewno?";
    },
    get$areYouSureYouWantToLogout() {
      return "Czy na pewno chcesz si\u0119 wylogowa\u0107?";
    },
    get$askSSSSSign() {
      return "Aby zalogowa\u0107 inn\u0105 osob\u0119, prosz\u0119 wpisa\u0107 has\u0142o przechowywania lub klucz odzyskiwania.";
    },
    askVerificationRequest$1(username) {
      return "Zaakceptowa\u0107 t\u0105 pro\u015bb\u0119 weryfikacji od " + username + "?";
    },
    badServerLoginTypesException$3(serverVersions, supportedVersions, suportedVersions) {
      return "Serwer obs\u0142uguje typy logowania:\n" + serverVersions + "\nAle ta aplikacja obs\u0142uguje tylko:\n" + supportedVersions;
    },
    get$sendTypingNotifications() {
      return "Wysy\u0142aj powiadomienie o pisaniu";
    },
    get$swipeRightToLeftToReply() {
      return "Przeci\u0105gnij w lewo, by odpowiedzie\u0107";
    },
    get$sendOnEnter() {
      return "Wy\u015blij enterem";
    },
    countChatsAndCountParticipants$2(chats, participants) {
      var t1 = "" + participants;
      return t1 + chats + " czat\xf3w i " + t1 + " uczestnik\xf3w";
    },
    get$noMoreChatsFound() {
      return "Nie znaleziono wi\u0119cej czat\xf3w...";
    },
    get$banFromChat() {
      return "Ban w czacie";
    },
    get$banned() {
      return "Zbanowany/-a";
    },
    bannedUser$2(username, targetName) {
      return username + " zbanowa\u0142/-a " + targetName;
    },
    get$blockDevice() {
      return "Zablokuj urz\u0105dzenie";
    },
    get$blocked() {
      return "Zablokowane";
    },
    get$cancel(_) {
      return "Anuluj";
    },
    cantOpenUri$1(uri) {
      return "Nie mo\u017cna otworzy\u0107 linku " + uri;
    },
    get$changeDeviceName() {
      return "Zmie\u0144 nazw\u0119 urz\u0105dzenia";
    },
    changedTheChatAvatar$1(username) {
      return username + " zmieni\u0142/-a zdj\u0119cie profilowe";
    },
    changedTheChatDescriptionTo$2(username, description) {
      return username + " zmieni\u0142/-a opis czatu na '" + description + "'";
    },
    changedTheChatNameTo$2(username, chatname) {
      return username + " zmieni\u0142/-a nazw\u0119 czatu na '" + chatname + "'";
    },
    changedTheChatPermissions$1(username) {
      return username + " zmieni\u0142/-a uprawnienia w czacie";
    },
    changedTheDisplaynameTo$2(username, displayname) {
      return username + " zmieni\u0142/-a swoj\u0105 nazw\u0119 wy\u015bwietlan\u0105 na '" + displayname + "'";
    },
    changedTheGuestAccessRules$1(username) {
      return username + " zmieni\u0142/-a zasady dost\u0119pu dla go\u015bci";
    },
    changedTheGuestAccessRulesTo$2(username, rules) {
      return username + " zmieni\u0142/-a zasady dost\u0119pu dla go\u015bci na " + rules;
    },
    changedTheHistoryVisibility$1(username) {
      return username + " zmieni\u0142/-a widoczno\u015b\u0107 historii";
    },
    changedTheHistoryVisibilityTo$2(username, rules) {
      return username + " zmieni\u0142/-a widoczno\u015b\u0107 historii na " + rules;
    },
    changedTheJoinRules$1(username) {
      return username + " zmieni\u0142/-a zasady wej\u015bcia";
    },
    changedTheJoinRulesTo$2(username, joinRules) {
      return username + " zmieni\u0142/-a zasady wej\u015bcia na " + joinRules;
    },
    changedTheProfileAvatar$1(username) {
      return username + " zmieni\u0142/-a zdj\u0119cie profilowe";
    },
    changedTheRoomAliases$1(username) {
      return username + " zmieni\u0142/-a alias pokoju";
    },
    changedTheRoomInvitationLink$1(username) {
      return username + " zmieni\u0142/-a link z zaproszeniem do pokoju";
    },
    get$changePassword() {
      return "Zmie\u0144 has\u0142o";
    },
    get$changeTheme() {
      return "Zmie\u0144 sw\xf3j styl";
    },
    get$changeYourAvatar() {
      return "Zmie\u0144 swoje zdj\u0119cie";
    },
    get$channelCorruptedDecryptError() {
      return "Szyfrowanie zosta\u0142o uszkodzone";
    },
    get$chat() {
      return "Czat";
    },
    get$chatDetails() {
      return "Szczeg\xf3\u0142y czatu";
    },
    get$chats() {
      return "Czaty";
    },
    get$chooseAStrongPassword() {
      return "Wybierz silne has\u0142o";
    },
    get$clearArchive() {
      return "Wyczy\u015b\u0107 archiwum";
    },
    get$close(_) {
      return "Zamknij";
    },
    get$commandHint_markasdm() {
      return "Oznacz jako pok\xf3j wiadomo\u015bci bezpo\u015brednich dla podanego Matrix ID";
    },
    get$commandHint_markasgroup() {
      return "Oznacz jako grup\u0119";
    },
    get$commandHint_ban() {
      return "Zbanuj u\u017cytkownika w tym pokoju";
    },
    get$commandHint_clearcache() {
      return "Wyczy\u015b\u0107 pami\u0119\u0107 podr\u0119czn\u0105";
    },
    get$commandHint_create() {
      return "Stw\xf3rz pusty czat\nU\u017cyj --no-encryption by wy\u0142\u0105czy\u0107 szyfrowanie";
    },
    get$commandHint_discardsession() {
      return "Odrzu\u0107 sesj\u0119";
    },
    get$commandHint_dm() {
      return "Rozpocznij czat bezpo\u015bredni\nU\u017cyj --no-encryption by wy\u0142\u0105czy\u0107 szyfrowanie";
    },
    get$commandHint_html() {
      return "Wy\u015blij tekst sformatowany w HTML";
    },
    get$commandHint_invite() {
      return "Zapro\u015b u\u017cytkownika do pokoju";
    },
    get$commandHint_join() {
      return "Do\u0142\u0105cz do podanego pokoju";
    },
    get$commandHint_kick() {
      return "Usu\u0144 tego u\u017cytkownika z tego pokoju";
    },
    get$commandHint_leave() {
      return "Opu\u015b\u0107 ten pok\xf3j";
    },
    get$commandHint_me() {
      return "Opisz siebie";
    },
    get$commandHint_myroomavatar() {
      return "Ustaw swoje zdj\u0119cie w tym pokoju (przez mxc-uri)";
    },
    get$commandHint_myroomnick() {
      return "Ustaw swoj\u0105 nazw\u0119 wy\u015bwietlan\u0105 w tym pokoju";
    },
    get$commandHint_op() {
      return "Ustaw poziom uprawnie\u0144 tego u\u017cytkownika (domy\u015blnie: 50)";
    },
    get$commandHint_plain() {
      return "Wy\u015blij niesformatowany tekst";
    },
    get$commandHint_react() {
      return "Wy\u015blij odpowied\u017a jako reakcj\u0119";
    },
    get$commandHint_send() {
      return "Wy\u015blij wiadomo\u015b\u0107";
    },
    get$commandHint_unban() {
      return "Odbanuj u\u017cytkownika w tym pokoju";
    },
    get$compareEmojiMatch() {
      return "Por\xf3wnaj emoji";
    },
    get$compareNumbersMatch() {
      return "Por\xf3wnaj cyfry";
    },
    get$configureChat() {
      return "Konfiguruj czat";
    },
    get$confirm(_) {
      return "Potwierd\u017a";
    },
    get$copiedToClipboard() {
      return "Skopiowano do schowka";
    },
    get$copy(_) {
      return "Kopiuj";
    },
    couldNotDecryptMessage$1(error) {
      return "Nie mo\u017cna odszyfrowa\u0107 wiadomo\u015bci: " + error;
    },
    get$checkList() {
      return "Lista kontrolna";
    },
    countParticipants$1(count) {
      return "" + count + " uczestnik\xf3w";
    },
    countInvited$1(count) {
      return "" + count + " zaproszonych";
    },
    get$create(_) {
      return "Stw\xf3rz";
    },
    createdTheChat$1(username) {
      return "\ud83d\udcac " + username + " utworzy\u0142/-a czat";
    },
    get$createGroup() {
      return "Utw\xf3rz grup\u0119";
    },
    get$currentlyActive() {
      return "Obecnie aktywny/-a";
    },
    get$darkTheme() {
      return "Ciemny";
    },
    dateAndTimeOfDay$2(date, timeOfDay) {
      return date + " " + timeOfDay;
    },
    get$deactivateAccountWarning() {
      return "To zdezaktywuje twoje konto. To jest nieodwracalne! Na pewno chcesz to zrobi\u0107?";
    },
    get$defaultPermissionLevel() {
      return "Domy\u015blny poziom uprawnie\u0144 dla nowych u\u017cytkownik\xf3w";
    },
    get$$delete(_) {
      return "Usu\u0144";
    },
    get$deleteAccount() {
      return "Usu\u0144 konto";
    },
    get$deleteMessage() {
      return "Usu\u0144 wiadomo\u015b\u0107";
    },
    get$devices() {
      return "Urz\u0105dzenia";
    },
    get$displaynameHasBeenChanged() {
      return "Nazwa wy\u015bwietlana zosta\u0142a zmieniona";
    },
    get$downloadFile() {
      return "Pobierz plik";
    },
    get$edit() {
      return "Edytuj";
    },
    get$editBlockedServers() {
      return "Edytuj zablokowane serwery";
    },
    get$chatPermissions() {
      return "Uprawnienia w czacie";
    },
    get$editDisplayname() {
      return "Edytuj nazw\u0119 wy\u015bwietlan\u0105";
    },
    get$editRoomAvatar() {
      return "Edytuj zdj\u0119cie pokoju";
    },
    get$emoteExists() {
      return "Emotikon ju\u017c istnieje!";
    },
    get$emoteInvalid() {
      return "Nieprawid\u0142owy kod emotikonu!";
    },
    get$emoteKeyboardNoRecents() {
      return "Tutaj pojawiaj\u0105 si\u0119 ostatnio u\u017cywane emotikony...";
    },
    get$emotePacks() {
      return "Paczki emotikon\xf3w dla pokoju";
    },
    get$customEmojisAndStickers() {
      return "W\u0142asne emotikony i naklejki";
    },
    get$emoteShortcode() {
      return "Skr\xf3cony kod emotikonu";
    },
    get$emoteWarnNeedToPick() {
      return "Musisz wybra\u0107 kod emotikonu oraz obraz!";
    },
    get$emptyChat() {
      return "Pusty czat";
    },
    get$enableEmotesGlobally() {
      return "W\u0142\u0105cz paczk\u0119 emotikon\xf3w globalnie";
    },
    get$enableEncryption() {
      return "W\u0142\u0105cz szyfowanie";
    },
    get$encrypted() {
      return "Szyfrowane";
    },
    get$encryptionNotEnabled() {
      return "Szyfrowanie nie jest w\u0142\u0105czone";
    },
    endedTheCall$1(senderName) {
      return senderName + " zako\u0144czy\u0142/-a po\u0142\u0105czenie";
    },
    get$enterAnEmailAddress() {
      return "Wpisz adres e-mail";
    },
    errorObtainingLocation$1(error) {
      return "B\u0142\u0105d w ustalaniu lokalizacji: " + error;
    },
    get$fontSize(_) {
      return "Rozmiar fontu";
    },
    get$forward(_) {
      return "Przeka\u017c";
    },
    get$fromJoining() {
      return "Od do\u0142\u0105czenia";
    },
    get$fromTheInvitation() {
      return "Od zaproszenia";
    },
    get$guestsAreForbidden() {
      return "Go\u015bcie s\u0105 zakazani";
    },
    get$guestsCanJoin() {
      return "Go\u015bcie mog\u0105 do\u0142\u0105czy\u0107";
    },
    hasWithdrawnTheInvitationFor$2(username, targetName) {
      return username + " wycofa\u0142/-a zaproszenie dla " + targetName;
    },
    get$help() {
      return "Pomoc";
    },
    get$hideRedactedMessages() {
      return "Nie pokazuj usuni\u0119tych wiadomo\u015bci";
    },
    get$hideRedactedMessagesBody() {
      return "Usuni\u0119te wiadomo\u015bci nie b\u0119d\u0105 widoczne w czacie.";
    },
    get$hideInvalidOrUnknownMessageFormats() {
      return "Ukryj niepoprawne lub nieznane typy wiadomo\u015bci";
    },
    get$block() {
      return "Zablokuj";
    },
    get$blockedUsers() {
      return "Zablokowani u\u017cytkownicy";
    },
    get$blockListDescription() {
      return "Mo\u017cesz zablokowa\u0107 uci\u0105\u017cliwych u\u017cytkownik\xf3w. Nie b\u0119dziesz widzie\u0107 ani otrzymywa\u0107 wiadomo\u015bci oraz zaprosze\u0144 od nich.";
    },
    get$blockUsername() {
      return "Ignoruj u\u017cytkownika";
    },
    get$iHaveClickedOnLink() {
      return "Nacisn\u0105\u0142em na link";
    },
    get$incorrectPassphraseOrKey() {
      return "Z\u0142e has\u0142o bezpiecze\u0144stwa lub klucz odzyskiwania";
    },
    get$inviteContact() {
      return "Zapro\u015b kontakt";
    },
    get$noChatDescriptionYet() {
      return "Nie utworzono jeszcze opisu czatu.";
    },
    get$tryAgain() {
      return "Spr\xf3buj ponownie";
    },
    get$invited() {
      return "Zaproszono";
    },
    get$redactMessageDescription() {
      return "Wiadomo\u015b\u0107 zostanie usuni\u0119ta u wszystkich uczestnik\xf3w tej rozmowy. Tego nie mo\u017cna cofn\u0105\u0107.";
    },
    get$optionalRedactReason() {
      return "(Opcjonalnie) Pow\xf3d usuni\u0119cia tej wiadomo\u015bci...";
    },
    invitedUser$2(username, targetName) {
      return "\ud83d\udce9 " + username + " zaprosi\u0142/-a " + targetName;
    },
    get$invitedUsersOnly() {
      return "Tylko zaproszeni u\u017cytkownicy";
    },
    get$inviteForMe() {
      return "Zaproszenie dla mnie";
    },
    get$isTyping() {
      return "pisze\u2026";
    },
    joinedTheChat$1(username) {
      return "\ud83d\udc4b " + username + " do\u0142\u0105czy\u0142/-a do czatu";
    },
    kicked$2(username, targetName) {
      return "\ud83d\udc5e " + username + " wyrzuci\u0142/-a " + targetName;
    },
    get$kickFromChat() {
      return "Wyrzu\u0107 z czatu";
    },
    lastActiveAgo$1(localizedTimeShort) {
      return "Ostatnio widziano " + localizedTimeShort;
    },
    get$leave() {
      return "Opu\u015b\u0107";
    },
    get$leftTheChat() {
      return "Opu\u015bci\u0142/-a czat";
    },
    get$lightTheme() {
      return "Jasny";
    },
    get$dehydrate() {
      return "Eksportuj sesj\u0119 i wyma\u017c urz\u0105dzenie";
    },
    get$dehydrateWarning() {
      return "Tego nie mo\u017cna cofn\u0105\u0107. Upewnij si\u0119, \u017ce plik kopii zapasowej jest bezpiecznie przechowywany.";
    },
    get$dehydrateTor() {
      return "U\u017cytkownicy TOR: Eksportuj sesj\u0119";
    },
    get$dehydrateTorLong() {
      return "W przypadku u\u017cytkownik\xf3w sieci TOR zaleca si\u0119 eksportowanie sesji przed zamkni\u0119ciem okna.";
    },
    get$loadingPleaseWait() {
      return "\u0141adowanie\u2026 Prosz\u0119 czeka\u0107.";
    },
    get$loadMore() {
      return "Za\u0142aduj wi\u0119cej\u2026";
    },
    get$locationDisabledNotice() {
      return "Us\u0142ugi lokalizacji s\u0105 wy\u0142\u0105czone. Prosz\u0119 w\u0142\u0105cz je aby m\xf3c udost\u0119pni\u0107 swoj\u0105 lokalizacj\u0119.";
    },
    get$locationPermissionDeniedNotice() {
      return "Brak uprawnie\u0144. Prosz\u0119 zezw\xf3l aplikacji na dost\u0119p do lokalizacji aby m\xf3c j\u0105 udost\u0119pni\u0107.";
    },
    get$logout() {
      return "Wyloguj si\u0119";
    },
    get$mention() {
      return "Wzmianka";
    },
    get$messages() {
      return "Wiadomo\u015bci";
    },
    get$messagesStyle() {
      return "Wiadomo\u015bci:";
    },
    get$moderator() {
      return "Moderator";
    },
    get$newChat() {
      return "Nowa rozmowa";
    },
    get$newVerificationRequest() {
      return "Nowa pro\u015bba o weryfikacj\u0119!";
    },
    get$next(_) {
      return "Dalej";
    },
    get$no() {
      return "Nie";
    },
    get$noConnectionToTheServer() {
      return "Brak po\u0142\u0105czenia z serwerem";
    },
    get$noEmotesFound() {
      return "Nie znaleziono \u017cadnych emotikon\xf3w. \ud83d\ude15";
    },
    get$shareInviteLink() {
      return "Udost\u0119pnij link z zaproszeniem";
    },
    get$none() {
      return "Brak";
    },
    get$noPasswordRecoveryDescription() {
      return "Nie doda\u0142e\u015b/-a\u015b jeszcze sposobu odzyskiwania swojego has\u0142a.";
    },
    get$noPermission() {
      return "Brak uprawnie\u0144";
    },
    get$noRoomsFound() {
      return "Nie znaleziono pokoj\xf3w\u2026";
    },
    get$notifications() {
      return "Powiadomienia";
    },
    get$obtainingLocation() {
      return "Uzyskiwanie lokalizacji\u2026";
    },
    get$offensive() {
      return "Obra\u017aliwe";
    },
    get$ok() {
      return "Ok";
    },
    get$oopsSomethingWentWrong() {
      return "Ojej! Co\u015b posz\u0142o nie tak\u2026";
    },
    get$oneClientLoggedOut() {
      return "Jedno z twoich urz\u0105dze\u0144 zosta\u0142o wylogowane";
    },
    get$openInMaps() {
      return "Otw\xf3rz w mapach";
    },
    get$link() {
      return "Link";
    },
    get$serverRequiresEmail() {
      return "Ten serwer wymaga potwierdzenia Twojego adresu email w celu rejestracji.";
    },
    get$or() {
      return "Lub";
    },
    get$participant() {
      return "Uczestnik";
    },
    get$passphraseOrKey() {
      return "fraza dost\u0119pu lub klucz odzyskiwania";
    },
    get$password(_) {
      return "Has\u0142o";
    },
    get$passwordForgotten() {
      return "Nie pami\u0119tam has\u0142a";
    },
    get$passwordHasBeenChanged() {
      return "Has\u0142o zosta\u0142o zmienione";
    },
    get$overview() {
      return "Podsumowanie";
    },
    get$passwordRecoverySettings() {
      return "Ustawienia odzyskiwania has\u0142a";
    },
    get$passwordRecovery() {
      return "Odzyskiwanie has\u0142a";
    },
    get$pickImage() {
      return "Wybierz obraz";
    },
    get$pin() {
      return "Przypnij";
    },
    get$pleaseChoose() {
      return "Prosz\u0119 wybra\u0107";
    },
    get$pleaseEnterYourPassword() {
      return "Wprowad\u017a swoje has\u0142o";
    },
    get$pleaseEnterYourPin() {
      return "Podaj sw\xf3j PIN";
    },
    get$pleaseEnterYourUsername() {
      return "Wpisz swoj\u0105 nazw\u0119 u\u017cytkownika";
    },
    get$pleaseFollowInstructionsOnWeb() {
      return "Wykonaj instrukcje na stronie internetowej i naci\u015bnij \u201edalej\u201d.";
    },
    get$privacy() {
      return "Prywatno\u015b\u0107";
    },
    get$reason(_) {
      return "Pow\xf3d";
    },
    redactedBy$1(username) {
      return "Usuni\u0119te przez " + username;
    },
    get$directChat() {
      return "Czat bezpo\u015bredni";
    },
    redactedByBecause$2(username, reason) {
      return "Usuni\u0119te przez " + username + " z powodu \u201e" + reason + "\u201d";
    },
    redactedAnEvent$1(username) {
      return username + " usun\u0105\u0142/-\u0119\u0142a zdarzenie";
    },
    get$redactMessage() {
      return "Usu\u0144 wiadomo\u015b\u0107";
    },
    get$reject() {
      return "Odrzu\u0107";
    },
    rejectedTheInvitation$1(username) {
      return username + " odrzuci\u0142/-a zaproszenie";
    },
    get$removeAllOtherDevices() {
      return "Usu\u0144 wszystkie inne urz\u0105dzenia";
    },
    get$unbanFromChat() {
      return "Odbanuj w czacie";
    },
    get$removeYourAvatar() {
      return "Usu\u0144 swoje zdj\u0119cie";
    },
    get$replaceRoomWithNewerVersion() {
      return "Zamie\u0144 pok\xf3j na nowsz\u0105 wersj\u0119";
    },
    get$reply(_) {
      return "Odpowiedz";
    },
    get$reportMessage() {
      return "Zg\u0142o\u015b wiadomo\u015b\u0107";
    },
    get$roomHasBeenUpgraded() {
      return "Pok\xf3j zosta\u0107 zaktualizowany";
    },
    get$search(_) {
      return "Szukaj";
    },
    get$security() {
      return "Bezpiecze\u0144stwo";
    },
    get$send(_) {
      return "Wy\u015blij";
    },
    get$sendAMessage() {
      return "Wy\u015blij wiadomo\u015b\u0107";
    },
    get$sendAudio() {
      return "Wy\u015blij d\u017awi\u0119k";
    },
    get$sendFile() {
      return "Wy\u015blij plik";
    },
    get$sendImage() {
      return "Wy\u015blij obraz";
    },
    sendImages$1(count) {
      return "Wy\u015blij " + count + " obraz\xf3w";
    },
    get$sendMessages() {
      return "Wy\u015blij wiadomo\u015bci";
    },
    get$sendVideo() {
      return "Wy\u015blij film";
    },
    sentAFile$1(username) {
      return "\ud83d\udcc1 " + username + " wys\u0142a\u0142/-a plik";
    },
    sentAnAudio$1(username) {
      return "\ud83c\udfa4 " + username + " wys\u0142a\u0142/-a plik d\u017cwi\u0119kowy";
    },
    sentAPicture$1(username) {
      return "\ud83d\uddbc\ufe0f " + username + " wys\u0142a\u0142/-a zdj\u0119cie";
    },
    sentASticker$1(username) {
      return "\ud83d\ude0a " + username + " wys\u0142a\u0142/-a naklejk\u0119";
    },
    sentAVideo$1(username) {
      return "\ud83c\udfa5 " + username + " wys\u0142a\u0142/-a film";
    },
    sentCallInformations$1(senderName) {
      return senderName + " wys\u0142a\u0142/-a informacje o po\u0142\u0105czeniu";
    },
    get$separateChatTypes() {
      return "Oddzielenie czat\xf3w bezpo\u015brednich i grupowych";
    },
    get$setChatDescription() {
      return "Ustaw opis czatu";
    },
    get$setStatus() {
      return "Ustaw status";
    },
    get$settings() {
      return "Ustawienia";
    },
    get$share(_) {
      return "Udost\u0119pnij";
    },
    sharedTheLocation$1(username) {
      return username + " udost\u0119pni\u0142/-a swoj\u0105 lokalizacj\u0119";
    },
    get$shareLocation() {
      return "Udost\u0119pnij lokalizacj\u0119";
    },
    get$presencesToggle() {
      return "Pokazuj zmiany status\xf3w innych u\u017cytkownik\xf3w";
    },
    get$skip(_) {
      return "Pomi\u0144";
    },
    get$sourceCode() {
      return "Kod \u017cr\xf3d\u0142owy";
    },
    startedACall$1(senderName) {
      return senderName + " rozpocz\u0105\u0142/-\u0119\u0142a rozmow\u0119";
    },
    get$status(_) {
      return "Status";
    },
    get$statusExampleMessage() {
      return "Jak si\u0119 masz dzi\u015b?";
    },
    get$submit(_) {
      return "Ode\u015blij";
    },
    get$synchronizingPleaseWait() {
      return "Synchronizowanie\u2026 Prosz\u0119 czeka\u0107.";
    },
    synchronizingPleaseWaitCounter$1(percentage) {
      return " Synchronizowanie\u2026 (" + percentage + "%)";
    },
    get$systemTheme() {
      return "System";
    },
    get$theyDontMatch() {
      return "Nie zgadzaj\u0105 si\u0119";
    },
    get$theyMatch() {
      return "Zgadzaj\u0105 si\u0119";
    },
    get$tooManyRequestsWarning() {
      return "Zbyt wiele \u017c\u0105da\u0144. Prosz\u0119 spr\xf3bowa\u0107 p\xf3\u017aniej.";
    },
    get$tryToSendAgain() {
      return "Spr\xf3buj wys\u0142a\u0107 ponownie";
    },
    get$unavailable() {
      return "Niedost\u0119pne";
    },
    unbannedUser$2(username, targetName) {
      return username + " odbanowa\u0142/-a " + targetName;
    },
    get$unblockDevice() {
      return "Odblokuj urz\u0105dzenie";
    },
    get$unknownDevice() {
      return "Nieznane urz\u0105dzenie";
    },
    get$unknownEncryptionAlgorithm() {
      return "Nieznany algorytm szyfrowania";
    },
    unknownEvent$1(type) {
      return "Nieznane zdarzenie '" + type + "'";
    },
    get$unpin() {
      return "Odepnij";
    },
    userAndOthersAreTyping$2(username, count) {
      return username + " oraz " + count + " pozosta\u0142ych pisze\u2026";
    },
    userAndUserAreTyping$2(username, username2) {
      return username + " i " + username2 + " pisz\u0105\u2026";
    },
    userIsTyping$1(username) {
      return username + " pisze\u2026";
    },
    userLeftTheChat$1(username) {
      return "\ud83d\udeaa " + username + " opu\u015bci\u0142/-a czat";
    },
    get$username(_) {
      return "Nazwa u\u017cytkownika";
    },
    userSentUnknownEvent$2(username, type) {
      return username + " wys\u0142a\u0142/-a zdarzenie " + type;
    },
    get$unverified() {
      return "Niezweryfikowane";
    },
    get$verified() {
      return "Zweryfikowane";
    },
    get$verifyStart() {
      return "Rozpocznij weryfikacj\u0119";
    },
    get$verifySuccess() {
      return "Pomy\u015blnie zweryfikowano!";
    },
    get$verifyTitle() {
      return "Weryfikowanie innego konta";
    },
    get$visibleForAllParticipants() {
      return "Widoczny dla wszystkich u\u017cytkownik\xf3w";
    },
    get$visibleForEveryone() {
      return "Widoczne dla ka\u017cdego";
    },
    get$voiceMessage() {
      return "Wiadomo\u015b\u0107 g\u0142osowa";
    },
    get$waitingPartnerAcceptRequest() {
      return "Oczekiwanie na zaakceptowanie pro\u015bby przez drug\u0105 osob\u0119\u2026";
    },
    get$waitingPartnerEmoji() {
      return "Oczekiwanie na zaakceptowanie emoji przez drug\u0105 osob\u0119\u2026";
    },
    get$waitingPartnerNumbers() {
      return "Oczekiwanie na zaakceptowanie numer\xf3w przez drug\u0105 osob\u0119\u2026";
    },
    get$warning() {
      return "Uwaga!";
    },
    get$weSentYouAnEmail() {
      return "Wys\u0142ali\u015bmy Ci wiadomo\u015b\u0107 e-mail";
    },
    get$whyDoYouWantToReportThis() {
      return "Dlaczego chcesz to zg\u0142osi\u0107?";
    },
    get$withTheseAddressesRecoveryDescription() {
      return "Dzi\u0119ki tym adresom mo\u017cesz odzyska\u0107 swoje has\u0142o.";
    },
    get$writeAMessage() {
      return "Napisz wiadomo\u015b\u0107\u2026";
    },
    get$yes() {
      return "Tak";
    },
    get$you() {
      return "Ty";
    },
    get$youAreNoLongerParticipatingInThisChat() {
      return "Nie uczestniczysz ju\u017c w tym czacie";
    },
    get$youHaveBeenBannedFromThisChat() {
      return "Zosta\u0142e\u015b/-a\u015b zbanowany/-a w tym czacie";
    },
    get$yourPublicKey() {
      return "Tw\xf3j klucz publiczny";
    },
    get$messageInfo() {
      return "Informacje o wiadomo\u015bci";
    },
    get$time(_) {
      return "Czas";
    },
    get$sender() {
      return "Nadawca";
    },
    get$openGallery() {
      return "Otw\xf3rz galeri\u0119";
    },
    get$start(_) {
      return "Start";
    },
    get$markAsRead() {
      return "Oznacz jako przeczytane";
    },
    reactedWith$2(sender, reaction) {
      return sender + " zareagowa\u0142/-a z " + reaction;
    },
    get$pinMessage() {
      return "Przypnij do pokoju";
    },
    get$emojis() {
      return "Emoji";
    },
    get$youRejectedTheInvitation() {
      return "Odrzucono zaproszenie";
    },
    get$youJoinedTheChat() {
      return "Do\u0142\u0105czono do czatu";
    },
    get$youAcceptedTheInvitation() {
      return "\ud83d\udc4d Zaakceptowa\u0142e\u015b/-a\u015b zaproszenie";
    },
    youBannedUser$1(user) {
      return "Zbanowa\u0142e\u015b/-a\u015b " + user;
    },
    youHaveWithdrawnTheInvitationFor$1(user) {
      return "Wycofano zaproszenie dla " + user;
    },
    youInvitedBy$1(user) {
      return "\ud83d\udce9 Zosta\u0142e\u015b/-a\u015b zaproszony/-a przez " + user;
    },
    youInvitedUser$1(user) {
      return "\ud83d\udce9 Zaprosi\u0142e\u015b/-a\u015b " + user;
    },
    youKicked$1(user) {
      return "\ud83d\udc5e Wyrzuci\u0142e\u015b/-a\u015b " + user;
    },
    youUnbannedUser$1(user) {
      return "Odbanowa\u0142e\u015b/-a\u015b " + user;
    },
    hasKnocked$1(user) {
      return user + " zapuka\u0142-/a";
    },
    get$users() {
      return "U\u017cytkownicy";
    },
    countFiles$1(count) {
      return "" + count + " plik\xf3w";
    },
    get$user() {
      return "U\u017cytkownik";
    },
    get$custom() {
      return "W\u0142asne";
    },
    get$noKeyForThisMessage() {
      return "Mo\u017ce si\u0119 to zdarzy\u0107, je\u015bli wiadomo\u015b\u0107 zosta\u0142a wys\u0142ana przed zalogowaniem si\u0119 na to konto na tym urz\u0105dzeniu.\n\nMo\u017cliwe jest r\xf3wnie\u017c, \u017ce nadawca zablokowa\u0142 Twoje urz\u0105dzenie lub co\u015b posz\u0142o nie tak z po\u0142\u0105czeniem internetowym.\n\nJeste\u015b w stanie odczyta\u0107 wiadomo\u015b\u0107 na innej sesji? W takim razie mo\u017cesz przenie\u015b\u0107 z niej wiadomo\u015b\u0107! Wejd\u017a w Ustawienia > Urz\u0105dzenia i upewnij si\u0119, \u017ce Twoje urz\u0105dzenia zweryfikowa\u0142y si\u0119 wzajemnie. Gdy nast\u0119pnym razem otworzysz pok\xf3j i obie sesje b\u0119d\u0105 w\u0142\u0105czone, klucze zostan\u0105 przekazane automatycznie.\n\nNie chcesz straci\u0107 kluczy podczas wylogowania lub prze\u0142\u0105czania urz\u0105dze\u0144? Upewnij si\u0119, \u017ce w ustawieniach masz w\u0142\u0105czon\u0105 kopi\u0119 zapasow\u0105 czatu.";
    },
    wasDirectChatDisplayName$1(oldDisplayName) {
      return "Pusty czat (wcze\u015bniej " + oldDisplayName + ")";
    },
    get$reopenChat() {
      return "Otw\xf3rz ponownie czat";
    },
    get$noOtherDevicesFound() {
      return "Nie znaleziono innych urz\u0105dze\u0144";
    },
    fileIsTooBigForServer$1(max) {
      return "Nie uda\u0142o si\u0119 wys\u0142a\u0107! Ten serwer obs\u0142uguje za\u0142\u0105czniki o maksymalnej wielko\u015bci " + max + ".";
    },
    get$jumpToLastReadMessage() {
      return "Przejd\u017a do ostatnio przeczytanej wiadomo\u015bci";
    },
    get$readUpToHere() {
      return "Czytaj do tego miejsca";
    },
    get$jump() {
      return "Przejd\u017a";
    },
    get$openLinkInBrowser() {
      return "Otw\xf3rz link w przegl\u0105darce";
    },
    get$setColorTheme() {
      return "Ustal styl kolor\xf3w:";
    },
    get$invite() {
      return "Zaproszenie";
    },
    get$invalidInput() {
      return "Nieprawid\u0142owe dane!";
    },
    wrongPinEntered$1(seconds) {
      return "Wprowadzono nieprawid\u0142owy kod PIN! Spr\xf3buj ponownie za " + seconds + " sekund...";
    },
    get$pleaseEnterANumber() {
      return "Prosz\u0119 poda\u0107 liczb\u0119 wi\u0119ksz\u0105 od 0";
    },
    get$removeDevicesDescription() {
      return "Nast\u0105pi wylogowanie z tego urz\u0105dzenia. Nie b\u0119dziesz w stanie odbiera\u0107 na nim wiadomo\u015bci.";
    },
    get$banUserDescription() {
      return "U\u017cytkownik zostanie zbanowany w czacie i nie b\u0119dzie w stanie do\u0142\u0105czy\u0107 do czatu do momentu odbanowania.";
    },
    get$unbanUserDescription() {
      return "U\u017cytkownik b\u0119dzie w stanie do\u0142\u0105czy\u0107 do czatu ponownie.";
    },
    get$kickUserDescription() {
      return "U\u017cytkownik jest wyrzucony z czatu, ale nie zbanowany. Do czatu publicznego mo\u017ce do\u0142\u0105czy\u0107 ponownie.";
    },
    get$makeAdminDescription() {
      return "Kiedy u\u017cytkownik zostanie adminem, nie b\u0119dziesz m\xf3c tego cofn\u0105\u0107, bo nabierze takich samych uprawnie\u0144, jak Ty.";
    },
    get$yourGlobalUserIdIs() {
      return "Tw\xf3j globalny identyfikator to: ";
    },
    noUsersFoundWithQuery$1(query) {
      return 'Niestety nie uda\u0142o si\u0119 nikogo znale\u017a\u0107 poprzez "' + query + '". Prosz\u0119 sprawdzi\u0107, czy w zapytaniu nie ma liter\xf3wek.';
    },
    get$knocking() {
      return "Pukanie";
    },
    get$nothingFound() {
      return "Nic nie odnaleziono...";
    },
    get$groupName() {
      return "Nazwa grupy";
    },
    get$wrongRecoveryKey() {
      return "Niestety to nie wygl\u0105da na poprawny klucz odzyskiwania.";
    },
    get$startConversation() {
      return "Rozpocznij rozmow\u0119";
    },
    get$commandHint_sendraw() {
      return "Wy\u015blij zwyk\u0142y JSON";
    },
    get$leaveEmptyToClearStatus() {
      return "Pozostaw puste, aby wyczy\u015bci\u0107 sw\xf3j status.";
    },
    get$searchForUsers() {
      return "Szukaj @u\u017cytkownik\xf3w...";
    },
    get$pleaseEnterYourCurrentPassword() {
      return "Prosz\u0119 poda\u0107 swoje obecne has\u0142o";
    },
    get$newPassword() {
      return "Nowe has\u0142o";
    },
    get$pleaseChooseAStrongPassword() {
      return "Prosz\u0119 wybra\u0107 silne has\u0142o";
    },
    get$passwordsDoNotMatch() {
      return "Has\u0142a si\u0119 nie zgadzaj\u0105";
    },
    get$passwordIsWrong() {
      return "Podano niepoprawne has\u0142o";
    },
    get$decline() {
      return "Odm\xf3w";
    },
    get$thisDevice() {
      return "To urz\u0105dzenie:";
    },
    get$initAppError() {
      return "Wyst\u0105pi\u0142 b\u0142\u0105d podczas inicjalizacji aplikacji";
    },
    searchIn$1(chat) {
      return 'Szukaj w czacie "' + chat + '"...';
    },
    get$searchMore() {
      return "Szukaj dalej...";
    },
    get$gallery() {
      return "Galeria";
    },
    get$files(_) {
      return "Pliki";
    },
    sessionLostBody$2(url, error) {
      return "Twoja sesja zosta\u0142a utracona. Prosimy zg\u0142osi\u0107 ten b\u0142\u0105d autorom aplikacji na " + url + ". Tre\u015b\u0107 b\u0142\u0119du to: " + error;
    },
    restoreSessionBody$2(url, error) {
      return "Aplikacja spr\xf3buje teraz odzyska\u0107 Twoj\u0105 sesj\u0119 z kopii zapasowej. Prosimy zg\u0142osi\u0107 ten b\u0142\u0105d autorom aplikacji na " + url + ". Tre\u015b\u0107 b\u0142\u0119du to: " + error;
    },
    get$sendReadReceipts() {
      return "Wysy\u0142aj powiadomienia o przeczytaniu wiadomo\u015bci";
    },
    get$sendTypingNotificationsDescription() {
      return "Pozostali uczestnicy czatu mog\u0105 widzie\u0107 kiedy piszesz now\u0105 wiadomo\u015b\u0107.";
    },
    get$sendReadReceiptsDescription() {
      return "Pozostali uczestnicy czatu mog\u0105 widzie\u0107 zobaczy\u0107 kiedy przeczytasz wiadomo\u015b\u0107.";
    },
    get$verifyOtherDevice() {
      return "\ud83d\udd10 Zweryfikuj inne urz\u0105dzenie";
    },
    get$verifyOtherDeviceDescription() {
      return "Je\u015bli zweryfikujesz inne urz\u0105dzenie, b\u0119dzie mog\u0142o ono wymieni\u0107 klucze z dotychczasowym, zwi\u0119kszaj\u0105c og\xf3lne bezpiecze\u0144stwo. \ud83d\udcaa Kiedy rozpoczniesz weryfikacj\u0119, na obu urz\u0105dzeniach wy\u015bwietli si\u0119 okno dialogowe. Zobaczysz w nim seri\u0119 emotikon\xf3w lub numery do por\xf3wnania. Najlepiej mie\u0107 oba urz\u0105dzenia pod r\u0119k\u0105 przed rozpocz\u0119ciem weryfikacji. \ud83e\udd33";
    },
    acceptedKeyVerification$1(sender) {
      return sender + " zaakceptowa\u0142/-a weryfikacj\u0119 kluczy";
    },
    canceledKeyVerification$1(sender) {
      return sender + " anulowa\u0142/-a weryfikacj\u0119 kluczy";
    },
    completedKeyVerification$1(sender) {
      return sender + " zako\u0144czy\u0142/-a weryfikacj\u0119 kluczy";
    },
    isReadyForKeyVerification$1(sender) {
      return sender + " jest gotowy/-a do weryfikacji kluczy";
    },
    requestedKeyVerification$1(sender) {
      return sender + " poprosi\u0142/-a o weryfikacj\u0119 kluczy";
    },
    startedKeyVerification$1(sender) {
      return sender + " rozpocz\u0105\u0142/-\u0119\u0142a weryfikacj\u0119 kluczy";
    },
    get$stickers() {
      return "Naklejki";
    },
    get$commandHint_ignore() {
      return "Ignoruj podany identyfikator Matrix";
    },
    get$commandHint_unignore() {
      return "Przesta\u0144 ignorowa\u0107 podany identyfikator Matrix";
    },
    thereAreCountUsersBlocked$1(count) {
      return "Obecnie jest " + count + " zablokowanych u\u017cytkownik\xf3w.";
    },
    get$restricted() {
      return "Ograniczone";
    },
    get$markAsUnread() {
      return "Oznacz jako nieprzeczytane";
    },
    userLevel$1(level) {
      return "" + level + " - U\u017cytkownik";
    },
    moderatorLevel$1(level) {
      return "" + level + " - Moderator";
    },
    adminLevel$1(level) {
      return "" + level + " - Administrator";
    },
    get$changeTheVisibilityOfChatHistory() {
      return "Zmie\u0144 widoczno\u015b\u0107 historii czatu";
    },
    get$changeTheCanonicalRoomAlias() {
      return "Zmie\u0144 g\u0142\xf3wny publiczny czatu";
    },
    get$sendRoomNotifications() {
      return "Wysy\u0142aj powiadomienia @room";
    },
    get$chatPermissionsDescription() {
      return "Ustal jaki poziom uprawnie\u0144 jest wymagany dla okre\u015blonych czynno\u015bci w czacie. Poziomy uprawnie\u0144 0, 50 i 100 zwykle dotycz\u0105 odpowiednio u\u017cytkownik\xf3w, moderator\xf3w i administrator\xf3w, ale mo\u017cliwa jest dowolna gradacja.";
    },
    updateInstalled$1(version) {
      return "\ud83c\udf89 Zainstalowano aktualizacj\u0119 do wersji " + version + "!";
    },
    get$sendCanceled() {
      return "Anulowano wysy\u0142anie";
    },
    get$doesNotSeemToBeAValidHomeserver() {
      return "Wydaje si\u0119 nie by\u0107 kompatybilnym serwerem domowym. Niepoprawny adres URL?";
    },
    get$calculatingFileSize() {
      return "Obliczanie rozmiaru pliku...";
    },
    get$prepareSendingAttachment() {
      return "Przygotuj wysy\u0142anie za\u0142\u0105cznika...";
    },
    get$sendingAttachment() {
      return "Wysy\u0142anie za\u0142\u0105cznika...";
    },
    sendingAttachmentCountOfCount$2(index, $length) {
      return "Wysy\u0142anie " + index + " z " + $length + " cz\u0119\u015bci za\u0142\u0105cznika...";
    },
    serverLimitReached$1(seconds) {
      return "Osi\u0105gni\u0119to limit serwera. Czekanie " + seconds + " sekund...";
    },
    get$noticeChatBackupDeviceVerification() {
      return "Uwaga: Urz\u0105dzenia dodane do kopii zapasowej czatu automatycznie zostaj\u0105 zweryfikowane.";
    },
    get$continueText() {
      return "Kontynuuj";
    },
    get$blur(_) {
      return "Rozmazanie:";
    },
    get$opacity(_) {
      return "Przezroczysto\u015b\u0107:";
    },
    get$setWallpaper() {
      return "Ustaw tapet\u0119";
    },
    get$noContactInformationProvided() {
      return "Serwer nie dostarcza \u017cadnych poprawnych danych kontaktowych";
    },
    get$contactServerAdmin() {
      return "Skontaktuj si\u0119 z administratorem serwera";
    },
    get$contactServerSecurity() {
      return "Skontaktuj si\u0119 z dzia\u0142em bezpiecze\u0144stwa serwera";
    },
    get$supportPage() {
      return "Strona obs\u0142ugi u\u017cytkownika";
    },
    get$serverInformation() {
      return "Informacje o serwerze:";
    },
    get$name(_) {
      return "Nazwa";
    },
    get$version(_) {
      return "Wersja";
    },
    get$compress() {
      return "Skompresuj";
    },
    get$boldText() {
      return "Pogrubienie";
    },
    get$italicText() {
      return "Kursywa";
    },
    get$strikeThrough() {
      return "Przekre\u015blenie";
    },
    get$pleaseFillOut() {
      return "Prosz\u0119 wype\u0142ni\u0107";
    },
    get$invalidUrl() {
      return "Niepoprawny adres URL";
    },
    get$addLink() {
      return "Dodaj link";
    },
    get$unableToJoinChat() {
      return "Nie uda\u0142o si\u0119 do\u0142\u0105czy\u0107 do czatu. Mo\u017ce druga strona zako\u0144czy\u0142a ju\u017c rozmow\u0119?";
    },
    get$previous() {
      return "Poprzedni";
    },
    get$otherPartyNotLoggedIn() {
      return "Druga strona nie jest obecnie zalogowana i dlatego nie mo\u017ce odbiera\u0107 wiadomo\u015bci!";
    },
    get$open(_) {
      return "Otw\xf3rz";
    },
    get$waitingForServer() {
      return "Oczekiwanie na serwer...";
    },
    get$newChatRequest() {
      return "\ud83d\udce9 Nowa pro\u015bba o czat";
    },
    get$contentNotificationSettings() {
      return "Ustawienia powiadomie\u0144 o tre\u015bci";
    },
    get$generalNotificationSettings() {
      return "Og\xf3lne ustawienia powiadomie\u0144";
    },
    get$roomNotificationSettings() {
      return "Ustawienia powiadomie\u0144 w pokoju";
    },
    get$userSpecificNotificationSettings() {
      return "Ustawienia powiadomie\u0144 dla u\u017cytkownika";
    },
    get$otherNotificationSettings() {
      return "Inne ustawienia powiadomie\u0144";
    },
    get$notificationRuleContainsUserName() {
      return "W\u0142\u0105cz dla wiadomo\u015bci z nazw\u0105 u\u017cytkownika";
    },
    get$notificationRuleContainsUserNameDescription() {
      return "W\u0142\u0105cza powiadomienia kiedy wiadomo\u015b\u0107 zawiera Twoj\u0105 nazw\u0119 u\u017cytkownika.";
    },
    get$notificationRuleMaster() {
      return "Wy\u0142\u0105cz wszystkie powiadomienia";
    },
    get$notificationRuleMasterDescription() {
      return "Zast\u0119puje inne regu\u0142y i wy\u0142\u0105cza wszystkie powiadomienia.";
    },
    get$notificationRuleSuppressNotices() {
      return "Wy\u0142\u0105cz dla automatycznych wiadomo\u015bci";
    },
    get$notificationRuleSuppressNoticesDescription() {
      return "Wy\u0142\u0105cza powiadomienia z automatycznych klient\xf3w, takich jak boty.";
    },
    get$notificationRuleInviteForMe() {
      return "W\u0142\u0105cz dla zaprosze\u0144";
    },
    get$notificationRuleInviteForMeDescription() {
      return "W\u0142\u0105cza powiadomienia o zaproszeniach do pokoju.";
    },
    get$notificationRuleMemberEvent() {
      return "Wy\u0142\u0105cz dla zmian cz\u0142onkostwa";
    },
    get$notificationRuleMemberEventDescription() {
      return "Wy\u0142\u0105cza powiadomienia o zmianach cz\u0142onkostwa w pokoju.";
    },
    get$notificationRuleIsUserMention() {
      return "W\u0142\u0105cz dla wzmianek";
    },
    get$notificationRuleIsUserMentionDescription() {
      return "W\u0142\u0105cza powiadomienia o byciu wzmiankowanym w wiadomo\u015bci.";
    },
    get$notificationRuleContainsDisplayName() {
      return "W\u0142\u0105cz dla wiadomo\u015bci z nazw\u0105 wy\u015bwietlan\u0105";
    },
    get$notificationRuleContainsDisplayNameDescription() {
      return "W\u0142\u0105cza powiadomienia o wiadomo\u015bciach zawieraj\u0105cych Twoj\u0105 nazw\u0119 wy\u015bwietlan\u0105.";
    },
    get$notificationRuleIsRoomMention() {
      return "W\u0142\u0105cz dla wzmianek pokoju";
    },
    get$notificationRuleIsRoomMentionDescription() {
      return "W\u0142\u0105cza powiadomienia o wzmiankowaniu ca\u0142ego pokoju.";
    },
    get$notificationRuleRoomnotif() {
      return "W\u0142\u0105cz dla powiadomie\u0144 w pokoju";
    },
    get$notificationRuleRoomnotifDescription() {
      return "W\u0142\u0105cza powiadomienia o wiadomo\u015bciach zawieraj\u0105cych \u201e@room\u201d.";
    },
    get$notificationRuleTombstone() {
      return "W\u0142\u0105cz dla \u201enagrobk\xf3w\u201d";
    },
    get$notificationRuleTombstoneDescription() {
      return "W\u0142\u0105cza powiadomienia o komunikatach dezaktywacji pokoj\xf3w.";
    },
    get$notificationRuleReaction() {
      return "Wy\u0142\u0105cz dla reakcji";
    },
    get$notificationRuleReactionDescription() {
      return "Wy\u0142\u0105cza powiadomienia o reakcjach.";
    },
    get$notificationRuleRoomServerAcl() {
      return "Wy\u0142\u0105cz dla list kontroli dost\u0119pu serwera";
    },
    get$notificationRuleRoomServerAclDescription() {
      return "Wy\u0142\u0105cza powiadomienia dla list kontroli dost\u0119pu (ACL) serwera.";
    },
    get$notificationRuleSuppressEdits() {
      return "Wy\u0142\u0105cz dla edycji";
    },
    get$notificationRuleSuppressEditsDescription() {
      return "Wy\u0142\u0105cza powiadomienia o edycjach wiadomo\u015bci.";
    },
    get$notificationRuleCall() {
      return "W\u0142\u0105cz dla po\u0142\u0105cze\u0144";
    },
    get$notificationRuleCallDescription() {
      return "W\u0142\u0105cza powiadomienia o przychodz\u0105cych po\u0142\u0105czeniach.";
    },
    get$notificationRuleEncryptedRoomOneToOne() {
      return "W\u0142\u0105cz dla szyfrowanych pokoj\xf3w \u201ejeden na jeden\u201d";
    },
    get$notificationRuleEncryptedRoomOneToOneDescription() {
      return "W\u0142\u0105cza powiadomienia o wiadomo\u015bciach w szyfrowanych pokojach \u201ejeden na jeden\u201d (one-to-one).";
    },
    get$notificationRuleRoomOneToOne() {
      return "W\u0142\u0105cz dla pokoj\xf3w \u201ejeden na jeden\u201d";
    },
    get$notificationRuleRoomOneToOneDescription() {
      return "W\u0142\u0105cza powiadomienia o wiadomo\u015bciach w pokojach \u201ejeden na jeden\u201d (one-to-one).";
    },
    get$notificationRuleMessage() {
      return "W\u0142\u0105cz dla wiadomo\u015bci";
    },
    get$notificationRuleMessageDescription() {
      return "W\u0142\u0105cza powiadomienia o og\xf3lnych wiadomo\u015bciach.";
    },
    get$notificationRuleEncrypted() {
      return "W\u0142\u0105cz dla zaszyfrowanych pokoj\xf3w";
    },
    get$notificationRuleEncryptedDescription() {
      return "W\u0142\u0105cza powiadomienia o wiadomo\u015bciach w zaszyfrowanych pokojach.";
    },
    get$notificationRuleJitsi() {
      return "W\u0142\u0105cz dla Jitsi";
    },
    get$notificationRuleJitsiDescription() {
      return "W\u0142\u0105cza powiadomienia o komunikatach wid\u017cet\xf3w Jitsi.";
    },
    get$notificationRuleServerAcl() {
      return "Wy\u0142\u0105cz dla komunikat\xf3w o listach kontroli dost\u0119pu serwera";
    },
    get$notificationRuleServerAclDescription() {
      return "Wy\u0142\u0105cza powiadomienia o komunikatach o listach kontroli dost\u0119pu (ACL) serwera.";
    },
    unknownPushRule$1(rule) {
      return "Nieznana regu\u0142a: '" + rule + "'";
    },
    sentVoiceMessage$2(sender, duration) {
      return "\ud83c\udf99\ufe0f " + duration + " - " + sender;
    },
    get$deletePushRuleCanNotBeUndone() {
      return "Je\u015bli skasujesz to ustawienie powiadomie\u0144, nie b\u0119dzie si\u0119 da\u0142o tego cofn\u0105\u0107.";
    },
    get$more() {
      return "Wi\u0119cej";
    },
    get$shareKeysWith() {
      return "Udost\u0119pnij klucze...";
    },
    get$shareKeysWithDescription() {
      return "Kt\xf3re urz\u0105dzenia powinny by\u0107 zaufane, aby mog\u0142y odczytywa\u0107 Twoje wiadomo\u015bci w zaszyfrowanych czatach?";
    },
    get$allDevices() {
      return "Wszystkie urz\u0105dzenia";
    },
    get$crossVerifiedDevicesIfEnabled() {
      return "Urz\u0105dzenia zweryfikowane krzy\u017cowo, je\u015bli w\u0142\u0105czone";
    },
    get$crossVerifiedDevices() {
      return "Urz\u0105dzenia zweryfikowane krzy\u017cowo";
    },
    get$verifiedDevicesOnly() {
      return "Tylko zweryfikowane urz\u0105dzenia";
    },
    get$optionalMessage() {
      return "(Opcjonalna) wiadomo\u015b\u0107...";
    },
    get$notSupportedOnThisDevice() {
      return "Niewspierane na tym urz\u0105dzeniu";
    },
    get$enterNewChat() {
      return "Do\u0142\u0105cz do nowego czatu";
    },
    get$approve() {
      return "Zaakceptuj";
    },
    get$commandHint_logout() {
      return "Logout your current device";
    },
    get$commandHint_logoutall() {
      return "Logout all active devices";
    },
    get$customReaction() {
      return "Custom reaction";
    },
    writeAMessageLangCodes$2(l1, l2) {
      return "Type in " + l1 + " or " + l2 + "...";
    },
    get$holdForInfo() {
      return "Click and hold for word info.";
    },
    get$greenFeedback() {
      return "That's what I would put!";
    },
    get$yellowFeedback() {
      return "Hm, you can try that and see if it works! To use this word, just click it again.";
    },
    get$redFeedback() {
      return "I don't think that's right...";
    },
    get$itInstructionsTitle() {
      return "I can help you translate!";
    },
    get$itInstructionsBody() {
      return "You can click and hold choices for word info.";
    },
    get$gaTooltip() {
      return "L2 use with grammar assistance";
    },
    get$taTooltip() {
      return "L2 use with translation assistance";
    },
    get$interactiveTranslatorSliderHeader() {
      return "Interactive Translator";
    },
    get$interactiveGrammarSliderHeader() {
      return "Interactive Grammar Checker";
    },
    get$waTooltip() {
      return "L2 use without assistance";
    },
    get$noIdenticalLanguages() {
      return "Please choose different base and target languages";
    },
    get$joinWithClassCode() {
      return "Join course";
    },
    get$joinWithClassCodeHint() {
      return "Enter invite code";
    },
    get$languageLevelPreA1() {
      return "True Beginner (Pre A1)";
    },
    get$languageLevelA1() {
      return "Beginner (A1)";
    },
    get$languageLevelA2() {
      return "Elementary (A2)";
    },
    get$languageLevelB1() {
      return "Intermediate (B1)";
    },
    get$languageLevelB2() {
      return "Upper Intermediate (B2)";
    },
    get$languageLevelC1() {
      return "Advanced (C1)";
    },
    get$languageLevelC2() {
      return "Mastery (C2)";
    },
    get$changeTheNameOfTheClass() {
      return "Change the name";
    },
    get$changeTheNameOfTheChat() {
      return "Change the name of the chat";
    },
    get$sorryNoResults() {
      return "Sorry, no results.";
    },
    get$ignoreInThisText() {
      return "Ignore";
    },
    needsItMessage$1(targetLanguage) {
      return "Wait, that's not " + targetLanguage + "! Do you need help translating?";
    },
    get$countryInformation() {
      return "My country";
    },
    get$targetLanguage() {
      return "Target Language";
    },
    get$updateLanguage() {
      return "My languages";
    },
    get$whatLanguageYouWantToLearn() {
      return "What language do you want to learn?";
    },
    get$whatIsYourBaseLanguage() {
      return "What is your base language?";
    },
    get$saveChanges() {
      return "Save changes";
    },
    get$publicProfileTitle() {
      return "Allow my profile to be found in search";
    },
    get$publicProfileDesc() {
      return "By turning on, you enable other users to find your profile in the global search bar and send requests to chat. At this point, you can choose to accept or deny the request.";
    },
    get$errorDisableIT() {
      return "Translation assistance is turned off.";
    },
    get$errorDisableIGC() {
      return "Grammar assistance is turned off.";
    },
    get$errorDisableLanguageAssistance() {
      return "Translation assistance and grammar assistance are turned off.";
    },
    get$errorDisableITUserDesc() {
      return "Click here to update translation assistance settings";
    },
    get$errorDisableIGCUserDesc() {
      return "Click here to update grammar assistance settings";
    },
    get$errorDisableLanguageAssistanceUserDesc() {
      return "Click here to update translation assistance and grammar assistance settings";
    },
    get$errorDisableITClassDesc() {
      return "Translation assistance is turned off for the course that this chat is in.";
    },
    get$errorDisableIGCClassDesc() {
      return "Grammar assistance is turned off for the course that this chat is in.";
    },
    get$error405Title() {
      return "Languages not set";
    },
    get$error405Desc() {
      return "Please set your languages in Main Menu > Learning Settings.";
    },
    get$termsAndConditions() {
      return "Terms and Conditions";
    },
    get$andCertifyIAmAtLeast13YearsOfAge() {
      return " and certify I am at least 16 years of age.";
    },
    get$error502504Title() {
      return "Wow, there are a lot of students online!";
    },
    get$error502504Desc() {
      return "Translation and grammar tools may be slow or unavailable while the Pangea bots catch up.";
    },
    get$error404Title() {
      return "Translation error!";
    },
    get$error404Desc() {
      return "Pangea Bot isn't sure how to translate that...";
    },
    get$errorPleaseRefresh() {
      return "We're looking into it! Please reload and try again.";
    },
    get$connectedToStaging() {
      return "Connected to Staging";
    },
    get$learningSettings() {
      return "Learning settings";
    },
    get$participants() {
      return "Participants";
    },
    get$clickMessageTitle() {
      return "Need help?";
    },
    get$clickMessageBody() {
      return "Click a message for language tools like translation, play back and more!";
    },
    get$allDone() {
      return "All done!";
    },
    get$vocab() {
      return "Vocab";
    },
    get$subscribe(_) {
      return "Subscribe";
    },
    get$getAccess() {
      return "Subscribe now!";
    },
    get$subscriptionDesc() {
      return "Messaging is free! Subscribe to unlock interactive translation, grammar checking and learning analytics.";
    },
    get$subscriptionManagement() {
      return "Subscription Management";
    },
    get$currentSubscription() {
      return "Current Subscription";
    },
    get$cancelSubscription() {
      return "Cancel your subscription";
    },
    get$selectYourPlan() {
      return "Select Your Plan";
    },
    get$subsciptionPlatformTooltip() {
      return "Please login to your original device to manage your subscription plan";
    },
    get$subscriptionManagementUnavailable() {
      return "Subscription management not available";
    },
    get$paymentMethod() {
      return "Payment Method";
    },
    get$paymentHistory() {
      return "Payment History";
    },
    get$emptyChatDownloadWarning() {
      return "Cannot download empty chat";
    },
    get$toggleImmersionMode() {
      return "Immersion Mode";
    },
    get$toggleImmersionModeDesc() {
      return "When enabled, all messages are displayed in your target language. This setting is most useful in language exchanges.";
    },
    get$itToggleDescription() {
      return "This language learning tool will identify words in your base language and help you translate them to your target language. Though rare, the AI can make translation errors.";
    },
    get$igcToggleDescription() {
      return "This language learning tool will identify common spelling, grammar and punctuation errors in your message and suggest corrections. Though rare, the AI can make correction errors.";
    },
    get$originalMessage() {
      return "Original Message";
    },
    get$sentMessage() {
      return "Sent Message";
    },
    get$useType() {
      return "Use Type";
    },
    get$notAvailable() {
      return "Not Available";
    },
    get$taAndGaTooltip() {
      return "L2 use with translation assistance and grammar assistance";
    },
    get$definitionsToolName() {
      return "Word Definitions";
    },
    get$definitionsToolDescription() {
      return "When enabled, words underlined in blue can be clicked for definitions. Click messages to access definitions.";
    },
    get$welcomeBack() {
      return "Welcome back! If you were part of the 2023-2024 pilot, please contact us for your special pilot subscription. If you are a teacher who has (or whose institution has) purchased licenses for your class, contact us for your teacher subscription.";
    },
    get$downloadTxtFile() {
      return "Download Text File";
    },
    get$downloadCSVFile() {
      return "Download CSV File";
    },
    get$promotionalSubscriptionDesc() {
      return "You currently have a lifetime promotional subscription. Message support@pangea.chat for help changing your subscription.";
    },
    originalSubscriptionPlatform$1(purchasePlatform) {
      return "Subscription purchased through " + purchasePlatform;
    },
    get$oneWeekTrial() {
      return "One Week Trial";
    },
    get$downloadXLSXFile() {
      return "Download Excel File";
    },
    get$unkDisplayName() {
      return "Unknown";
    },
    get$wwCountryDisplayName() {
      return "World Wide";
    },
    get$afCountryDisplayName() {
      return "Afghanistan";
    },
    get$axCountryDisplayName() {
      return "Aland Islands";
    },
    get$alCountryDisplayName() {
      return "Albania";
    },
    get$dzCountryDisplayName() {
      return "Algeria";
    },
    get$asCountryDisplayName() {
      return "American Samoa";
    },
    get$adCountryDisplayName() {
      return "Andorra";
    },
    get$aoCountryDisplayName() {
      return "Angola";
    },
    get$aiCountryDisplayName() {
      return "Anguilla";
    },
    get$agCountryDisplayName() {
      return "Antigua and Barbuda";
    },
    get$arCountryDisplayName() {
      return "Argentina";
    },
    get$amCountryDisplayName() {
      return "Armenia";
    },
    get$awCountryDisplayName() {
      return "Aruba";
    },
    get$acCountryDisplayName() {
      return "Ascension Island";
    },
    get$auCountryDisplayName() {
      return "Australia";
    },
    get$atCountryDisplayName() {
      return "Austria";
    },
    get$azCountryDisplayName() {
      return "Azerbaijan";
    },
    get$bsCountryDisplayName() {
      return "Bahamas";
    },
    get$bhCountryDisplayName() {
      return "Bahrain";
    },
    get$bdCountryDisplayName() {
      return "Bangladesh";
    },
    get$bbCountryDisplayName() {
      return "Barbados";
    },
    get$byCountryDisplayName() {
      return "Belarus";
    },
    get$beCountryDisplayName() {
      return "Belgium";
    },
    get$bzCountryDisplayName() {
      return "Belize";
    },
    get$bjCountryDisplayName() {
      return "Benin";
    },
    get$bmCountryDisplayName() {
      return "Bermuda";
    },
    get$btCountryDisplayName() {
      return "Bhutan";
    },
    get$boCountryDisplayName() {
      return "Bolivia";
    },
    get$baCountryDisplayName() {
      return "Bosnia and Herzegovina";
    },
    get$bwCountryDisplayName() {
      return "Botswana";
    },
    get$brCountryDisplayName() {
      return "Brazil";
    },
    get$ioCountryDisplayName() {
      return "British Indian Ocean Territory";
    },
    get$vgCountryDisplayName() {
      return "British Virgin Islands";
    },
    get$bnCountryDisplayName() {
      return "Brunei";
    },
    get$bgCountryDisplayName() {
      return "Bulgaria";
    },
    get$bfCountryDisplayName() {
      return "Burkina Faso";
    },
    get$biCountryDisplayName() {
      return "Burundi";
    },
    get$khCountryDisplayName() {
      return "Cambodia";
    },
    get$cmCountryDisplayName() {
      return "Cameroon";
    },
    get$caCountryDisplayName() {
      return "Canada";
    },
    get$cvCountryDisplayName() {
      return "Cape Verde";
    },
    get$bqCountryDisplayName() {
      return "Caribbean Netherlands";
    },
    get$kyCountryDisplayName() {
      return "Cayman Islands";
    },
    get$cfCountryDisplayName() {
      return "Central African Republic";
    },
    get$tdCountryDisplayName() {
      return "Chad";
    },
    get$clCountryDisplayName() {
      return "Chile";
    },
    get$cnCountryDisplayName() {
      return "China";
    },
    get$cxCountryDisplayName() {
      return "Christmas Island";
    },
    get$ccCountryDisplayName() {
      return "Cocos [Keeling] Islands";
    },
    get$coCountryDisplayName() {
      return "Colombia";
    },
    get$kmCountryDisplayName() {
      return "Comoros";
    },
    get$cdCountryDisplayName() {
      return "Democratic Republic Congo";
    },
    get$cgCountryDisplayName() {
      return "Republic of Congo";
    },
    get$ckCountryDisplayName() {
      return "Cook Islands";
    },
    get$crCountryDisplayName() {
      return "Costa Rica";
    },
    get$ciCountryDisplayName() {
      return "C\xf4te d'Ivoire";
    },
    get$hrCountryDisplayName() {
      return "Croatia";
    },
    get$cuCountryDisplayName() {
      return "Cuba";
    },
    get$cwCountryDisplayName() {
      return "Cura\xe7ao";
    },
    get$cyCountryDisplayName() {
      return "Cyprus";
    },
    get$czCountryDisplayName() {
      return "Czech Republic";
    },
    get$dkCountryDisplayName() {
      return "Denmark";
    },
    get$djCountryDisplayName() {
      return "Djibouti";
    },
    get$dmCountryDisplayName() {
      return "Dominica";
    },
    get$doCountryDisplayName() {
      return "Dominican Republic";
    },
    get$tlCountryDisplayName() {
      return "East Timor";
    },
    get$ecCountryDisplayName() {
      return "Ecuador";
    },
    get$egCountryDisplayName() {
      return "Egypt";
    },
    get$svCountryDisplayName() {
      return "El Salvador";
    },
    get$gqCountryDisplayName() {
      return "Equatorial Guinea";
    },
    get$erCountryDisplayName() {
      return "Eritrea";
    },
    get$eeCountryDisplayName() {
      return "Estonia";
    },
    get$szCountryDisplayName() {
      return "Eswatini";
    },
    get$etCountryDisplayName() {
      return "Ethiopia";
    },
    get$fkCountryDisplayName() {
      return "Falkland Islands";
    },
    get$foCountryDisplayName() {
      return "Faroe Islands";
    },
    get$fjCountryDisplayName() {
      return "Fiji";
    },
    get$fiCountryDisplayName() {
      return "Finland";
    },
    get$frCountryDisplayName() {
      return "France";
    },
    get$gfCountryDisplayName() {
      return "French Guiana";
    },
    get$pfCountryDisplayName() {
      return "French Polynesia";
    },
    get$gaCountryDisplayName() {
      return "Gabon";
    },
    get$gmCountryDisplayName() {
      return "Gambia";
    },
    get$geCountryDisplayName() {
      return "Georgia";
    },
    get$deCountryDisplayName() {
      return "Germany";
    },
    get$ghCountryDisplayName() {
      return "Ghana";
    },
    get$giCountryDisplayName() {
      return "Gibraltar";
    },
    get$grCountryDisplayName() {
      return "Greece";
    },
    get$glCountryDisplayName() {
      return "Greenland";
    },
    get$gdCountryDisplayName() {
      return "Grenada";
    },
    get$gpCountryDisplayName() {
      return "Guadeloupe";
    },
    get$guCountryDisplayName() {
      return "Guam";
    },
    get$gtCountryDisplayName() {
      return "Guatemala";
    },
    get$ggCountryDisplayName() {
      return "Guernsey";
    },
    get$gnCountryDisplayName() {
      return "Guinea Conakry";
    },
    get$gwCountryDisplayName() {
      return "Guinea-Bissau";
    },
    get$gyCountryDisplayName() {
      return "Guyana";
    },
    get$htCountryDisplayName() {
      return "Haiti";
    },
    get$hmCountryDisplayName() {
      return "Heard Island and McDonald Islands";
    },
    get$hnCountryDisplayName() {
      return "Honduras";
    },
    get$hkCountryDisplayName() {
      return "Hong Kong";
    },
    get$huCountryDisplayName() {
      return "Hungary";
    },
    get$isCountryDisplayName() {
      return "Iceland";
    },
    get$inCountryDisplayName() {
      return "India";
    },
    get$idCountryDisplayName() {
      return "Indonesia";
    },
    get$irCountryDisplayName() {
      return "Iran";
    },
    get$iqCountryDisplayName() {
      return "Iraq";
    },
    get$ieCountryDisplayName() {
      return "Ireland";
    },
    get$imCountryDisplayName() {
      return "Isle of Man";
    },
    get$ilCountryDisplayName() {
      return "Israel";
    },
    get$itCountryDisplayName() {
      return "Italy";
    },
    get$jmCountryDisplayName() {
      return "Jamaica";
    },
    get$jpCountryDisplayName() {
      return "Japan";
    },
    get$jeCountryDisplayName() {
      return "Jersey";
    },
    get$joCountryDisplayName() {
      return "Jordan";
    },
    get$kzCountryDisplayName() {
      return "Kazakhstan";
    },
    get$keCountryDisplayName() {
      return "Kenya";
    },
    get$kiCountryDisplayName() {
      return "Kiribati";
    },
    get$xkCountryDisplayName() {
      return "Kosovo";
    },
    get$kwCountryDisplayName() {
      return "Kuwait";
    },
    get$kgCountryDisplayName() {
      return "Kyrgyzstan";
    },
    get$laCountryDisplayName() {
      return "Laos";
    },
    get$lvCountryDisplayName() {
      return "Latvia";
    },
    get$lbCountryDisplayName() {
      return "Lebanon";
    },
    get$lsCountryDisplayName() {
      return "Lesotho";
    },
    get$lrCountryDisplayName() {
      return "Liberia";
    },
    get$lyCountryDisplayName() {
      return "Libya";
    },
    get$liCountryDisplayName() {
      return "Liechtenstein";
    },
    get$ltCountryDisplayName() {
      return "Lithuania";
    },
    get$luCountryDisplayName() {
      return "Luxembourg";
    },
    get$moCountryDisplayName() {
      return "Macau";
    },
    get$mkCountryDisplayName() {
      return "Macedonia";
    },
    get$mgCountryDisplayName() {
      return "Madagascar";
    },
    get$mwCountryDisplayName() {
      return "Malawi";
    },
    get$myCountryDisplayName() {
      return "Malaysia";
    },
    get$mvCountryDisplayName() {
      return "Maldives";
    },
    get$mlCountryDisplayName() {
      return "Mali";
    },
    get$mtCountryDisplayName() {
      return "Malta";
    },
    get$mhCountryDisplayName() {
      return "Marshall Islands";
    },
    get$mqCountryDisplayName() {
      return "Martinique";
    },
    get$mrCountryDisplayName() {
      return "Mauritania";
    },
    get$muCountryDisplayName() {
      return "Mauritius";
    },
    get$ytCountryDisplayName() {
      return "Mayotte";
    },
    get$mxCountryDisplayName() {
      return "Mexico";
    },
    get$fmCountryDisplayName() {
      return "Micronesia";
    },
    get$mdCountryDisplayName() {
      return "Moldova";
    },
    get$mcCountryDisplayName() {
      return "Monaco";
    },
    get$mnCountryDisplayName() {
      return "Mongolia";
    },
    get$meCountryDisplayName() {
      return "Montenegro";
    },
    get$msCountryDisplayName() {
      return "Montserrat";
    },
    get$maCountryDisplayName() {
      return "Morocco";
    },
    get$mzCountryDisplayName() {
      return "Mozambique";
    },
    get$mmCountryDisplayName() {
      return "Myanmar (Burma)";
    },
    get$naCountryDisplayName() {
      return "Namibia";
    },
    get$nrCountryDisplayName() {
      return "Nauru";
    },
    get$npCountryDisplayName() {
      return "Nepal";
    },
    get$nlCountryDisplayName() {
      return "Netherlands";
    },
    get$ncCountryDisplayName() {
      return "New Caledonia";
    },
    get$nzCountryDisplayName() {
      return "New Zealand";
    },
    get$niCountryDisplayName() {
      return "Nicaragua";
    },
    get$neCountryDisplayName() {
      return "Niger";
    },
    get$ngCountryDisplayName() {
      return "Nigeria";
    },
    get$nuCountryDisplayName() {
      return "Niue";
    },
    get$nfCountryDisplayName() {
      return "Norfolk Island";
    },
    get$kpCountryDisplayName() {
      return "North Korea";
    },
    get$mpCountryDisplayName() {
      return "Northern Mariana Islands";
    },
    get$noCountryDisplayName() {
      return "Norway";
    },
    get$omCountryDisplayName() {
      return "Oman";
    },
    get$pkCountryDisplayName() {
      return "Pakistan";
    },
    get$pwCountryDisplayName() {
      return "Palau";
    },
    get$psCountryDisplayName() {
      return "Palestinian Territories";
    },
    get$paCountryDisplayName() {
      return "Panama";
    },
    get$pgCountryDisplayName() {
      return "Papua New Guinea";
    },
    get$pyCountryDisplayName() {
      return "Paraguay";
    },
    get$peCountryDisplayName() {
      return "Peru";
    },
    get$phCountryDisplayName() {
      return "Philippines";
    },
    get$plCountryDisplayName() {
      return "Poland";
    },
    get$ptCountryDisplayName() {
      return "Portugal";
    },
    get$prCountryDisplayName() {
      return "Puerto Rico";
    },
    get$qaCountryDisplayName() {
      return "Qatar";
    },
    get$reCountryDisplayName() {
      return "R\xe9union";
    },
    get$roCountryDisplayName() {
      return "Romania";
    },
    get$ruCountryDisplayName() {
      return "Russia";
    },
    get$rwCountryDisplayName() {
      return "Rwanda";
    },
    get$blCountryDisplayName() {
      return "Saint Barth\xe9lemy";
    },
    get$shCountryDisplayName() {
      return "Saint Helena";
    },
    get$knCountryDisplayName() {
      return "St. Kitts";
    },
    get$lcCountryDisplayName() {
      return "St. Lucia";
    },
    get$mfCountryDisplayName() {
      return "Saint Martin";
    },
    get$pmCountryDisplayName() {
      return "Saint Pierre and Miquelon";
    },
    get$vcCountryDisplayName() {
      return "St. Vincent";
    },
    get$wsCountryDisplayName() {
      return "Samoa";
    },
    get$smCountryDisplayName() {
      return "San Marino";
    },
    get$stCountryDisplayName() {
      return "S\xe3o Tom\xe9 and Pr\xedncipe";
    },
    get$saCountryDisplayName() {
      return "Saudi Arabia";
    },
    get$snCountryDisplayName() {
      return "Senegal";
    },
    get$rsCountryDisplayName() {
      return "Serbia";
    },
    get$scCountryDisplayName() {
      return "Seychelles";
    },
    get$slCountryDisplayName() {
      return "Sierra Leone";
    },
    get$sgCountryDisplayName() {
      return "Singapore";
    },
    get$sxCountryDisplayName() {
      return "Sint Maarten";
    },
    get$skCountryDisplayName() {
      return "Slovakia";
    },
    get$siCountryDisplayName() {
      return "Slovenia";
    },
    get$sbCountryDisplayName() {
      return "Solomon Islands";
    },
    get$soCountryDisplayName() {
      return "Somalia";
    },
    get$zaCountryDisplayName() {
      return "South Africa";
    },
    get$gsCountryDisplayName() {
      return "South Georgia and the South Sandwich Islands";
    },
    get$krCountryDisplayName() {
      return "South Korea";
    },
    get$ssCountryDisplayName() {
      return "South Sudan";
    },
    get$esCountryDisplayName() {
      return "Spain";
    },
    get$lkCountryDisplayName() {
      return "Sri Lanka";
    },
    get$sdCountryDisplayName() {
      return "Sudan";
    },
    get$srCountryDisplayName() {
      return "Suriname";
    },
    get$sjCountryDisplayName() {
      return "Svalbard and Jan Mayen";
    },
    get$seCountryDisplayName() {
      return "Sweden";
    },
    get$chCountryDisplayName() {
      return "Switzerland";
    },
    get$syCountryDisplayName() {
      return "Syria";
    },
    get$twCountryDisplayName() {
      return "Taiwan";
    },
    get$tjCountryDisplayName() {
      return "Tajikistan";
    },
    get$tzCountryDisplayName() {
      return "Tanzania";
    },
    get$thCountryDisplayName() {
      return "Thailand";
    },
    get$tgCountryDisplayName() {
      return "Togo";
    },
    get$tkCountryDisplayName() {
      return "Tokelau";
    },
    get$toCountryDisplayName() {
      return "Tonga";
    },
    get$ttCountryDisplayName() {
      return "Trinidad/Tobago";
    },
    get$tnCountryDisplayName() {
      return "Tunisia";
    },
    get$trCountryDisplayName() {
      return "Turkey";
    },
    get$tmCountryDisplayName() {
      return "Turkmenistan";
    },
    get$tcCountryDisplayName() {
      return "Turks and Caicos Islands";
    },
    get$tvCountryDisplayName() {
      return "Tuvalu";
    },
    get$viCountryDisplayName() {
      return "U.S. Virgin Islands";
    },
    get$ugCountryDisplayName() {
      return "Uganda";
    },
    get$uaCountryDisplayName() {
      return "Ukraine";
    },
    get$aeCountryDisplayName() {
      return "United Arab Emirates";
    },
    get$gbCountryDisplayName() {
      return "United Kingdom";
    },
    get$usCountryDisplayName() {
      return "United States";
    },
    get$uyCountryDisplayName() {
      return "Uruguay";
    },
    get$uzCountryDisplayName() {
      return "Uzbekistan";
    },
    get$vuCountryDisplayName() {
      return "Vanuatu";
    },
    get$vaCountryDisplayName() {
      return "Vatican City";
    },
    get$veCountryDisplayName() {
      return "Venezuela";
    },
    get$vnCountryDisplayName() {
      return "Vietnam";
    },
    get$wfCountryDisplayName() {
      return "Wallis and Futuna";
    },
    get$ehCountryDisplayName() {
      return "Western Sahara";
    },
    get$yeCountryDisplayName() {
      return "Yemen";
    },
    get$zmCountryDisplayName() {
      return "Zambia";
    },
    get$zwCountryDisplayName() {
      return "Zimbabwe";
    },
    get$pay() {
      return "Pay";
    },
    invitedToSpace$2(space, user) {
      return user + " has invited you to join a course: " + space + "! Do you wish to accept?";
    },
    get$youreInvited() {
      return "\ud83d\udce9 You're invited!";
    },
    invitedToChat$2($name, user) {
      return user + " has invited you to join a chat: " + $name + "! Do you wish to accept?";
    },
    get$monthlySubscription() {
      return "Monthly";
    },
    get$yearlySubscription() {
      return "Yearly";
    },
    get$defaultSubscription() {
      return "Pangea Chat Subscription";
    },
    get$freeTrial() {
      return "Free Trial";
    },
    get$noDataFound() {
      return "No data found";
    },
    get$blurMeansTranslateTitle() {
      return "Why is the message blurred?";
    },
    get$blurMeansTranslateBody() {
      return "While Immersion Mode is on, messages that are sent in your base language will be blurred while Pangea Bot translates them to your target language. Immersion Mode can be toggled in individual and course settings.";
    },
    get$bestCorrectionFeedback() {
      return "That's correct!";
    },
    get$distractorFeedback() {
      return "That's not quite right.";
    },
    get$bestAnswerFeedback() {
      return "That's correct!";
    },
    get$definitionDefaultPrompt() {
      return "What does this word mean?";
    },
    get$practiceDefaultPrompt() {
      return "What is the best answer?";
    },
    get$correctionDefaultPrompt() {
      return "What is the best replacement?";
    },
    get$reportToTeacher() {
      return "Who do you want to report this message to?";
    },
    reportMessageTitle$3(reportingUserId, reportedUserId, roomName) {
      return reportingUserId + " has reported a message from " + reportedUserId + " in the chat " + roomName;
    },
    reportMessageBody$2(reportedMessage, reason) {
      return "Message: " + reportedMessage + "\nReason: " + reason;
    },
    get$noTeachersFound() {
      return "No teachers found to report to";
    },
    trialExpiration$1(expiration) {
      return "Your free trial expires on " + expiration;
    },
    get$freeTrialDesc() {
      return "New users recieve a one week free trial of Pangea Chat";
    },
    get$activateTrial() {
      return "Free 7-Day Trial";
    },
    get$successfullySubscribed() {
      return "You have successfully subscribed!";
    },
    get$clickToManageSubscription() {
      return "Click here to manage your subscription.";
    },
    get$signUp() {
      return "Sign up";
    },
    pleaseChooseAtLeastChars$1(min) {
      return "Please choose at least " + min + " characters.";
    },
    get$pleaseEnterValidEmail() {
      return "Please enter a valid email address.";
    },
    get$pleaseChooseAUsername() {
      return "Please choose a username";
    },
    get$listen() {
      return "Listen";
    },
    get$trialPeriodExpired() {
      return "Your trial period has expired";
    },
    get$subscribedToUnlockTools() {
      return "Subscribe to unlock interactive translation and grammar checking, audio playback, personalized practice activities, and learning analytics!";
    },
    get$translationTooltip() {
      return "Translate";
    },
    get$speechToTextTooltip() {
      return "Transcript";
    },
    get$kickBotWarning() {
      return "Kicking Pangea Bot will remove the conversation bot from this chat.";
    },
    get$refresh(_) {
      return "Refresh";
    },
    get$botConfig() {
      return "Bot and activity settings";
    },
    get$botConfigNoPermissionTitle() {
      return "No permission";
    },
    get$botConfigNoPermissionMessage() {
      return "Contact room admin to change bot configuration";
    },
    get$conversationBotStatus() {
      return "Invite bot";
    },
    get$updatePhoneOS() {
      return "You may need to update your device's OS version.";
    },
    get$autoIGCToolName() {
      return "Run Pangea writing assistance automatically";
    },
    get$autoIGCToolDescription() {
      return "Automatically run Pangea Chat grammar and translation writing assistance before sending my message.";
    },
    get$tooltipInstructionsTitle() {
      return "Not sure what that does?";
    },
    get$tooltipInstructionsBrowserBody() {
      return "Hover over items to view tooltips.";
    },
    get$chatCapacity() {
      return "Chat capacity";
    },
    get$roomFull() {
      return "This room is already at capacity.";
    },
    get$chatCapacityHasBeenChanged() {
      return "Chat capacity changed";
    },
    chatCapacitySetTooLow$1(count) {
      return "Chat capacity must be at least " + count + ".";
    },
    get$chatCapacityExplanation() {
      return "Chat capacity limits the number of members allowed in a chat.";
    },
    get$enterNumber() {
      return "Please enter a whole number value.";
    },
    get$buildTranslation() {
      return "Build your translation from the choices above";
    },
    get$practice() {
      return "Practice";
    },
    get$noLanguagesSet() {
      return "No languages set";
    },
    get$speechToTextBody() {
      return "For voice messages, you can see a transcript as well as the speaker's Words Per Minute score.";
    },
    get$versionNotFound() {
      return "Version Not Found";
    },
    get$fetchingVersion() {
      return "Fetching version...";
    },
    get$versionFetchError() {
      return "Error fetching version";
    },
    versionText$2(version, buildNumber) {
      return "Version: " + version + "+" + buildNumber;
    },
    get$l1TranslationBody() {
      return "Messages in your base language will not be translated.";
    },
    get$deleteSubscriptionWarningTitle() {
      return "You have an active subscription";
    },
    get$deleteSubscriptionWarningBody() {
      return "Deleting your account will not automatically cancel your subscription.";
    },
    get$manageSubscription() {
      return "Manage Subscription";
    },
    get$error520Title() {
      return "Please try again.";
    },
    get$error520Desc() {
      return "Sorry, we could not understand your message...";
    },
    get$level(_) {
      return "Level";
    },
    get$translationChoicesBody() {
      return "Click and hold an option for a hint.";
    },
    get$grammar() {
      return "Grammar";
    },
    get$contactHasBeenInvitedToTheChat() {
      return "Contact has been invited to the chat";
    },
    get$inviteChat() {
      return "\ud83d\udce8 Invite chat";
    },
    get$chatName() {
      return "Chat name";
    },
    get$clickTheWordAgainToDeselect() {
      return "Click the selected word to deselect it.";
    },
    get$l2SupportNa() {
      return "Not Available";
    },
    get$l2SupportAlpha() {
      return "Alpha";
    },
    get$l2SupportBeta() {
      return "Beta";
    },
    get$l2SupportFull() {
      return "Full";
    },
    get$missingVoiceTitle() {
      return "Missing voice";
    },
    get$voiceNotAvailable() {
      return "You don't have a voice installed for this language.";
    },
    get$playAudio() {
      return "Play";
    },
    get$stop(_) {
      return "Stop";
    },
    get$grammarCopyPOSsconj() {
      return "Subordinating Conjunction";
    },
    get$grammarCopyPOSnum() {
      return "Number";
    },
    get$grammarCopyPOSverb() {
      return "Verb";
    },
    get$grammarCopyPOSaffix() {
      return "Affix";
    },
    get$grammarCopyPOSpart() {
      return "Particle";
    },
    get$grammarCopyPOSadj() {
      return "Adjective";
    },
    get$grammarCopyPOScconj() {
      return "Coordinating Conjunction";
    },
    get$grammarCopyPOSpunct() {
      return "Punctuation";
    },
    get$grammarCopyPOSadv() {
      return "Adverb";
    },
    get$grammarCopyPOSaux() {
      return "Auxiliary";
    },
    get$grammarCopyPOSspace() {
      return "Space";
    },
    get$grammarCopyPOSsym() {
      return "Symbol";
    },
    get$grammarCopyPOSdet() {
      return "Determiner";
    },
    get$grammarCopyPOSpron() {
      return "Pronoun";
    },
    get$grammarCopyPOSadp() {
      return "Adposition";
    },
    get$grammarCopyPOSpropn() {
      return "Proper Noun";
    },
    get$grammarCopyPOSnoun() {
      return "Noun";
    },
    get$grammarCopyPOSintj() {
      return "Interjection";
    },
    get$grammarCopyPOSx() {
      return "Other";
    },
    get$grammarCopyGENDERfem() {
      return "Feminine";
    },
    get$grammarCopyPERSON2() {
      return "Second Person";
    },
    get$grammarCopyMOODimp() {
      return "Imperative";
    },
    get$grammarCopyPUNCTTYPEqest() {
      return "Question";
    },
    get$grammarCopyASPECTperf() {
      return "Perfect";
    },
    get$grammarCopyCASEaccnom() {
      return "Accusative, Nominative";
    },
    get$grammarCopyCASEobl() {
      return "Oblique";
    },
    get$grammarCopyVOICEact() {
      return "Active";
    },
    get$grammarCopyPUNCTTYPEbrck() {
      return "Bracket";
    },
    get$grammarCopyNOUNTYPEart() {
      return "Article";
    },
    get$grammarCopyNUMBERsing() {
      return "Singular";
    },
    get$grammarCopyGENDERmasc() {
      return "Masculine";
    },
    get$grammarCopyVERBTYPEmod() {
      return "Modal";
    },
    get$grammarCopyADVTYPEadverbial() {
      return "Adverbial";
    },
    get$grammarCopyTENSEperi() {
      return "Periphrastic";
    },
    get$grammarCopyNUMFORMdigit() {
      return "Digit";
    },
    get$grammarCopyNOUNTYPEnot_proper() {
      return "Not Proper";
    },
    get$grammarCopyNUMTYPEcard() {
      return "Cardinal";
    },
    get$grammarCopyNOUNTYPEprop() {
      return "Proper";
    },
    get$grammarCopyPUNCTTYPEdash() {
      return "Dash";
    },
    get$grammarCopyPUNCTTYPEyes() {
      return "Yes";
    },
    get$grammarCopyPUNCTTYPEsemi() {
      return "Semicolon";
    },
    get$grammarCopyPUNCTTYPEcomm() {
      return "Comma";
    },
    get$grammarCopyMOODcnd() {
      return "Conditional";
    },
    get$grammarCopyCASEacc() {
      return "Accusative";
    },
    get$grammarCopyPARTTYPEpart() {
      return "Partitive";
    },
    get$grammarCopyTENSEpast() {
      return "Past";
    },
    get$grammarCopyDEGREEsup() {
      return "Superlative";
    },
    get$grammarCopyPUNCTTYPEcolo() {
      return "Colon";
    },
    get$grammarCopyPERSON3() {
      return "Third Person";
    },
    get$grammarCopyNUMBERplur() {
      return "Plural";
    },
    get$grammarCopyPRONTYPEnpr() {
      return "Proper Noun";
    },
    get$grammarCopyPRONTYPEinterrogative() {
      return "Interrogative";
    },
    get$grammarCopyPOLITEinfm() {
      return "Informal";
    },
    get$grammarCopyADVTYPEtim() {
      return "Time";
    },
    get$grammarCopyPOLARITYneg() {
      return "Negative";
    },
    get$grammarCopyNUMTYPEtot() {
      return "Total";
    },
    get$grammarCopyADVTYPEadnomial() {
      return "Adnominal";
    },
    get$grammarCopyASPECTprog() {
      return "Progressive";
    },
    get$grammarCopyMOODsub() {
      return "Subjunctive";
    },
    get$grammarCopyVERBFORMcomplementive() {
      return "Complementive";
    },
    get$grammarCopyCASEnom() {
      return "Nominative";
    },
    get$grammarCopyTENSEfut() {
      return "Future";
    },
    get$grammarCopyCASEdat() {
      return "Dative";
    },
    get$grammarCopyTENSEpres() {
      return "Present";
    },
    get$grammarCopyGENDERneut() {
      return "Neuter";
    },
    get$grammarCopyPRONTYPErel() {
      return "Relative";
    },
    get$grammarCopyVERBFORMfinalEnding() {
      return "Final Ending";
    },
    get$grammarCopyPRONTYPEdem() {
      return "Demonstrative";
    },
    get$grammarCopyPREPCASEpre() {
      return "Prepositional";
    },
    get$grammarCopyVERBFORMfin() {
      return "Finite";
    },
    get$grammarCopyDEGREEpos() {
      return "Positive";
    },
    get$grammarCopyPUNCTTYPEquot() {
      return "Quotation";
    },
    get$grammarCopyVERBFORMger() {
      return "Gerund";
    },
    get$grammarCopyVOICEpass() {
      return "Passive";
    },
    get$grammarCopyCASEgen() {
      return "Genitive";
    },
    get$grammarCopyTENSEprs() {
      return "Present";
    },
    get$grammarCopyDEFINITEdef() {
      return "Definite";
    },
    get$grammarCopyNUMTYPEord() {
      return "Ordinal";
    },
    get$grammarCopyCASEins() {
      return "Instrumental";
    },
    get$grammarCopyVERBFORMinf() {
      return "Infinitive";
    },
    get$grammarCopyVERBFORMaux() {
      return "Auxiliary";
    },
    get$grammarCopyNUMFORMlong() {
      return "Long";
    },
    get$grammarCopyCASEloc() {
      return "Locative";
    },
    get$grammarCopyMOODind() {
      return "Indicative";
    },
    get$grammarCopyDEGREEcmp() {
      return "Comparative";
    },
    get$grammarCopyCASErelativeCase() {
      return "Relative";
    },
    get$grammarCopyPUNCTTYPEexcl() {
      return "Exclamative";
    },
    get$grammarCopyPERSON1() {
      return "First Person";
    },
    get$grammarCopyPUNCTSIDEini() {
      return "Initial";
    },
    get$grammarCopyGENDERperson() {
      return "Person";
    },
    get$grammarCopyFOREIGNyes() {
      return "Foreign";
    },
    get$grammarCopyVOICEvoice() {
      return "Voice";
    },
    get$grammarCopyVERBTYPEverbType() {
      return "Verb";
    },
    get$grammarCopyPOSSpass() {
      return "Possessive";
    },
    get$grammarCopyPREPCASEprepCase() {
      return "Prepositional";
    },
    get$grammarCopyNUMTYPEnumType() {
      return "Numeral";
    },
    get$grammarCopyNOUNTYPEnounType() {
      return "Noun";
    },
    get$grammarCopyREFLEXreflex() {
      return "Reflexive";
    },
    get$grammarCopyPRONTYPEpronType() {
      return "Pronoun";
    },
    get$grammarCopyPUNCTSIDEpunctSide() {
      return "Punctuation Side";
    },
    get$grammarCopyVERBFORMverbForm() {
      return "Verb";
    },
    get$grammarCopyGENDERgender() {
      return "Gender";
    },
    get$grammarCopyMOODmood() {
      return "Mood";
    },
    get$grammarCopyASPECTaspect() {
      return "Aspect";
    },
    get$grammarCopyPUNCTTYPEpunctType() {
      return "Punctuation";
    },
    get$grammarCopyTENSEtense() {
      return "Tense";
    },
    get$grammarCopyDEGREEdegree() {
      return "Degree";
    },
    get$grammarCopyPOLITEpolite() {
      return "Politeness";
    },
    get$grammarCopyADVTYPEadvType() {
      return "Adverb";
    },
    get$grammarCopyNUMFORMnumber() {
      return "Number";
    },
    get$grammarCopyCONJTYPEconjType() {
      return "Conjunction";
    },
    get$grammarCopyPOLARITYpolarity() {
      return "Polarity";
    },
    get$grammarCopyCASEcase() {
      return "Case";
    },
    get$grammarCopyDEFINITEdefinite() {
      return "Definiteness";
    },
    get$grammarCopyNUMFORMnumForm() {
      return "Numeral";
    },
    get$grammarCopyPRONTYPEadn() {
      return "Adnominal";
    },
    get$grammarCopyVOCvoc() {
      return "Vocative";
    },
    get$grammarCopyCMPLcmpl() {
      return "Complementizer";
    },
    get$grammarCopyADVadv() {
      return "Adverbial";
    },
    get$grammarCopyMOODjus() {
      return "Jussive";
    },
    get$grammarCopyGENDERcom() {
      return "Common";
    },
    get$grammarCopyREFLEXrflx() {
      return "Reflexive";
    },
    get$grammarCopyPARTTYPEpar() {
      return "Partitive";
    },
    get$grammarCopySPCspc() {
      return "Specific";
    },
    get$grammarCopyTENSEpqp() {
      return "Pluperfect";
    },
    get$grammarCopyREFLEXref() {
      return "Reflexive";
    },
    get$grammarCopyPUNCTTYPEnshrt() {
      return "Short";
    },
    get$grammarCopyNUMBERdual() {
      return "Dual";
    },
    get$grammarCopyNUMFORMlng() {
      return "Long";
    },
    get$grammarCopyVOICEmid() {
      return "Middle";
    },
    get$grammarCopyINTRELintRel() {
      return "Interrogative, Relative";
    },
    get$grammarCopyINTint() {
      return "Interrogative";
    },
    get$grammarCopyVOICEcaus() {
      return "Causative";
    },
    get$grammarCopyUnknown() {
      return "Unknown";
    },
    get$grammarCopyEVIDENTevident() {
      return "Evidentiality";
    },
    get$grammarCopyNUMFORMnumberPsor() {
      return "Possessor's Number";
    },
    get$grammarCopyASPECThab() {
      return "Habitual";
    },
    get$grammarCopyCASEabl() {
      return "Ablative";
    },
    get$grammarCopyCASEall() {
      return "Allative";
    },
    get$grammarCopyCASEess() {
      return "Essive";
    },
    get$grammarCopyCASEtra() {
      return "Translative";
    },
    get$grammarCopyCASEequ() {
      return "Equative";
    },
    get$grammarCopyCASEdis() {
      return "Distributive";
    },
    get$grammarCopyCASEabs() {
      return "Absolutive";
    },
    get$grammarCopyCASEerg() {
      return "Ergative";
    },
    get$grammarCopyCASEcau() {
      return "Causal";
    },
    get$grammarCopyCASEben() {
      return "Benefactive";
    },
    get$grammarCopyCASEtem() {
      return "Temporal";
    },
    get$grammarCopyCONJTYPEcoord() {
      return "Coordinating";
    },
    get$grammarCopyDEFINITEcons() {
      return "Construct State";
    },
    get$grammarCopyDEGREEabs() {
      return "Absolute Degree";
    },
    get$grammarCopyEVIDENTfh() {
      return "Factual Evidentiality";
    },
    get$grammarCopyEVIDENTnfh() {
      return "Non-factual Evidentiality";
    },
    get$grammarCopyMOODopt() {
      return "Optative";
    },
    get$grammarCopyMOODadm() {
      return "Admirative";
    },
    get$grammarCopyMOODdes() {
      return "Desiderative";
    },
    get$grammarCopyMOODnec() {
      return "Necessitative";
    },
    get$grammarCopyMOODpot() {
      return "Potential";
    },
    get$grammarCopyMOODprp() {
      return "Propositive";
    },
    get$grammarCopyMOODqot() {
      return "Quotative";
    },
    get$grammarCopyNUMFORMword() {
      return "Word Form";
    },
    get$grammarCopyNUMFORMroman() {
      return "Roman Numeral";
    },
    get$grammarCopyNUMFORMletter() {
      return "Letter Form";
    },
    get$grammarCopyNUMTYPEmult() {
      return "Multiplicative";
    },
    get$grammarCopyNUMTYPEfrac() {
      return "Fractional";
    },
    get$grammarCopyNUMTYPEsets() {
      return "Set";
    },
    get$grammarCopyNUMTYPErange() {
      return "Range";
    },
    get$grammarCopyNUMTYPEdist() {
      return "Distributive";
    },
    get$grammarCopyNUMBERtri() {
      return "Trial";
    },
    get$grammarCopyNUMBERpauc() {
      return "Paucal";
    },
    get$grammarCopyNUMBERgrpa() {
      return "Greater Paucal";
    },
    get$grammarCopyNUMBERgrpl() {
      return "Greater Plural";
    },
    get$grammarCopyNUMBERinv() {
      return "Inverse";
    },
    get$grammarCopyPERSON0() {
      return "Zero";
    },
    get$grammarCopyPERSON4() {
      return "Fourth";
    },
    get$grammarCopyPOLITEform() {
      return "Formal";
    },
    get$grammarCopyPOLITEelev() {
      return "Elevated";
    },
    get$grammarCopyPOLITEhumb() {
      return "Humble";
    },
    get$grammarCopyPRONTYPEemp() {
      return "Emphatic";
    },
    get$grammarCopyPRONTYPEexc() {
      return "Exclamative";
    },
    get$grammarCopyPRONTYPErcp() {
      return "Reciprocal";
    },
    get$grammarCopyPRONTYPEintRelPronType() {
      return "Interrogative-Relative";
    },
    get$grammarCopyTENSEaor() {
      return "Aorist";
    },
    get$grammarCopyTENSEeps() {
      return "Epistemic";
    },
    get$grammarCopyTENSEprosp() {
      return "Prospective";
    },
    get$grammarCopyVERBFORMpart() {
      return "Participle";
    },
    get$grammarCopyVERBFORMconv() {
      return "Converb";
    },
    get$grammarCopyVERBFORMvnoun() {
      return "Verbal Noun";
    },
    get$grammarCopyVOICEantip() {
      return "Antipassive";
    },
    get$grammarCopyVOICEcauVoice() {
      return "Causative";
    },
    get$grammarCopyVOICedir() {
      return "Direct";
    },
    get$grammarCopyVOICEinvVoice() {
      return "Inverse";
    },
    get$grammarCopyVOICErcpVoice() {
      return "Reciprocal";
    },
    get$grammarCopyPOS() {
      return "Part of Speech";
    },
    get$grammarCopyGENDER() {
      return "Gender";
    },
    get$grammarCopyPERSON() {
      return "Person";
    },
    get$grammarCopyMOOD() {
      return "Mood";
    },
    get$grammarCopyPUNCTTYPE() {
      return "Punctuation Type";
    },
    get$grammarCopyASPECT() {
      return "Aspect";
    },
    get$grammarCopyCASE() {
      return "Case";
    },
    get$grammarCopyVOICE() {
      return "Voice";
    },
    get$grammarCopyNOUNTYPE() {
      return "Noun Type";
    },
    get$grammarCopyVERBTYPE() {
      return "Verb Type";
    },
    get$grammarCopyADVTYPE() {
      return "Adverb Type";
    },
    get$grammarCopyNUMFORM() {
      return "Numeral Form";
    },
    get$grammarCopyNUMTYPE() {
      return "Numeral Type";
    },
    get$grammarCopyNUMBER() {
      return "Number";
    },
    get$grammarCopyDEFINITE() {
      return "Definiteness";
    },
    get$grammarCopyDEGREE() {
      return "Degree";
    },
    get$grammarCopyEVIDENT() {
      return "Evidentiality";
    },
    get$grammarCopyFOREIGN() {
      return "Foreign";
    },
    get$grammarCopyPOLARITY() {
      return "Polarity";
    },
    get$grammarCopyPOLITE() {
      return "Politeness";
    },
    get$grammarCopyPREPCASE() {
      return "Prepositional Case";
    },
    get$grammarCopyPRONTYPE() {
      return "Pronoun Type";
    },
    get$grammarCopyPUNCTSIDE() {
      return "Punctuation Side";
    },
    get$grammarCopyREFLEX() {
      return "Reflexive";
    },
    get$grammarCopyTENSE() {
      return "Tense";
    },
    get$grammarCopyVERBFORM() {
      return "Verb Form";
    },
    get$grammarCopyCONJTYPE() {
      return "Conjunction Type";
    },
    get$grammarCopyUNKNOWN() {
      return "Unknown";
    },
    get$grammarCopyNUMBERPSOR() {
      return "Possessor's Number";
    },
    get$grammarCopyPOSS() {
      return "Possessive";
    },
    get$grammarCopyASPECTimp() {
      return "Imperfective Aspect";
    },
    get$grammarCopyCASEvoc() {
      return "Vocative";
    },
    get$grammarCopyCASEcom() {
      return "Comitative";
    },
    get$grammarCopyCASEpar() {
      return "Partitive";
    },
    get$grammarCopyCASEadv() {
      return "Adverbial";
    },
    get$grammarCopyCASEref() {
      return "Referential";
    },
    get$grammarCopyCASErel() {
      return "Relative";
    },
    get$grammarCopyCASEsub() {
      return "Subessive";
    },
    get$grammarCopyCASEsup() {
      return "Superessive";
    },
    get$grammarCopyCASEaccdat() {
      return "Accusative-Dative";
    },
    get$grammarCopyCASEpre() {
      return "Prepositional";
    },
    get$grammarCopyCONJTYPEsub() {
      return "Subordinating";
    },
    get$grammarCopyCONJTYPEcmp() {
      return "Comparative";
    },
    get$grammarCopyDEFINITEind() {
      return "Indefinite";
    },
    get$grammarCopyMOODint() {
      return "Interrogative Mood";
    },
    get$grammarCopyNOUNTYPEcomm() {
      return "Common Noun";
    },
    get$grammarCopyNUMBERPSORsing() {
      return "Possessor's Singular";
    },
    get$grammarCopyNUMBERPSORplur() {
      return "Possessor's Plural";
    },
    get$grammarCopyNUMBERPSORdual() {
      return "Possessor's Dual";
    },
    get$grammarCopyPOLARITYpos() {
      return "Positive Polarity";
    },
    get$grammarCopyPOSSyes() {
      return "Possessive";
    },
    get$grammarCopyPREPCASEnpr() {
      return "Non-prepositional";
    },
    get$grammarCopyPRONTYPEprs() {
      return "Personal";
    },
    get$grammarCopyPRONTYPEint() {
      return "Interrogative";
    },
    get$grammarCopyPRONTYPEtot() {
      return "Total";
    },
    get$grammarCopyPRONTYPEneg() {
      return "Negative";
    },
    get$grammarCopyPRONTYPEart() {
      return "Article";
    },
    get$grammarCopyPRONTYPEind() {
      return "Indefinite";
    },
    get$grammarCopyPRONTYPEintrel() {
      return "Interrogative-Relative";
    },
    get$grammarCopyPUNCTSIDEfin() {
      return "Final Punctuation";
    },
    get$grammarCopyPUNCTTYPEperi() {
      return "Period";
    },
    get$grammarCopyREFLEXyes() {
      return "Reflexive";
    },
    get$grammarCopyTENSEimp() {
      return "Imperfect";
    },
    get$grammarCopyVERBFORMsup() {
      return "Supine";
    },
    get$grammarCopyVERBFORMadn() {
      return "Adnominal";
    },
    get$grammarCopyVERBFORMlng() {
      return "Long";
    },
    get$grammarCopyVERBFORMshrt() {
      return "Short";
    },
    get$grammarCopyVERBTYPEcaus() {
      return "Causative Verb";
    },
    get$grammarCopyVOICEcau() {
      return "Causative";
    },
    get$grammarCopyVOICEdir() {
      return "Direct";
    },
    get$grammarCopyVOICEinv() {
      return "Inverse";
    },
    get$grammarCopyVOICErcp() {
      return "Reciprocal";
    },
    get$enterLanguageLevel() {
      return "Please enter a language level";
    },
    get$other() {
      return "Other";
    },
    levelShort$1(level) {
      return "LVL " + level;
    },
    get$clickBestOption() {
      return "Choose the best options to translate your message!";
    },
    get$completeActivitiesToUnlock() {
      return "Complete at least one activity to unlock the translation!";
    },
    get$downloadGroupText() {
      return "Download group text";
    },
    get$notificationsOn() {
      return "Notifications on";
    },
    get$notificationsOff() {
      return "Notifications off";
    },
    get$createChatAndInviteUsers() {
      return "Create chat and invite users";
    },
    get$updatedNewSpaceDescription() {
      return "Courses allow you to consolidate your chats and build private or public communities.";
    },
    get$joinWithCode() {
      return "Join with code";
    },
    get$enterCodeToJoin() {
      return "Enter code to join";
    },
    get$updateNow() {
      return "Update Now";
    },
    get$updateLater() {
      return "Later";
    },
    get$constructUseWaDesc() {
      return "Used without help";
    },
    get$constructUseGaDesc() {
      return "Grammar assistance";
    },
    get$constructUseTaDesc() {
      return "Translation assistance";
    },
    get$constructUseUnkDesc() {
      return "Unknown";
    },
    get$constructUseCorITDesc() {
      return "Correct in translation";
    },
    get$constructUseIgnITDesc() {
      return "Ignored in translation";
    },
    get$constructUseIncITDesc() {
      return "Incorrect in translation";
    },
    get$constructUseIgnIGCDesc() {
      return "Ignored in grammar correction";
    },
    get$constructUseCorIGCDesc() {
      return "Correct in grammar correction";
    },
    get$constructUseIncIGCDesc() {
      return "Incorrect in grammar correction";
    },
    get$constructUseCorPADesc() {
      return "Correct in word meaning activity";
    },
    get$constructUseIgnPADesc() {
      return "Ignored in word meaning activity";
    },
    get$constructUseIncPADesc() {
      return "Incorrect in word meaning activity";
    },
    get$constructUseCorWLDesc() {
      return "Correct in word listening activity";
    },
    get$constructUseIncWLDesc() {
      return "Incorrect in word listening activity";
    },
    get$constructUseIngWLDesc() {
      return "Ignored in word listening activity";
    },
    get$constructUseCorHWLDesc() {
      return "Correct in hidden word activity";
    },
    get$constructUseIncHWLDesc() {
      return "Incorrect in hidden word activity";
    },
    get$constructUseIgnHWLDesc() {
      return "Ignored in hidden word activity";
    },
    get$constructUseCorLDesc() {
      return "Correct in lemma activity";
    },
    get$constructUseIncLDesc() {
      return "Incorrect in lemma activity";
    },
    get$constructUseIgnLDesc() {
      return "Ignored in lemma activity";
    },
    get$constructUseCorMDesc() {
      return "Correct in grammar activity";
    },
    get$constructUseIncMDesc() {
      return "Incorrect in grammar activity";
    },
    get$constructUseIgnMDesc() {
      return "Ignored in grammar activity";
    },
    get$constructUseEmojiDesc() {
      return "Correct in emoji activity";
    },
    get$constructUseCollected() {
      return "Collected in chat";
    },
    get$constructUseNanDesc() {
      return "Not applicable";
    },
    xpIntoLevel$2(currentXP, maxXP) {
      return "" + currentXP + " / " + maxXP + " XP";
    },
    get$enableTTSToolName() {
      return "Enabled text-to-speech";
    },
    get$enableTTSToolDescription() {
      return "Allow the app to generate text-to-speech output for portions of text in your target language.";
    },
    get$createAnAccount() {
      return "Create an account";
    },
    get$signIn() {
      return "Sign in";
    },
    get$signUpWithEmail() {
      return "Sign up with Email";
    },
    get$signUpWithGoogle() {
      return "Sign up with Google";
    },
    get$signUpWithApple() {
      return "Sign up with Apple";
    },
    get$yourUsername() {
      return "Your username";
    },
    get$yourEmail() {
      return "Your email";
    },
    get$signInWithGoogle() {
      return "Sign in with Google";
    },
    get$signInWithApple() {
      return "Sign in with Apple";
    },
    get$chooseYourAvatar() {
      return "Choose your avatar";
    },
    get$iWantToLearn() {
      return "I want to learn";
    },
    get$letsStart() {
      return "Let's start";
    },
    get$pleaseEnterEmail() {
      return "Please enter a valid email address.";
    },
    get$pleaseSelectALanguage() {
      return "Please select a language";
    },
    get$myBaseLanguage() {
      return "My base language";
    },
    get$clickWordsInstructions() {
      return "\ud83d\udd75\ufe0f Click any word for details. \ud83e\uddd0";
    },
    get$meaningSectionHeader() {
      return "Meaning:";
    },
    get$formSectionHeader() {
      return "Forms used in chats:";
    },
    get$writingExercisesTooltip() {
      return "Writing";
    },
    get$listeningExercisesTooltip() {
      return "Listening";
    },
    get$readingExercisesTooltip() {
      return "Reading";
    },
    get$meaningNotFound() {
      return "Meaning could not be found.";
    },
    get$chooseBaseForm() {
      return "Choose the base form";
    },
    get$notTheCodeError() {
      return "Sorry, that's not the code!";
    },
    get$totalXP() {
      return "Total XP";
    },
    get$numLemmas() {
      return "Total number of lemmas";
    },
    get$numLemmasUsedCorrectly() {
      return "Number of lemmas used correctly at least once";
    },
    get$numLemmasUsedIncorrectly() {
      return "Number of lemmas used correctly 0 times";
    },
    get$numLemmasSmallXP() {
      return "Number of lemmas with 0 - 30 XP";
    },
    get$numLemmasMediumXP() {
      return "Number of lemmas with 31 - 200 XP";
    },
    get$numLemmasLargeXP() {
      return "Number of lemmas with > 200 XP";
    },
    get$numGrammarConcepts() {
      return "Number of grammar concepts";
    },
    get$listGrammarConcepts() {
      return "Grammar concepts";
    },
    get$listGrammarConceptsUsedCorrectly() {
      return "Grammar concepts used correctly in original messages at least 80% of the time";
    },
    get$listGrammarConceptsUsedIncorrectly() {
      return "Grammar concepts used correctly in original messages less than 80% of the time";
    },
    get$listGrammarConceptsUseCorrectlySystemGenerated() {
      return "Grammar concepts chosen correctly from system-generated suggestions at least 80% of the time";
    },
    get$listGrammarConceptsUseIncorrectlySystemGenerated() {
      return "Grammar concepts chosen correctly from system-generated suggestions less than 80% of the time";
    },
    get$listGrammarConceptsSmallXP() {
      return "Grammar concepts with 0-50 xp";
    },
    get$listGrammarConceptsMediumXP() {
      return "Grammar concepts with 51-200 xp";
    },
    get$listGrammarConceptsLargeXP() {
      return "Grammar concepts 201-500 xp";
    },
    get$listGrammarConceptsHugeXP() {
      return "Grammar concepts >500 xp";
    },
    get$numMessagesSent() {
      return "Number of messages sent";
    },
    get$numWordsTyped() {
      return "Number of words typed in original messages";
    },
    get$numCorrectChoices() {
      return "Number of correct words chosen from system-generated suggestions";
    },
    get$numIncorrectChoices() {
      return "Number of incorrect words chosen from system-generated suggestions";
    },
    get$commaSeparatedFile() {
      return "CSV";
    },
    get$excelFile() {
      return "Excel";
    },
    get$fileType() {
      return "File type";
    },
    get$download(_) {
      return "Download";
    },
    get$analyticsNotAvailable() {
      return "User analytics not available";
    },
    get$downloading() {
      return "Downloading...";
    },
    get$failedFetchUserAnalytics() {
      return "Failed to download user analytics";
    },
    get$downloadComplete() {
      return "Download complete!";
    },
    whatIsTheMorphTag$2(morphologicalFeature, wordForm) {
      return "What is the " + morphologicalFeature + " of '" + wordForm + "'?";
    },
    get$dataAvailable() {
      return "Data availability";
    },
    get$available(_) {
      return "Available";
    },
    get$pangeaBotIsFallible() {
      return "Pangea Bot makes mistakes too!";
    },
    whatIsMeaning$2(lemma, partOfSpeech) {
      return "What does '" + lemma + "' mean?";
    },
    get$chooseLemmaMeaningInstructionsBody() {
      return "Match meanings with the words in the message!";
    },
    get$doubleClickToEdit() {
      return "Double-click to edit.";
    },
    get$languageOfInstructionsLabel() {
      return "Language of activity instructions";
    },
    get$targetLanguageLabel() {
      return "Target language";
    },
    get$cefrLevelLabel() {
      return "CEFR level";
    },
    get$image(_) {
      return "Image";
    },
    get$activityPlannerOverviewInstructionsBody() {
      return "Choose a topic, mode, learning objective and generate an activity for the chat!";
    },
    get$constructUsePvmDesc() {
      return "Produced in voice message";
    },
    get$leaveSpaceDescription() {
      return "By leaving the course, you will leave all of the chats within it. Other users will see that you have left the course.";
    },
    get$constructUseCorMmDesc() {
      return "Correct message meaning";
    },
    get$constructUseIncMmDesc() {
      return "Incorrect message meaning";
    },
    get$constructUseIgnMmDesc() {
      return "Ignored message meaning";
    },
    get$meaning() {
      return "Meaning";
    },
    chatWith$1(displayname) {
      return "Group with " + displayname;
    },
    get$clickOnEmailLink() {
      return "Please click on the link in the email and then proceed.\n\nCheck your spam folder if the email hasn't arrived.";
    },
    get$dontForgetPassword() {
      return "Don't forget your password!";
    },
    get$enableAutocorrectToolName() {
      return "Enable device autocorrect";
    },
    get$enableAutocorrectDescription() {
      return "If your device supports the language you're learning, you can enable device autocorrect to fix common errors as you type.";
    },
    get$ttsDisbledTitle() {
      return "Text-to-speech disabled";
    },
    get$ttsDisabledBody() {
      return "You can enable text-to-speech in your learning settings";
    },
    get$noSpaceDescriptionYet() {
      return "No course description created yet.";
    },
    get$tooLargeToSend() {
      return "This message is too large to send";
    },
    get$exitWithoutSaving() {
      return "Are you sure you want to leave without saving?";
    },
    get$enableAutocorrectWarning() {
      return "Warning! Requires adding your target language keyboard";
    },
    get$displayName(_) {
      return "Display name";
    },
    get$leaveRoomDescription() {
      return "You're about to leave this chat. Other users will see that you have left the chat.";
    },
    get$confirmUserId() {
      return "Please confirm your Pangea Chat username in order to delete your account.";
    },
    paidSubscriptionStarts$1(startDate) {
      return "Starting " + startDate;
    },
    get$cancelInSubscriptionSettings() {
      return "\u2022 Cancel at any time in subscription settings";
    },
    get$autocorrectNotAvailable() {
      return "Unfortunately your platform is not currently supported for this feature. Stay tuned for further development!";
    },
    get$pleaseUpdateApp() {
      return "Please update the app to continue.";
    },
    get$chooseEmojiInstructionsBody() {
      return "Match emojis with the words they best represent. Don't worry! No points off for disagreeing. \ud83d\ude05";
    },
    get$analyticsVocabListBody() {
      return "This is all your vocabulary! As you earn XP for each word, they'll go from seedling to full bloom. Click on any word to see more details.";
    },
    get$morphAnalyticsListBody() {
      return "These are all the grammar concepts in the language you're learning! You'll unlock them as you encounter them while chatting. Click for details.";
    },
    get$knockSpaceSuccess() {
      return "You have requested to join this course! An admin will respond to your request when they receive it \ud83d\ude00";
    },
    get$chooseWordAudioInstructionsBody() {
      return "Listen to the complete message. Then match the audios with the words.";
    },
    get$chooseMorphsInstructionsBody() {
      return "Click the puzzle pieces for grammar questions!";
    },
    get$home() {
      return "Home";
    },
    get$join(_) {
      return "Join";
    },
    get$readingAssistanceOverviewBody() {
      return "Click the buttons below for mini-games on matching emojis, audios, word meanings, and grammar concepts. Or click on any word for details.";
    },
    get$resetInstructionTooltipsTitle() {
      return "Reset instruction tooltips";
    },
    get$resetInstructionTooltipsDesc() {
      return "Click to show instruction tooltips like for a brand new user.";
    },
    get$selectForGrammar() {
      return "Select a grammar icon for activities and details.";
    },
    get$translationProblem() {
      return "Translation problem";
    },
    get$niceJob() {
      return "Nice job!";
    },
    get$askToJoin() {
      return "Ask to join";
    },
    get$emptyChatWarningTitle() {
      return "Chat is empty";
    },
    get$emptyChatWarningDesc() {
      return "You haven't invited anyone to your chat. Go to Chat settings to invite your contacts or the Bot. You can also do this later.";
    },
    get$areYouLikeMe() {
      return "Are you like me?";
    },
    get$tryAgainLater() {
      return "Too many attempts made. Please try again in 5 minutes.";
    },
    get$enterSpaceCode() {
      return "Enter course code";
    },
    get$shareSpaceLink() {
      return "Share link";
    },
    get$byUsingPangeaChat() {
      return "By using Pangea Chat, I agree to the ";
    },
    get$details(_) {
      return "Details";
    },
    get$languageLevelPreA1Desc() {
      return "I have never learned or used the language.";
    },
    get$languageLevelA1Desc() {
      return "I can understand and use some familiar everyday expressions and very basic phrases.";
    },
    get$languageLevelA2Desc() {
      return "I can understand sentences and frequently used expressions related to areas of immediate relevance.";
    },
    get$languageLevelB1Desc() {
      return "I can deal with most familiar situations and can produce simple connected text on familiar topics.";
    },
    get$languageLevelB2Desc() {
      return "I can understand the mains ideas of complex texts and interact with a degree of fluency and spontaneity.";
    },
    get$languageLevelC1Desc() {
      return "I can express ideas fluently and spontaneously without much struggle and understand a wide range of demanding texts.";
    },
    get$languageLevelC2Desc() {
      return "I can understand virtually everything heard or read and express myself fluently and precisely.";
    },
    get$newVocab() {
      return "New vocab";
    },
    get$newGrammar() {
      return "New grammar concepts";
    },
    get$choosePracticeMode() {
      return "Click on one of the buttons above to start a practice activity";
    },
    get$ban() {
      return "Ban";
    },
    get$kick() {
      return "Kick";
    },
    get$lemma() {
      return "Lemma";
    },
    get$grammarFeature() {
      return "Grammar feature";
    },
    get$grammarTag() {
      return "Grammar tag";
    },
    get$forms() {
      return "Forms";
    },
    get$exampleMessages() {
      return "Example messages";
    },
    get$timesUsedIndependently() {
      return "Times used independently";
    },
    get$timesUsedWithAssistance() {
      return "Times used with assistance";
    },
    shareInviteCode$1(code) {
      return "Share invite code: " + code;
    },
    welcomeUser$1(user) {
      return "Welcome " + user;
    },
    get$joinSpaceOnboardingDesc() {
      return "Do you have an invite code or link to a public course?";
    },
    get$skipForNow() {
      return "Skip for now";
    },
    get$permissions(_) {
      return "Permissions";
    },
    get$spaceChildPermission() {
      return "Who can add new chats to this course";
    },
    get$addEnvironmentOverride() {
      return "Add environment override";
    },
    get$defaultOption() {
      return "Default";
    },
    get$deleteChatDesc() {
      return "Are you sure you want to delete this chat? It will be deleted for all participants and all messages within the chat will no longer be available for practice or learning analytics.";
    },
    get$deleteSpaceDesc() {
      return "The course and any selected chats will be deleted for all participants and all messages within the chat will no longer be available for practice or learning analytics. This action cannot be undone.";
    },
    get$configureSpace() {
      return "Configure course";
    },
    get$pinMessages() {
      return "Pin messages";
    },
    get$setJoinRules() {
      return "Set join rules";
    },
    get$changeGeneralSettings() {
      return "Change general settings";
    },
    get$inviteOtherUsersToRoom() {
      return "Invite other users";
    },
    get$changeTheNameOfTheSpace() {
      return "Change the name of the course";
    },
    get$changeTheDescription() {
      return "Change the description";
    },
    get$changeThePermissions() {
      return "Change the permissions";
    },
    get$introductions() {
      return "Introductions";
    },
    get$announcements() {
      return "Announcements";
    },
    get$activities() {
      return "Activities";
    },
    get$access() {
      return "Access";
    },
    get$botSettings() {
      return "Bot settings";
    },
    get$howSpaceCanBeFound() {
      return "How this course can be found";
    },
    get$$private() {
      return "Private";
    },
    get$cannotBeFoundInSearch() {
      return "Cannot be found in search";
    },
    get$$public(_) {
      return "Public";
    },
    get$visibleToCommunity() {
      return 'Visible to the broader Pangea Chat community via "Find a course"';
    },
    get$howSpaceCanBeJoined() {
      return "How this course can be joined";
    },
    get$canBeFoundVia() {
      return "Can be found via:";
    },
    get$canBeFoundViaInvitation() {
      return "\u2022 invitation";
    },
    get$canBeFoundViaCodeOrLink() {
      return "\u2022 code or link";
    },
    get$canBeFoundViaKnock() {
      return "\u2022 request to join and admin approval";
    },
    get$youHaveLeveledUp() {
      return "You have leveled up!";
    },
    get$sendActivities() {
      return "Send activities";
    },
    get$getStarted() {
      return "Get Started";
    },
    get$getStartedBotChatDesc() {
      return "Chatting with AI is a great place to start and Pangea reading, writing, listening and speaking tools make it easy!";
    },
    get$getStartedCommunitiesDesc() {
      return "Learning with a community is where Pangea Chat shines!\nYou can join your class, find a course, or even make your own!";
    },
    get$getStartedFriendsDesc() {
      return "Do you have a friend that wants to learn with you?";
    },
    get$getStartedBotChatComplete() {
      return "Well-done! You're chatting with the bot!";
    },
    get$getStartedCommunitiesComplete() {
      return "Great, you have joined a course!";
    },
    get$getStartedComplete() {
      return "You've completed this section!\nKeep exploring our amazing features by chatting with friends!";
    },
    get$getStartedFriendsComplete() {
      return "Woohoo! You've got friends! \ud83d\ude09";
    },
    get$getStartedBotChatButton() {
      return "Start chatting!";
    },
    get$getStartedFriendsButton() {
      return "Chat with a friend";
    },
    get$directMessage() {
      return "Direct Message";
    },
    get$newDirectMessage() {
      return "New direct message";
    },
    get$speakingExercisesTooltip() {
      return "Speaking";
    },
    get$noChatsFoundHereYet() {
      return "No chats found here yet";
    },
    get$transcriptionFailed() {
      return "Failed to transcribe audio";
    },
    get$aUserIsKnocking() {
      return "1 user is requesting to join your course";
    },
    usersAreKnocking$1(users) {
      return "" + users + " users are requesting to join your course";
    },
    get$failedToFetchTranscription() {
      return "Failed to fetch transcription";
    },
    get$deleteEmptySpaceDesc() {
      return "The course will be deleted for all participants. This action cannot be undone.";
    },
    get$failedToPlayVideo() {
      return "Failed to play video";
    },
    get$done() {
      return "Done";
    },
    get$inThisSpace() {
      return "In this course";
    },
    get$myContacts() {
      return "My contacts";
    },
    get$inviteAllInSpace() {
      return "Invite all in this course";
    },
    get$spaceParticipantsHaveBeenInvitedToTheChat() {
      return "All course participants has been invited to the chat";
    },
    numKnocking$1(count) {
      return "" + count + " knocking";
    },
    numInvited$1(count) {
      return "" + count + " invited";
    },
    get$errorFetchingDefinition() {
      return "Failed to fetch definition";
    },
    get$errorProcessAnalytics() {
      return "Failed to process analytics";
    },
    get$errorDownloading() {
      return "Download failed";
    },
    get$errorFetchingLevelSummary() {
      return "Failed to fetch level summary";
    },
    get$errorLoadingSpaceChildren() {
      return "Failed to load chats within this course";
    },
    get$unexpectedError() {
      return "Unexpected error.";
    },
    get$pleaseReload() {
      return "Please reload and try again.";
    },
    get$translationError() {
      return "Translation error";
    },
    get$errorFetchingTranslation() {
      return "Failed to fetch translation";
    },
    get$errorFetchingActivity() {
      return "Failed to fetch activity";
    },
    get$check(_) {
      return "Check";
    },
    get$unableToFindRoom() {
      return "No chat or course found with that code. Please try again.";
    },
    get$numCompletedActivities() {
      return "Number of completed activities";
    },
    viewingAnalytics$2(visible, users) {
      return "Viewing " + visible + "/" + users + " Analytics";
    },
    get$request(_) {
      return "Request";
    },
    get$requestAll(_) {
      return "Request All";
    },
    get$confirmMessageUnpin() {
      return "Are you sure you want to unpin this message?";
    },
    get$pending(_) {
      return "Pending";
    },
    get$openRoleLabel() {
      return "OPEN";
    },
    joinedTheActivity$2(username, role) {
      return "\ud83d\udc4b " + username + " joined as " + role;
    },
    finishedTheActivity$1(username) {
      return "\ud83c\udfaf " + username + " wrapped up this activity";
    },
    get$endActivityTitle() {
      return "I'm done";
    },
    get$activitySummaryError() {
      return "Activity summaries unavailable";
    },
    get$requestSummaries() {
      return "Request summaries";
    },
    get$requestAccessTitle() {
      return "Request to analytics view access?";
    },
    get$requestAccessDesc() {
      return "Would you like to request access to view participant analytics?\n\nIf participants agree, admins of this course will be able to view their:\n    \u2022 total vocabulary\n    \u2022 total grammar concepts\n    \u2022 total activity sessions completed\n    \u2022 the specific grammar concepts used, correctly and incorrectly\n\nThey will not be able to view their:\n    \u2022 messages in chats outside the course\n    \u2022 vocabulary list";
    },
    get$analyticsInactiveTitle() {
      return "Requests to inactive users couldn\u2019t be sent";
    },
    get$analyticsInactiveDesc() {
      return "Inactive users who haven't logged in since this feature was introduced won't see your request.\n\nThe Request button will appear once they return. You can resend the request later by clicking the Request button under their name when it's available.";
    },
    get$accessRequestedTitle() {
      return "Analytics Access Request";
    },
    accessRequestedDesc$1(space) {
      return "The administrators of \u201c" + space + "\u201d are requesting to view your learning analytics.\n\nIf you agree, admins of this course will be able to view your:\n    \u2022 total vocabulary\n    \u2022 total grammar concepts\n    \u2022 total activity sessions completed\n    \u2022 the specific grammar concepts used, correctly and incorrectly\n\nThey will not be able to view your:\n    \u2022 messages in chats outside the course\n    \u2022 vocabulary list";
    },
    get$allowAccess() {
      return "Allow Access";
    },
    get$denyAccess() {
      return "Deny Access";
    },
    get$adminRequestedAccess() {
      return "Admins asked to view your analytics.";
    },
    lastUpdated$1(time) {
      return "Updated\n" + time;
    },
    get$activityFinishedMessage() {
      return "All Finished!";
    },
    get$endForAll() {
      return "End for all";
    },
    get$newCourse() {
      return "New course";
    },
    get$newCourseSubtitle() {
      return "Which course plan plan would you like to use?";
    },
    get$failedToLoadCourses() {
      return "Failed to load courses";
    },
    numModules$1(num) {
      return "" + num + " modules";
    },
    numActivityPlans$1(num) {
      return "" + num + " activity plans";
    },
    get$coursePlan() {
      return "Course Plan";
    },
    get$editCourseLater() {
      return "You can edit template title, descriptions, and course image later.";
    },
    get$newCourseAccess() {
      return "By default, courses are private and require admin approval to join. You can edit these settings at any time.";
    },
    get$createCourse() {
      return "Create course";
    },
    get$stats() {
      return "Stats";
    },
    get$createGroupChat() {
      return "Create group chat";
    },
    get$editCourse() {
      return "Edit course";
    },
    get$inviteDesc() {
      return "By username, by code or link";
    },
    get$editCourseDesc() {
      return "Here you can edit course title, description, etc.";
    },
    get$permissionsDesc() {
      return "Set permissions such as who can invite users, send messages, create chats, etc.";
    },
    get$accessDesc() {
      return "You can make your course open to the world! Or, make your course private and secure.";
    },
    get$createGroupChatDesc() {
      return "Whereas activity sessions start and end, group chats will stay open for routine communication.";
    },
    get$deleteDesc() {
      return "Only admins can delete a course. This is a destructive action which removes all users and deletes all selected chats within the course. Proceed with caution.";
    },
    get$failedToLoadCourseInfo() {
      return "Failed to load course information";
    },
    get$noCourseFound() {
      return "Oh, this course needs a plan!\n\nCourse plans are a sequence of topics and conversation activities.";
    },
    additionalParticipants$1(num) {
      return "+ " + num + " others";
    },
    get$courseChats() {
      return "Course Chats";
    },
    get$directMessages() {
      return "Direct Messages";
    },
    get$whatNow() {
      return "What now?";
    },
    get$chooseNextActivity() {
      return "Choose your next activity!";
    },
    get$chooseRole() {
      return "Choose a role!";
    },
    get$chooseRoleToParticipate() {
      return "Choose a role to participate!";
    },
    waitingToFillRole$1(num) {
      return "Waiting to fill " + num + " roles...";
    },
    get$pingParticipants() {
      return "Ping course participants";
    },
    get$playWithBot() {
      return "Play with Pangea Bot";
    },
    get$inviteFriends() {
      return "Invite friends";
    },
    get$waitNotDone() {
      return "Wait I\u2019m not done!";
    },
    get$waitingForOthersToFinish() {
      return "Waiting for the rest to finish up...";
    },
    get$saveToCompletedActivities() {
      return "Save to completed activities";
    },
    get$generatingSummary() {
      return "Analyzing chat and generating results";
    },
    get$instructionsLanguage() {
      return "Instructions language";
    },
    get$findCourse() {
      return "Find a course";
    },
    get$activityCompletedDesc() {
      return "Your completed activity was added to analytics where you can review and practice the language you used.";
    },
    pingParticipantsNotification$2(user, room) {
      return user + " is looking for users to join the activity session in " + room;
    },
    get$courseName() {
      return "Course name";
    },
    get$createNewCourse() {
      return "New course";
    },
    get$publicCourses() {
      return "Public courses";
    },
    goToCourse$1(course) {
      return "Go to course: " + course;
    },
    get$activityComplete() {
      return "This activity has been completed. The activity summary should be available below.";
    },
    get$haventChattedMuch() {
      return "It looks like you haven't chatted much, try using some more vocab words! If you feel like you've completed your objective, you can end the activity below.";
    },
    get$haveChatted() {
      return "It looks like you've been chatting for a while! If you feel like you've completed your objective, wrap up to finish the activity and we'll generate you a summary in the chat!";
    },
    userDoneAndWaiting$2(num1, num2) {
      return "" + num1 + "/" + num2 + " participants have wrapped up. Wait for everyone to finish, and we'll generate you a summary in the chat! \n\nIf you'd like to rejoin the conversation, click the continue button in the chat.";
    },
    othersDoneAndWaiting$2(num1, num2) {
      return "" + num1 + "/" + num2 + " are done. Have you completed your objective?";
    },
    get$startNewSession() {
      return "Start new session";
    },
    get$joinOpenSession() {
      return "Join open session";
    },
    get$less() {
      return "less";
    },
    get$activityNotFound() {
      return "Activity not found";
    },
    get$levelUp() {
      return "Level up";
    },
    get$myActivities() {
      return "My activities";
    },
    get$openToJoin() {
      return "Open to join";
    },
    get$activityDone() {
      return "Activity Done!";
    },
    get$moreLabel() {
      return "more";
    },
    get$promoCodeInfo() {
      return "Promo codes can be entered on the next page";
    },
    get$editsComingSoon() {
      return "The ability to edit cities and activities is coming soon.";
    },
    get$editing() {
      return "Editing";
    },
    activityNeedsMembers$1(num) {
      return "Uh oh! This activity needs " + num + " more people.";
    },
    get$inviteFriendsToCourse() {
      return "Invite friends to my course";
    },
    get$subscribeToUnlockActivitySummaries() {
      return "Subscribe to unlock activity summaries";
    },
    get$subscribeToUnlockDefinitions() {
      return "Subscribe to unlock definitions";
    },
    get$subscribeToUnlockTranscriptions() {
      return "Subscribe to unlock transcriptions";
    },
    get$pingSent() {
      return "\ud83d\udd14 Course ping sent! \ud83d\udd14";
    },
    get$courseTitle() {
      return "Course title";
    },
    get$courseDesc() {
      return "Course description";
    },
    get$courseSavedSuccessfully() {
      return "Course saved successfully";
    },
    get$addCoursePlan() {
      return "Add a course plan";
    },
    remove$1($receiver, arg0) {
      return this.get$remove(this).call$1(arg0);
    }
  };
  var typesOffset = hunkHelpers.updateTypes([]);
  (function inheritance() {
    var _inherit = hunkHelpers.inherit;
    _inherit(A.L10nPl, C.L10n);
  })();
  B._Universe_addRules(init.typeUniverse, JSON.parse('{"L10nPl":{"L10n":[]}}'));
};
;
(d => {
  d["9tlPXkPn9swfNl4TcSkR+3NR47E="] = d.current;
})($__dart_deferred_initializers__);
;
//# sourceMappingURL=main.dart.js_250.part.js.map
