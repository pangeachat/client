// Generated by dart2js (, trust primitives, omit checks, lax runtime type, csp, intern-composite-values), the Dart to JavaScript compiler version: 3.9.2.
((s, d) => {
  s[d] = s[d] || {};
})(self, "$__dart_deferred_initializers__");
$__dart_deferred_initializers__.current = function(hunkHelpers, init, holdersList, $) {
  var B, C,
  A = {
    L10nIt$() {
      return new A.L10nIt(B.canonicalizedLocale("it"));
    },
    L10nIt: function L10nIt(t0) {
      this.localeName = t0;
    }
  };
  B = holdersList[0];
  C = holdersList[54];
  A = hunkHelpers.updateHolder(holdersList[32], A);
  A.L10nIt.prototype = {
    get$alwaysUse24HourFormat() {
      return "disattivato";
    },
    get$repeatPassword() {
      return "Ripeti password";
    },
    get$notAnImage() {
      return "Non \xe8 un file immagine.";
    },
    get$setCustomPermissionLevel() {
      return "Imposta livello di permesso personalizzato";
    },
    get$setPermissionsLevelDescription() {
      return "Scegli un ruolo predefinito qui sotto o inserisci un livello di permesso personalizzato tra 0 e 100.";
    },
    get$ignoreUser() {
      return "Ignora utente";
    },
    get$normalUser() {
      return "Utente normale";
    },
    get$remove(_) {
      return "Rimuovi";
    },
    get$importNow() {
      return "Importa ora";
    },
    get$importEmojis() {
      return "Importa Emoji";
    },
    get$importFromZipFile() {
      return "Importa da file .zip";
    },
    get$exportEmotePack() {
      return "Esporta pack di Emote come .zip";
    },
    get$replace(_) {
      return "Sostituisci";
    },
    aboutHomeserver$1(homeserver) {
      return "Informazioni su " + homeserver;
    },
    get$accept(_) {
      return "Accetta";
    },
    acceptedTheInvitation$1(username) {
      return "\ud83d\udc4d " + username + " ha accettato l'invito";
    },
    get$account() {
      return "Account";
    },
    activatedEndToEndEncryption$1(username) {
      return "\ud83d\udd10 " + username + " ha abilitato la crittografia end to end";
    },
    get$addEmail() {
      return "Aggiungi e-mail";
    },
    supposedMxid$1(mxid) {
      return "Dovrebbe essere " + mxid;
    },
    get$admin() {
      return "Amministratore";
    },
    get$commandHint_roomupgrade() {
      return "Aggiorna questa stanza alla versione specificata";
    },
    get$commandHint_googly() {
      return "Invia degli occhi finti";
    },
    get$commandHint_cuddle() {
      return "Invia una coccola";
    },
    get$commandHint_hug() {
      return "Invia un abbraccio";
    },
    googlyEyesContent$1(senderName) {
      return senderName + " ti ha inviato degli occhi finti";
    },
    cuddleContent$1(senderName) {
      return senderName + " ti coccola";
    },
    hugContent$1(senderName) {
      return senderName + " ti abbraccia";
    },
    answeredTheCall$1(senderName) {
      return senderName + " ha risposto alla chiamata";
    },
    get$anyoneCanJoin() {
      return "Tutti possono partecipare";
    },
    get$archive() {
      return "Archivia";
    },
    get$areYouSure() {
      return "Sei sicuro/a?";
    },
    get$areYouSureYouWantToLogout() {
      return "Sei sicuro/a di voler uscire?";
    },
    get$askSSSSSign() {
      return "Per far accedere l'altra persona, per favore inserisci la tua frase segreta o chiave di recupero.";
    },
    askVerificationRequest$1(username) {
      return "Accettare questa richiesta di verifica da " + username + "?";
    },
    badServerLoginTypesException$3(serverVersions, supportedVersions, suportedVersions) {
      return "L'homeserver supporta i tipi di accesso:\n" + serverVersions + "\nMa questa applicazione supporta solo:\n" + supportedVersions;
    },
    get$sendTypingNotifications() {
      return "Invia notifiche di scrittura";
    },
    get$swipeRightToLeftToReply() {
      return "Scorri da destra a sinistra per rispondere";
    },
    get$sendOnEnter() {
      return "Invia quando premi Invio";
    },
    countChatsAndCountParticipants$2(chats, participants) {
      return "" + chats + " chat e " + participants + " partecipanti";
    },
    get$banFromChat() {
      return "Bandisci dalla chat";
    },
    get$banned() {
      return "Bandito";
    },
    bannedUser$2(username, targetName) {
      return username + " ha bandito " + targetName;
    },
    get$blockDevice() {
      return "Blocca dispositivo";
    },
    get$blocked() {
      return "Bloccato";
    },
    get$cancel(_) {
      return "Annulla";
    },
    cantOpenUri$1(uri) {
      return "Impossibile aprire l'URI " + uri;
    },
    get$changeDeviceName() {
      return "Cambia nome dispositivo";
    },
    changedTheChatAvatar$1(username) {
      return username + " ha cambiato l'avatar della discussione";
    },
    changedTheChatDescriptionTo$2(username, description) {
      return username + " ha cambiato la descrizione della chat in: '" + description + "'";
    },
    changedTheChatNameTo$2(username, chatname) {
      return username + " ha cambiato il nome della discussione in: '" + chatname + "'";
    },
    changedTheChatPermissions$1(username) {
      return username + " ha cambiato i permessi della chat";
    },
    changedTheDisplaynameTo$2(username, displayname) {
      return username + " ha cambiato nome in: '" + displayname + "'";
    },
    changedTheGuestAccessRules$1(username) {
      return username + " ha cambiato le regole di accesso per ospiti";
    },
    changedTheGuestAccessRulesTo$2(username, rules) {
      return username + " ha cambiato le regole di accesso per ospiti con: " + rules;
    },
    changedTheHistoryVisibility$1(username) {
      return username + " ha cambiato la visibilit\xe0 della cronologia";
    },
    changedTheHistoryVisibilityTo$2(username, rules) {
      return username + " ha cambiato la visibilit\xe0 della cronologia in: " + rules;
    },
    changedTheJoinRules$1(username) {
      return username + " ha cambiato le regole per unirsi";
    },
    changedTheJoinRulesTo$2(username, joinRules) {
      return username + " ha cambiato le regole per unirsi in: " + joinRules;
    },
    changedTheProfileAvatar$1(username) {
      return username + " ha cambiato il suo avatar";
    },
    changedTheRoomAliases$1(username) {
      return username + " ha modificato gli alias della stanza";
    },
    changedTheRoomInvitationLink$1(username) {
      return username + " ha cambiato il link di invito";
    },
    get$changePassword() {
      return "Cambia la password";
    },
    get$changeTheme() {
      return "Cambia il tuo stile";
    },
    get$changeYourAvatar() {
      return "Cambia il tuo avatar";
    },
    get$channelCorruptedDecryptError() {
      return "La crittografia \xe8 corrotta";
    },
    get$chat() {
      return "Chat";
    },
    get$chatDetails() {
      return "Dettagli chat";
    },
    get$chats() {
      return "Discussioni";
    },
    get$chooseAStrongPassword() {
      return "Scegli una password complessa";
    },
    get$clearArchive() {
      return "Cancella archivio";
    },
    get$close(_) {
      return "Chiudi";
    },
    get$commandHint_markasdm() {
      return "Contrassegna questo Matrix ID come stanza di messaggi diretti";
    },
    get$commandHint_markasgroup() {
      return "Segna come gruppo";
    },
    get$commandHint_ban() {
      return "Banna l'utente specificato da questa stanza";
    },
    get$commandHint_clearcache() {
      return "Pulisci cache";
    },
    get$commandHint_create() {
      return "Crea una chat di gruppo vuota\nUtilizza --no-encryption per disattivare la criptazione";
    },
    get$commandHint_discardsession() {
      return "Scarta sessione";
    },
    get$commandHint_dm() {
      return "Avvia una chat diretta\nUsa --no-encryption per disabilitare la crittografia";
    },
    get$commandHint_html() {
      return "Invia testo formattato in HTML";
    },
    get$commandHint_invite() {
      return "Invia l utente fornito in questa stanza";
    },
    get$commandHint_join() {
      return "Unisciti alla stanza fornita";
    },
    get$commandHint_kick() {
      return "Rimuovi l'utente fornito da questa stanza";
    },
    get$commandHint_leave() {
      return "Abbandona questa stanza";
    },
    get$commandHint_me() {
      return "Descriviti";
    },
    get$commandHint_myroomavatar() {
      return "Importa la foto profilo per questa stanza ( mxc-uri)";
    },
    get$commandHint_myroomnick() {
      return "Imposta il nome visualizzato per questa stanza";
    },
    get$commandHint_op() {
      return "Imposta il livello di privilegi dell'utente specificato (predefinito: 50)";
    },
    get$commandHint_plain() {
      return "Invia testo non formattato";
    },
    get$commandHint_react() {
      return "Rispondi con una reazione";
    },
    get$commandHint_send() {
      return "Invia testo";
    },
    get$commandHint_unban() {
      return "Sbanna l'utente fornito da questa stanza";
    },
    get$compareEmojiMatch() {
      return "Per favore confronta gli emoji";
    },
    get$compareNumbersMatch() {
      return "Per favore confronta i numeri";
    },
    get$configureChat() {
      return "Configura la discussione";
    },
    get$confirm(_) {
      return "Conferma";
    },
    get$copiedToClipboard() {
      return "Copiato negli Appunti";
    },
    get$copy(_) {
      return "Copia";
    },
    couldNotDecryptMessage$1(error) {
      return "Impossibile decriptare messaggio: " + error;
    },
    get$checkList() {
      return "Check list";
    },
    countParticipants$1(count) {
      return "" + count + " partecipanti";
    },
    countInvited$1(count) {
      return "" + count + " invited";
    },
    get$create(_) {
      return "Crea";
    },
    createdTheChat$1(username) {
      return "\ud83d\udcac " + username + " ha creato la chat";
    },
    get$createGroup() {
      return "Crea gruppo";
    },
    get$currentlyActive() {
      return "Attualmente attivo";
    },
    get$darkTheme() {
      return "Scuro";
    },
    dateAndTimeOfDay$2(date, timeOfDay) {
      return date + ", " + timeOfDay;
    },
    get$deactivateAccountWarning() {
      return "Disabiliter\xe0 il tuo account. Non puoi tornare indietro! Sei sicuro/a?";
    },
    get$defaultPermissionLevel() {
      return "Livello di autorizzazione predefinito per i nuovi utenti";
    },
    get$$delete(_) {
      return "Cancella";
    },
    get$deleteAccount() {
      return "Elimina l'account";
    },
    get$deleteMessage() {
      return "Elimina il messaggio";
    },
    get$devices() {
      return "Dispositivi";
    },
    get$displaynameHasBeenChanged() {
      return "Il nominativo \xe8 stato cambiato";
    },
    get$downloadFile() {
      return "Scarica il file";
    },
    get$edit() {
      return "Modifica";
    },
    get$editBlockedServers() {
      return "Modifica i server bloccati";
    },
    get$chatPermissions() {
      return "Permessi della chat";
    },
    get$editDisplayname() {
      return "Modifica il nominativo";
    },
    get$editRoomAvatar() {
      return "Modifica l'avatar della stanza";
    },
    get$emoteExists() {
      return "L'emote gi\xe0 esiste!";
    },
    get$emoteInvalid() {
      return "Shortcode emote invalido!";
    },
    get$emoteKeyboardNoRecents() {
      return "Le emoticon recentemente usate appariranno qui...";
    },
    get$emotePacks() {
      return "Pacchetti emotes della stanza";
    },
    get$customEmojisAndStickers() {
      return "Emoji e adesivi personalizzati";
    },
    get$emoteShortcode() {
      return "Scorciatoia emote";
    },
    get$emoteWarnNeedToPick() {
      return "Devi scegliere una scorciatoia emote e aggiungere un immagine!";
    },
    get$emptyChat() {
      return "Discussione vuota";
    },
    get$enableEmotesGlobally() {
      return "Abilita i pacchetti emotes globalmente";
    },
    get$enableEncryption() {
      return "Abilita la crittografia";
    },
    get$encrypted() {
      return "Crittografato";
    },
    get$encryptionNotEnabled() {
      return "Crittografia non abilitata";
    },
    endedTheCall$1(senderName) {
      return senderName + " \xe8 entrato in chiamata";
    },
    get$enterAnEmailAddress() {
      return "Inserisci un indirizzo e-mail";
    },
    errorObtainingLocation$1(error) {
      return "Errore cercando di ottenere la posizione: " + error;
    },
    get$fontSize(_) {
      return "Dimensione carattere";
    },
    get$forward(_) {
      return "Inoltra";
    },
    get$fromJoining() {
      return "Dall'adesione";
    },
    get$fromTheInvitation() {
      return "Dall'invito";
    },
    get$guestsAreForbidden() {
      return "Gli ospiti sono vietati";
    },
    get$guestsCanJoin() {
      return "Gli ospiti possono partecipare";
    },
    hasWithdrawnTheInvitationFor$2(username, targetName) {
      return username + " ha ritirato l'invito per " + targetName;
    },
    get$help() {
      return "Aiuto";
    },
    get$hideRedactedMessages() {
      return "Mostra i messaggi rimossi";
    },
    get$hideRedactedMessagesBody() {
      return "Se qualcuno rimuove un messaggio, il messaggio non sar\xe0 pi\xf9 visibile nella chat.";
    },
    get$hideInvalidOrUnknownMessageFormats() {
      return "Nascondi formati di messaggi non validi o sconosciuti";
    },
    get$block() {
      return "Blocca";
    },
    get$blockedUsers() {
      return "Utenti bloccati";
    },
    get$blockListDescription() {
      return "Puoi bloccare gli utenti che ti disturbano. Non sarai pi\xf9 in grado di ricevere messaggi o inviti alle stanze dalle persone che hai bloccato.";
    },
    get$blockUsername() {
      return "Nome utente da ignorare";
    },
    get$iHaveClickedOnLink() {
      return "Ho cliccato sul collegamento";
    },
    get$incorrectPassphraseOrKey() {
      return "Frase segrata o chiave di ripristino errate";
    },
    get$inviteContact() {
      return "Invita contatto";
    },
    get$noChatDescriptionYet() {
      return "La descrizione della chat non \xe8 ancora stata creata.";
    },
    get$tryAgain() {
      return "Riprova";
    },
    get$invited() {
      return "Invitato/a";
    },
    get$redactMessageDescription() {
      return "Questo messaggio sar\xe0 rimosso per tutti i partecipanti di questa conversazione. Questa operazione non pu\xf2 essere annullata.";
    },
    get$optionalRedactReason() {
      return "(Opzionale) Ragione per rimuovere questo messaggio...";
    },
    invitedUser$2(username, targetName) {
      return "\ud83d\udce9 " + username + " ha invitato " + targetName;
    },
    get$invitedUsersOnly() {
      return "Solo utenti invitati";
    },
    get$inviteForMe() {
      return "Invita per me";
    },
    get$isTyping() {
      return "sta scrivendo\u2026";
    },
    joinedTheChat$1(username) {
      return "\ud83d\udc4b " + username + " si \xe8 unito/a alla chat";
    },
    kicked$2(username, targetName) {
      return "\ud83d\udc5e " + username + " ha espulso " + targetName;
    },
    get$kickFromChat() {
      return "Espelli dalla chat";
    },
    lastActiveAgo$1(localizedTimeShort) {
      return "Ultima attivit\xe0: " + localizedTimeShort;
    },
    get$leave() {
      return "Abbandona";
    },
    get$leftTheChat() {
      return "Ha lasciato la chat";
    },
    get$lightTheme() {
      return "Chiaro";
    },
    get$dehydrate() {
      return "Esporta la sessione e cancella il dispositivo";
    },
    get$dehydrateWarning() {
      return "Questa azione non pu\xf2 essere annullata. Assicurarsi di aver salvato il file di backup.";
    },
    get$dehydrateTor() {
      return "Utenti TOR: Esporta la sessione";
    },
    get$dehydrateTorLong() {
      return "Per gli utenti TOR, \xe8 raccomandato esportare la sessione prima di chiudere la finestra.";
    },
    get$loadingPleaseWait() {
      return "Caricamento\u2026 Attendere prego.";
    },
    get$loadMore() {
      return "Carica di pi\xf9\u2026";
    },
    get$locationDisabledNotice() {
      return "I servizi di localizzazione sono disabilitati. Per favore abilitali per poter condividere la tua posizione.";
    },
    get$locationPermissionDeniedNotice() {
      return "Permesso per accedere alla posizione negato. Per favore concedilo per essere in grado di condividere la tua posizione.";
    },
    get$login() {
      return "Accedi";
    },
    get$logout() {
      return "Esci";
    },
    get$mention() {
      return "Menzione";
    },
    get$messages() {
      return "Messaggi";
    },
    get$messagesStyle() {
      return "Messaggi:";
    },
    get$moderator() {
      return "Moderatore";
    },
    get$newChat() {
      return "Nuova discussione";
    },
    get$newVerificationRequest() {
      return "Nuova richiesta di verifica!";
    },
    get$next(_) {
      return "Avanti";
    },
    get$no() {
      return "No";
    },
    get$noConnectionToTheServer() {
      return "Nessuna connessione al server";
    },
    get$noEmotesFound() {
      return "Nessun emote trovato. \ud83d\ude15";
    },
    get$shareInviteLink() {
      return "Condividi link d'invito";
    },
    get$none() {
      return "Nessuno";
    },
    get$noPasswordRecoveryDescription() {
      return "Non hai ancora aggiunto un modo per recuperare la tua password.";
    },
    get$noPermission() {
      return "Nessuna autorizzazione";
    },
    get$noRoomsFound() {
      return "Nessuna stanza trovata\u2026";
    },
    get$notifications() {
      return "Notifiche";
    },
    get$obtainingLocation() {
      return "Ottengo la posizione\u2026";
    },
    get$offensive() {
      return "Offensivo";
    },
    get$ok() {
      return "Ok";
    },
    get$oopsSomethingWentWrong() {
      return "Ops, qualcosa \xe8 andato storto\u2026";
    },
    get$oneClientLoggedOut() {
      return "Uno dei tuoi client \xe8 stato disconnesso";
    },
    get$openInMaps() {
      return "Apri in maps";
    },
    get$link() {
      return "Link";
    },
    get$serverRequiresEmail() {
      return "Questo server ha bisogno di validare la tua email per la registrazione.";
    },
    get$participant() {
      return "Partecipante";
    },
    get$passphraseOrKey() {
      return "frase segreta o chiave di recupero";
    },
    get$password(_) {
      return "Password";
    },
    get$passwordForgotten() {
      return "Password dimenticata";
    },
    get$passwordHasBeenChanged() {
      return "La password \xe8 stata cambiata";
    },
    get$overview() {
      return "Panoramica";
    },
    get$passwordRecoverySettings() {
      return "Impostazioni di recupero password";
    },
    get$passwordRecovery() {
      return "Recupero della password";
    },
    get$pickImage() {
      return "Scegli un'immagine";
    },
    get$pin() {
      return "Fissa";
    },
    get$pleaseChoose() {
      return "Si prega di scegliere";
    },
    get$pleaseEnterYourPassword() {
      return "Inserisci la tua password";
    },
    get$pleaseEnterYourPin() {
      return "Per favore inserisci il tuo PIN";
    },
    get$pleaseEnterYourUsername() {
      return "Inserisci il tuo nome utente";
    },
    get$pleaseFollowInstructionsOnWeb() {
      return "Segui le istruzioni sul sito web e tocca Avanti.";
    },
    get$privacy() {
      return "Privacy";
    },
    get$reason(_) {
      return "Motivo";
    },
    redactedBy$1(username) {
      return "Rimosso da " + username;
    },
    get$directChat() {
      return "Chat diretta";
    },
    redactedByBecause$2(username, reason) {
      return "Rimosso da " + username + ' per: "' + reason + '"';
    },
    redactedAnEvent$1(username) {
      return username + " ha eliminato un evento";
    },
    get$redactMessage() {
      return "Elimina un messaggio";
    },
    get$reject() {
      return "Rifiuta";
    },
    rejectedTheInvitation$1(username) {
      return username + " ha rifiutato l'invito";
    },
    get$removeAllOtherDevices() {
      return "Rimuovi tutti gli altri dispositivi";
    },
    get$unbanFromChat() {
      return "Rimuovi il ban dalla chat";
    },
    get$removeYourAvatar() {
      return "Rimuovi il tuo avatar";
    },
    get$replaceRoomWithNewerVersion() {
      return "Sostituisci la stanza con la versione pi\xf9 recente";
    },
    get$reply(_) {
      return "Rispondi";
    },
    get$reportMessage() {
      return "Segnala il messaggio";
    },
    get$roomHasBeenUpgraded() {
      return "La stanza \xe8 stata aggiornata";
    },
    get$search(_) {
      return "Cerca";
    },
    get$security() {
      return "Sicurezza";
    },
    get$send(_) {
      return "Invia";
    },
    get$sendAMessage() {
      return "Invia un messaggio";
    },
    get$sendAudio() {
      return "Invia un file audio";
    },
    get$sendFile() {
      return "Invia un file";
    },
    get$sendImage() {
      return "Invia un'immagine";
    },
    sendImages$1(count) {
      return "Invia " + count + " immagine";
    },
    get$sendMessages() {
      return "Invia messaggi";
    },
    get$sendVideo() {
      return "Invia un video";
    },
    sentAFile$1(username) {
      return "\ud83d\udcc1 " + username + " ha inviato un file";
    },
    sentAnAudio$1(username) {
      return "\ud83c\udfa4 " + username + " ha inviato un file audio";
    },
    sentAPicture$1(username) {
      return "\ud83d\uddbc\ufe0f " + username + " ha inviato un'immagine";
    },
    sentASticker$1(username) {
      return "\ud83d\ude0a " + username + " ha inviato un adesivo";
    },
    sentAVideo$1(username) {
      return "\ud83c\udfa5 " + username + " ha inviato un video";
    },
    sentCallInformations$1(senderName) {
      return senderName + " ha inviato informazioni sulla chiamata";
    },
    get$separateChatTypes() {
      return "Separare le chat dirette e i gruppi";
    },
    get$setChatDescription() {
      return "Imposta la descrizione della chat";
    },
    get$setStatus() {
      return "Imposta lo stato";
    },
    get$settings() {
      return "Impostazioni";
    },
    get$share(_) {
      return "Condividi";
    },
    sharedTheLocation$1(username) {
      return username + " ha condiviso la sua posizione";
    },
    get$shareLocation() {
      return "Condividi posizione";
    },
    get$presencesToggle() {
      return "Mostra i messaggi di stato di altri utenti";
    },
    get$skip(_) {
      return "Ignora";
    },
    get$sourceCode() {
      return "Codice sorgente";
    },
    startedACall$1(senderName) {
      return senderName + " ha iniziato una chiamata";
    },
    get$status(_) {
      return "Stato";
    },
    get$statusExampleMessage() {
      return "Come stai oggi?";
    },
    get$submit(_) {
      return "Invia";
    },
    get$synchronizingPleaseWait() {
      return "Sincronizzazione... Attendere prego.";
    },
    synchronizingPleaseWaitCounter$1(percentage) {
      return " Sincronizzazione\u2026 (" + percentage + "%)";
    },
    get$systemTheme() {
      return "Sistema";
    },
    get$theyDontMatch() {
      return "Non corrispondono";
    },
    get$theyMatch() {
      return "Corrispondono";
    },
    get$tooManyRequestsWarning() {
      return "Troppe richieste. Per favore riprova pi\xf9 tardi!";
    },
    get$tryToSendAgain() {
      return "Prova a inviare di nuovo";
    },
    get$unavailable() {
      return "Non disponibile";
    },
    unbannedUser$2(username, targetName) {
      return username + " ha rimosso il bando di " + targetName;
    },
    get$unblockDevice() {
      return "Sblocca il dispositivo";
    },
    get$unknownDevice() {
      return "Dispositivo sconosciuto";
    },
    get$unknownEncryptionAlgorithm() {
      return "Algoritmo di crittografia sconosciuto";
    },
    unknownEvent$1(type) {
      return "Evento sconosciuto '" + type + "'";
    },
    get$unpin() {
      return "Rimuovi";
    },
    userAndOthersAreTyping$2(username, count) {
      return username + " e " + count + " altri stanno scrivendo\u2026";
    },
    userAndUserAreTyping$2(username, username2) {
      return username + " e " + username2 + " stanno scrivendo\u2026";
    },
    userIsTyping$1(username) {
      return username + " sta scrivendo\u2026";
    },
    userLeftTheChat$1(username) {
      return "\ud83d\udeaa " + username + " ha abbandonato la chat";
    },
    get$username(_) {
      return "Nome utente";
    },
    userSentUnknownEvent$2(username, type) {
      return username + " ha inviato un evento " + type;
    },
    get$unverified() {
      return "Non verificato";
    },
    get$verified() {
      return "Verificato";
    },
    get$verifyStart() {
      return "Avvia la verifica";
    },
    get$verifySuccess() {
      return "Hai verificato con successo!";
    },
    get$verifyTitle() {
      return "Verifica dell'altro account";
    },
    get$visibleForAllParticipants() {
      return "Visibile a tutti i partecipanti";
    },
    get$visibleForEveryone() {
      return "Visibile a tutti";
    },
    get$voiceMessage() {
      return "Messaggio vocale";
    },
    get$waitingPartnerAcceptRequest() {
      return "In attesa che il partner accetti la richiesta\u2026";
    },
    get$waitingPartnerEmoji() {
      return "In attesa che il partner accetti l'emoji\u2026";
    },
    get$waitingPartnerNumbers() {
      return "In attesa che il partner accetti i numeri\u2026";
    },
    get$warning() {
      return "Attenzione!";
    },
    get$weSentYouAnEmail() {
      return "Ti abbiamo inviato un'e-mail";
    },
    get$whyDoYouWantToReportThis() {
      return "Perch\xe9 vuoi segnalarlo?";
    },
    get$withTheseAddressesRecoveryDescription() {
      return "Con questi indirizzi puoi recuperare la tua password se necessario.";
    },
    get$writeAMessage() {
      return "Scrivi un messaggio\u2026";
    },
    get$yes() {
      return "S\xec";
    },
    get$you() {
      return "Tu";
    },
    get$youAreNoLongerParticipatingInThisChat() {
      return "Non stai pi\xf9 partecipando a questa chat";
    },
    get$youHaveBeenBannedFromThisChat() {
      return "Sei stato/a bandito/a da questa chat";
    },
    get$yourPublicKey() {
      return "La tua chiave pubblica";
    },
    get$messageInfo() {
      return "Informazioni del messaggio";
    },
    get$time(_) {
      return "Tempo";
    },
    get$sender() {
      return "Mittente";
    },
    get$openGallery() {
      return "Apri la galleria";
    },
    get$start(_) {
      return "Inizio";
    },
    get$markAsRead() {
      return "Segna come letto";
    },
    reactedWith$2(sender, reaction) {
      return sender + " ha reagito con " + reaction;
    },
    get$pinMessage() {
      return "Fissa alla stanza";
    },
    get$emojis() {
      return "Emoji";
    },
    get$youRejectedTheInvitation() {
      return "Hai rifiutato l'invito";
    },
    get$youJoinedTheChat() {
      return "Sei entrato/a nella chat";
    },
    get$youAcceptedTheInvitation() {
      return "\ud83d\udc4d Hai accettato l'invito";
    },
    youBannedUser$1(user) {
      return "Hai bannato " + user;
    },
    youHaveWithdrawnTheInvitationFor$1(user) {
      return "Hai revocato l'invito per " + user;
    },
    youInvitedBy$1(user) {
      return "\ud83d\udce9 Sei stato invitato/a da " + user;
    },
    youInvitedUser$1(user) {
      return "\ud83d\udce9 Hai invitato " + user;
    },
    youKicked$1(user) {
      return "\ud83d\udc5e Hai rimosso " + user;
    },
    youUnbannedUser$1(user) {
      return "Hai sbannato " + user;
    },
    hasKnocked$1(user) {
      return "\ud83d\udeaa " + user + " ha bussato";
    },
    get$users() {
      return "Utenti";
    },
    countFiles$1(count) {
      return "" + count + " file";
    },
    get$user() {
      return "Utente";
    },
    get$custom() {
      return "Personalizzato";
    },
    get$noKeyForThisMessage() {
      return "Questo pu\xf2 accadere se il messaggio \xe8 stato inviato prima che hai fatto l'accesso in questo dispositivo.\n\n\xc8 anche possibile che il mittente abbia bloccato il tuo dispositivo o che qualcosa sia andato storto con la tua connessione ad internet.\n\nSei in grado di leggere il messaggio su altre sessioni? Allora puoi trasferire il messaggio da l\xec! Vai su Impostazioni > Dispositivi e verifica che i tuoi dispositivi siano verificati l'un l'altro. Quando aprirai la stanza la prossima volta ed entrambe le sessioni sono in primo piano, le chiavi saranno trasmesse automaticamente.\n\nNon vuoi perdere le chiavi quando ti disconnetti o cambi dispositivo? Assicurati di aver attivato il backup delle chat nelle impostazioni.";
    },
    wasDirectChatDisplayName$1(oldDisplayName) {
      return "Chat vuota (era " + oldDisplayName + ")";
    },
    get$reopenChat() {
      return "Riapri la chat";
    },
    get$noOtherDevicesFound() {
      return "Nessun altro dispositivo trovato";
    },
    fileIsTooBigForServer$1(max) {
      return "Impossibile inviare! Il server supporta solo allegati fino a " + max + ".";
    },
    get$jumpToLastReadMessage() {
      return "Salta all'ultimo messaggio letto";
    },
    get$readUpToHere() {
      return "Letto fino a qui";
    },
    get$jump() {
      return "Salta";
    },
    get$openLinkInBrowser() {
      return "Apri il collegamento nel browser";
    },
    get$setColorTheme() {
      return "Imposta tema colore:";
    },
    get$invite() {
      return "Invitare";
    },
    get$invalidInput() {
      return "Contenuto non valido!";
    },
    wrongPinEntered$1(seconds) {
      return "\xc8 stato inserito il pin sbagliato! Riprova tra " + seconds + " secondi...";
    },
    get$pleaseEnterANumber() {
      return "Per favore inserisci un numero maggiore di 0";
    },
    get$removeDevicesDescription() {
      return "Sarai disconnesso da questo dispositivo e non potrai pi\xf9 ricevere messaggi.";
    },
    get$banUserDescription() {
      return "L'utente sar\xe0 bannato dalla chat e non sar\xe0 in grado di rientrare finch\xe9 non verr\xe0 sbannato.";
    },
    get$unbanUserDescription() {
      return "L'utente potr\xe0 rientrare nella chat.";
    },
    get$kickUserDescription() {
      return "L'utente \xe8 stato rimosso, ma non bannato. Nelle chat pubbliche, l'utente potr\xe0 rientrare quando vuole.";
    },
    get$makeAdminDescription() {
      return "Una volta che fai questo utente amministratore, potresti non essere in grado di rimuoverlo, in quanto avr\xe0 i tuoi stessi privilegi.";
    },
    get$yourGlobalUserIdIs() {
      return "Il tuo ID dell'utente globale \xe8: ";
    },
    noUsersFoundWithQuery$1(query) {
      return 'Sfortunatamente non \xe8 stato trovato nessun utente con "' + query + '". Per favore controlla se hai fatto un errore di battitura.';
    },
    get$knocking() {
      return "Bussare";
    },
    get$nothingFound() {
      return "Non \xe8 stato trovato nulla...";
    },
    get$groupName() {
      return "Nome gruppo";
    },
    get$wrongRecoveryKey() {
      return "Mi dispiace... questa non sembra essere la chiave di recupero corretta.";
    },
    get$startConversation() {
      return "Inizia una conversazione";
    },
    get$commandHint_sendraw() {
      return "Manda un json grezzo";
    },
    get$leaveEmptyToClearStatus() {
      return "Lascia vuoto per cancellare il tuo stato.";
    },
    get$searchForUsers() {
      return "Cerca @utenti...";
    },
    get$pleaseEnterYourCurrentPassword() {
      return "Per favore inserisci la tua password attuale";
    },
    get$newPassword() {
      return "Nuova password";
    },
    get$pleaseChooseAStrongPassword() {
      return "Per favore scegli una password forte";
    },
    get$passwordsDoNotMatch() {
      return "Le password non corrispondono";
    },
    get$passwordIsWrong() {
      return "La password inserita \xe8 sbagliata";
    },
    get$decline() {
      return "Declina";
    },
    get$thisDevice() {
      return "Questo dispositivo:";
    },
    get$initAppError() {
      return "Si \xe8 verificato un errore durante l'inizializzazione dell'app";
    },
    searchIn$1(chat) {
      return 'Cerca nella chat "' + chat + '"...';
    },
    get$searchMore() {
      return "Cerca di pi\xf9...";
    },
    get$gallery() {
      return "Galleria";
    },
    get$files(_) {
      return "File";
    },
    sessionLostBody$2(url, error) {
      return "La tua sessione \xe8 andata persa. Segnala questo errore agli sviluppatori all'indirizzo " + url + ". Il messaggio di errore \xe8: " + error;
    },
    restoreSessionBody$2(url, error) {
      return "L'app ora tenta di ripristinare la sessione dal backup. Segnala questo errore agli sviluppatori all'indirizzo " + url + ". Il messaggio di errore \xe8: " + error;
    },
    get$sendReadReceipts() {
      return "Invia ricevute di lettura";
    },
    get$sendTypingNotificationsDescription() {
      return "Gli altri partecipanti alla chat possono vedere quando stai scrivendo un nuovo messaggio.";
    },
    get$sendReadReceiptsDescription() {
      return "Gli altri partecipanti alla chat possono vedere quando hai letto un messaggio.";
    },
    get$verifyOtherDevice() {
      return "\ud83d\udd10 Verifica altro dispositivo";
    },
    get$verifyOtherDeviceDescription() {
      return "Quando verifichi un altro dispositivo, questi dispositivi possono scambiarsi le chiavi, aumentando la tua sicurezza complessiva. \ud83d\udcaa Quando inizi una verifica, apparir\xe0 un popup nell'app su entrambi i dispositivi. L\xec vedrai una serie di emoji o numeri che dovrai confrontare tra loro. \xc8 meglio avere entrambi i dispositivi a portata di mano prima di iniziare la verifica. \ud83e\udd33";
    },
    acceptedKeyVerification$1(sender) {
      return sender + " ha accettato la verifica della chiave";
    },
    canceledKeyVerification$1(sender) {
      return sender + " ha annullato la verifica della chiave";
    },
    completedKeyVerification$1(sender) {
      return sender + " ha completato la verifica della chiave";
    },
    isReadyForKeyVerification$1(sender) {
      return sender + " \xe8 pronto per la verifica della chiave";
    },
    requestedKeyVerification$1(sender) {
      return sender + " ha richiesto la verifica della chiave";
    },
    startedKeyVerification$1(sender) {
      return sender + " ha avviato la verifica della chiave";
    },
    get$stickers() {
      return "Adesivi";
    },
    get$commandHint_ignore() {
      return "Ignora il Matrix ID fornito";
    },
    get$commandHint_unignore() {
      return "Ignora il Matrix ID specificato";
    },
    thereAreCountUsersBlocked$1(count) {
      return "Al momento ci sono " + count + " utenti bloccati.";
    },
    get$restricted() {
      return "Limitato";
    },
    get$markAsUnread() {
      return "Contrassegna come non letto";
    },
    userLevel$1(level) {
      return "" + level + " - Utente";
    },
    moderatorLevel$1(level) {
      return "" + level + " - Moderatore";
    },
    adminLevel$1(level) {
      return "" + level + " - Amministratore";
    },
    get$changeTheVisibilityOfChatHistory() {
      return "Cambia la visibilit\xe0 della cronologia chat";
    },
    get$changeTheCanonicalRoomAlias() {
      return "Cambia l'indirizzo principale della chat pubblica";
    },
    get$sendRoomNotifications() {
      return "Invia notifiche alla @stanza";
    },
    get$chatPermissionsDescription() {
      return "Definisci quale livello di privilegi \xe8 necessario per determinate azioni in questa chat. I livelli di privilegi 0, 50 e 100 rappresentano solitamente utenti, moderatori e amministratori, ma qualsiasi valore intermedio \xe8 possibile.";
    },
    updateInstalled$1(version) {
      return "\ud83c\udf89 Aggiornamento " + version + " installato!";
    },
    get$sendCanceled() {
      return "Invio annullato";
    },
    get$doesNotSeemToBeAValidHomeserver() {
      return "Non sembra essere un homeserver compatibile. URL sbagliato?";
    },
    get$calculatingFileSize() {
      return "Calcolo della dimensione del file...";
    },
    get$prepareSendingAttachment() {
      return "Preparazione per l'invio dell'allegato...";
    },
    get$sendingAttachment() {
      return "Invio allegato...";
    },
    sendingAttachmentCountOfCount$2(index, $length) {
      return "Invio dell'allegato " + index + " di " + $length + "...";
    },
    serverLimitReached$1(seconds) {
      return "Limite server raggiunto! Attendere " + seconds + " secondi...";
    },
    get$noticeChatBackupDeviceVerification() {
      return "Nota: quando colleghi tutti i tuoi dispositivi al backup della chat, vengono verificati automaticamente.";
    },
    get$continueText() {
      return "Continua";
    },
    get$blur(_) {
      return "Sfocatura:";
    },
    get$opacity(_) {
      return "Opacit\xe0:";
    },
    get$setWallpaper() {
      return "Imposta sfondo";
    },
    get$noContactInformationProvided() {
      return "Il server non fornisce alcuna informazione di contatto valida";
    },
    get$contactServerAdmin() {
      return "Contatta l'amministratore del server";
    },
    get$contactServerSecurity() {
      return "Contatta la sicurezza del server";
    },
    get$supportPage() {
      return "Pagina di supporto";
    },
    get$serverInformation() {
      return "Informazioni sul server:";
    },
    get$name(_) {
      return "Nome";
    },
    get$version(_) {
      return "Versione";
    },
    get$compress() {
      return "Comprimere";
    },
    get$boldText() {
      return "Testo in grassetto";
    },
    get$italicText() {
      return "Testo in corsivo";
    },
    get$strikeThrough() {
      return "Barrato";
    },
    get$pleaseFillOut() {
      return "Si prega di compilare";
    },
    get$invalidUrl() {
      return "URL non valido";
    },
    get$addLink() {
      return "Aggiungi collegamento";
    },
    get$unableToJoinChat() {
      return "Impossibile partecipare alla chat. Forse l'altra parte ha gi\xe0 chiuso la conversazione.";
    },
    get$previous() {
      return "Precedente";
    },
    get$otherPartyNotLoggedIn() {
      return "L'altra parte non \xe8 attualmente connessa e quindi non pu\xf2 ricevere messaggi!";
    },
    get$open(_) {
      return "Apri";
    },
    get$waitingForServer() {
      return "In attesa del server...";
    },
    get$newChatRequest() {
      return "\ud83d\udce9 Nuova richiesta di chat";
    },
    get$contentNotificationSettings() {
      return "Impostazioni del contenuto di notifica";
    },
    get$generalNotificationSettings() {
      return "Impostazioni di notifica generale";
    },
    get$roomNotificationSettings() {
      return "Impostazioni di notifica della stanza";
    },
    get$userSpecificNotificationSettings() {
      return "Impostazioni di notifica specifiche dell'utente";
    },
    get$otherNotificationSettings() {
      return "Altre impostazioni di notifica";
    },
    get$notificationRuleContainsUserName() {
      return "Contiene il nome utente";
    },
    get$notificationRuleContainsUserNameDescription() {
      return "Notifica l'utente quando un messaggio contiene il proprio nome utente.";
    },
    get$notificationRuleMaster() {
      return "Silenzia tutte le notifiche";
    },
    get$notificationRuleMasterDescription() {
      return "Sovrascive tutte le altre regole e disabilita tutte le notifiche.";
    },
    get$notificationRuleSuppressNotices() {
      return "Silenziare i messaggi automatizzati";
    },
    get$notificationRuleSuppressNoticesDescription() {
      return "Silenzia le notifiche da client automatizzati come i bot.";
    },
    get$notificationRuleInviteForMe() {
      return "Inviti per me";
    },
    get$notificationRuleInviteForMeDescription() {
      return "Notifica l'utente quando viene invitato a una stanza.";
    },
    get$notificationRuleMemberEvent() {
      return "Eventi per i membri";
    },
    get$notificationRuleMemberEventDescription() {
      return "Silenzia le notifiche per gli eventi dei membri.";
    },
    get$notificationRuleIsUserMention() {
      return "Menzioni dell'utente";
    },
    get$notificationRuleIsUserMentionDescription() {
      return "Notifica l'utente quando viene menzionato direttamente in un messaggio.";
    },
    get$notificationRuleContainsDisplayName() {
      return "Contiene nome visualizzato";
    },
    get$notificationRuleContainsDisplayNameDescription() {
      return "Notifica l'utente quando un messaggio contiene il proprio nome visualizzato.";
    },
    get$notificationRuleIsRoomMention() {
      return "Menzioni della stanza";
    },
    get$notificationRuleIsRoomMentionDescription() {
      return "Notifica l'utente quando c'\xe8 una menzione della stanza.";
    },
    get$notificationRuleRoomnotif() {
      return "Notifiche della stanza";
    },
    get$notificationRuleRoomnotifDescription() {
      return "Notifica l'utente quando un messaggio contiene '@room'.";
    },
    get$notificationRuleTombstone() {
      return "Tombstone";
    },
    get$notificationRuleTombstoneDescription() {
      return "Notifica all'utente i messaggi di disattivazione della stanza.";
    },
    get$notificationRuleReaction() {
      return "Reazioni";
    },
    get$notificationRuleReactionDescription() {
      return "Silenzia le notifiche per le reazioni.";
    },
    get$notificationRuleRoomServerAcl() {
      return "ACL del server della stanza";
    },
    get$notificationRuleRoomServerAclDescription() {
      return "Silenzia le notifiche per gli elenchi di controllo degli accessi del server della stanza (ACL).";
    },
    get$notificationRuleSuppressEdits() {
      return "Silenzia le modifiche";
    },
    get$notificationRuleSuppressEditsDescription() {
      return "Silenzia le notifiche per i messaggi modificati.";
    },
    get$notificationRuleCall() {
      return "Chiamate";
    },
    get$notificationRuleCallDescription() {
      return "Notifica all'utente le chiamate.";
    },
    get$notificationRuleEncryptedRoomOneToOne() {
      return "Stanze crittografate One-to-One";
    },
    get$notificationRuleEncryptedRoomOneToOneDescription() {
      return "Notifica all'utente i messaggi in stanze crittografate one-to-one.";
    },
    get$notificationRuleRoomOneToOne() {
      return "Stanze One-to-One";
    },
    get$notificationRuleRoomOneToOneDescription() {
      return "Notifica all'utente i messaggi nelle stanze one-to-one.";
    },
    get$notificationRuleMessage() {
      return "Messaggi";
    },
    get$notificationRuleMessageDescription() {
      return "Notifica all'utente i messaggi generali.";
    },
    get$notificationRuleEncrypted() {
      return "Crittografate";
    },
    get$notificationRuleEncryptedDescription() {
      return "Notifica all'utente i messaggi nelle stanze crittografate.";
    },
    get$notificationRuleJitsi() {
      return "Jitsi";
    },
    get$notificationRuleJitsiDescription() {
      return "Notifica all'utente gli eventi del widget Jitsi.";
    },
    get$notificationRuleServerAcl() {
      return "Silenziare gli eventi ACL del server";
    },
    get$notificationRuleServerAclDescription() {
      return "Silenzia le notifiche per gli eventi ACL del server.";
    },
    unknownPushRule$1(rule) {
      return "Regola push '" + rule + "' sconosciuta";
    },
    sentVoiceMessage$2(sender, duration) {
      return "\ud83c\udf99\ufe0f " + duration + " - Voice message from " + sender;
    },
    get$deletePushRuleCanNotBeUndone() {
      return "Se si elimina questa impostazione di notifica, questo non pu\xf2 essere annullato.";
    },
    get$more() {
      return "Di pi\xf9";
    },
    get$shareKeysWith() {
      return "Condividi le chiavi con...";
    },
    get$shareKeysWithDescription() {
      return "Quali dispositivi dovrebbero essere fidati in modo che possano leggere i tuoi messaggi in chat crittografate?";
    },
    get$allDevices() {
      return "Tutti i dispositivi";
    },
    get$crossVerifiedDevicesIfEnabled() {
      return "Verifica incrociata dei dispositivi, se abilitata";
    },
    get$crossVerifiedDevices() {
      return "Dispositivi con verifica incrociata";
    },
    get$verifiedDevicesOnly() {
      return "Solo dispositivi verificati";
    },
    get$optionalMessage() {
      return "Messaggio (opzionale)...";
    },
    get$notSupportedOnThisDevice() {
      return "Non supportato su questo dispositivo";
    },
    get$enterNewChat() {
      return "Inizia nuova chat";
    },
    get$approve() {
      return "Approva";
    },
    get$commandHint_logout() {
      return "Logout your current device";
    },
    get$commandHint_logoutall() {
      return "Logout all active devices";
    },
    get$customReaction() {
      return "Custom reaction";
    },
    writeAMessageLangCodes$2(l1, l2) {
      return "Type in " + l1 + " or " + l2 + "...";
    },
    get$holdForInfo() {
      return "Click and hold for word info.";
    },
    get$greenFeedback() {
      return "That's what I would put!";
    },
    get$yellowFeedback() {
      return "Hm, you can try that and see if it works! To use this word, just click it again.";
    },
    get$redFeedback() {
      return "I don't think that's right...";
    },
    get$itInstructionsTitle() {
      return "I can help you translate!";
    },
    get$itInstructionsBody() {
      return "You can click and hold choices for word info.";
    },
    get$gaTooltip() {
      return "L2 use with grammar assistance";
    },
    get$taTooltip() {
      return "L2 use with translation assistance";
    },
    get$interactiveTranslatorSliderHeader() {
      return "Interactive Translator";
    },
    get$interactiveGrammarSliderHeader() {
      return "Interactive Grammar Checker";
    },
    get$waTooltip() {
      return "L2 use without assistance";
    },
    get$noIdenticalLanguages() {
      return "Please choose different base and target languages";
    },
    get$joinWithClassCode() {
      return "Join course";
    },
    get$languageLevelPreA1() {
      return "True Beginner (Pre A1)";
    },
    get$languageLevelA1() {
      return "Beginner (A1)";
    },
    get$languageLevelA2() {
      return "Elementary (A2)";
    },
    get$languageLevelB1() {
      return "Intermediate (B1)";
    },
    get$languageLevelB2() {
      return "Upper Intermediate (B2)";
    },
    get$languageLevelC1() {
      return "Advanced (C1)";
    },
    get$languageLevelC2() {
      return "Mastery (C2)";
    },
    get$changeTheNameOfTheClass() {
      return "Change the name";
    },
    get$changeTheNameOfTheChat() {
      return "Change the name of the chat";
    },
    get$sorryNoResults() {
      return "Sorry, no results.";
    },
    get$ignoreInThisText() {
      return "Ignore";
    },
    needsItMessage$1(targetLanguage) {
      return "Wait, that's not " + targetLanguage + "! Do you need help translating?";
    },
    get$countryInformation() {
      return "My country";
    },
    get$targetLanguage() {
      return "Target Language";
    },
    get$updateLanguage() {
      return "My languages";
    },
    get$whatLanguageYouWantToLearn() {
      return "What language do you want to learn?";
    },
    get$whatIsYourBaseLanguage() {
      return "What is your base language?";
    },
    get$saveChanges() {
      return "Save changes";
    },
    get$publicProfileTitle() {
      return "Allow my profile to be found in search";
    },
    get$publicProfileDesc() {
      return "By turning on, you enable other users to find your profile in the global search bar and send requests to chat. At this point, you can choose to accept or deny the request.";
    },
    get$errorDisableIT() {
      return "Translation assistance is turned off.";
    },
    get$errorDisableIGC() {
      return "Grammar assistance is turned off.";
    },
    get$errorDisableLanguageAssistance() {
      return "Translation assistance and grammar assistance are turned off.";
    },
    get$errorDisableITUserDesc() {
      return "Click here to update translation assistance settings";
    },
    get$errorDisableIGCUserDesc() {
      return "Click here to update grammar assistance settings";
    },
    get$errorDisableLanguageAssistanceUserDesc() {
      return "Click here to update translation assistance and grammar assistance settings";
    },
    get$errorDisableITClassDesc() {
      return "Translation assistance is turned off for the course that this chat is in.";
    },
    get$errorDisableIGCClassDesc() {
      return "Grammar assistance is turned off for the course that this chat is in.";
    },
    get$error405Title() {
      return "Languages not set";
    },
    get$error405Desc() {
      return "Please set your languages in Main Menu > Learning Settings.";
    },
    get$termsAndConditions() {
      return "Terms and Conditions";
    },
    get$andCertifyIAmAtLeast13YearsOfAge() {
      return " and certify I am at least 16 years of age.";
    },
    get$error502504Title() {
      return "Wow, there are a lot of students online!";
    },
    get$error502504Desc() {
      return "Translation and grammar tools may be slow or unavailable while the Pangea bots catch up.";
    },
    get$error404Title() {
      return "Translation error!";
    },
    get$error404Desc() {
      return "Pangea Bot isn't sure how to translate that...";
    },
    get$errorPleaseRefresh() {
      return "We're looking into it! Please reload and try again.";
    },
    get$connectedToStaging() {
      return "Connected to Staging";
    },
    get$learningSettings() {
      return "Learning settings";
    },
    get$participants() {
      return "Participants";
    },
    get$clickMessageTitle() {
      return "Need help?";
    },
    get$clickMessageBody() {
      return "Click a message for language tools like translation, play back and more!";
    },
    get$allDone() {
      return "All done!";
    },
    get$vocab() {
      return "Vocab";
    },
    get$subscribe(_) {
      return "Subscribe";
    },
    get$getAccess() {
      return "Subscribe now!";
    },
    get$subscriptionDesc() {
      return "Messaging is free! Subscribe to unlock interactive translation, grammar checking and learning analytics.";
    },
    get$subscriptionManagement() {
      return "Subscription Management";
    },
    get$currentSubscription() {
      return "Current Subscription";
    },
    get$cancelSubscription() {
      return "Cancel your subscription";
    },
    get$selectYourPlan() {
      return "Select Your Plan";
    },
    get$subsciptionPlatformTooltip() {
      return "Please login to your original device to manage your subscription plan";
    },
    get$subscriptionManagementUnavailable() {
      return "Subscription management not available";
    },
    get$paymentMethod() {
      return "Payment Method";
    },
    get$paymentHistory() {
      return "Payment History";
    },
    get$emptyChatDownloadWarning() {
      return "Cannot download empty chat";
    },
    get$toggleImmersionMode() {
      return "Immersion Mode";
    },
    get$toggleImmersionModeDesc() {
      return "When enabled, all messages are displayed in your target language. This setting is most useful in language exchanges.";
    },
    get$itToggleDescription() {
      return "This language learning tool will identify words in your base language and help you translate them to your target language. Though rare, the AI can make translation errors.";
    },
    get$igcToggleDescription() {
      return "This language learning tool will identify common spelling, grammar and punctuation errors in your message and suggest corrections. Though rare, the AI can make correction errors.";
    },
    get$originalMessage() {
      return "Original Message";
    },
    get$sentMessage() {
      return "Sent Message";
    },
    get$useType() {
      return "Use Type";
    },
    get$notAvailable() {
      return "Not Available";
    },
    get$taAndGaTooltip() {
      return "L2 use with translation assistance and grammar assistance";
    },
    get$definitionsToolName() {
      return "Word Definitions";
    },
    get$definitionsToolDescription() {
      return "When enabled, words underlined in blue can be clicked for definitions. Click messages to access definitions.";
    },
    get$welcomeBack() {
      return "Welcome back! If you were part of the 2023-2024 pilot, please contact us for your special pilot subscription. If you are a teacher who has (or whose institution has) purchased licenses for your class, contact us for your teacher subscription.";
    },
    get$downloadTxtFile() {
      return "Download Text File";
    },
    get$downloadCSVFile() {
      return "Download CSV File";
    },
    get$promotionalSubscriptionDesc() {
      return "You currently have a lifetime promotional subscription. Message support@pangea.chat for help changing your subscription.";
    },
    originalSubscriptionPlatform$1(purchasePlatform) {
      return "Subscription purchased through " + purchasePlatform;
    },
    get$oneWeekTrial() {
      return "One Week Trial";
    },
    get$downloadXLSXFile() {
      return "Download Excel File";
    },
    get$unkDisplayName() {
      return "Unknown";
    },
    get$wwCountryDisplayName() {
      return "World Wide";
    },
    get$afCountryDisplayName() {
      return "Afghanistan";
    },
    get$axCountryDisplayName() {
      return "Aland Islands";
    },
    get$alCountryDisplayName() {
      return "Albania";
    },
    get$dzCountryDisplayName() {
      return "Algeria";
    },
    get$asCountryDisplayName() {
      return "American Samoa";
    },
    get$adCountryDisplayName() {
      return "Andorra";
    },
    get$aoCountryDisplayName() {
      return "Angola";
    },
    get$aiCountryDisplayName() {
      return "Anguilla";
    },
    get$agCountryDisplayName() {
      return "Antigua and Barbuda";
    },
    get$arCountryDisplayName() {
      return "Argentina";
    },
    get$amCountryDisplayName() {
      return "Armenia";
    },
    get$awCountryDisplayName() {
      return "Aruba";
    },
    get$acCountryDisplayName() {
      return "Ascension Island";
    },
    get$auCountryDisplayName() {
      return "Australia";
    },
    get$atCountryDisplayName() {
      return "Austria";
    },
    get$azCountryDisplayName() {
      return "Azerbaijan";
    },
    get$bsCountryDisplayName() {
      return "Bahamas";
    },
    get$bhCountryDisplayName() {
      return "Bahrain";
    },
    get$bdCountryDisplayName() {
      return "Bangladesh";
    },
    get$bbCountryDisplayName() {
      return "Barbados";
    },
    get$byCountryDisplayName() {
      return "Belarus";
    },
    get$beCountryDisplayName() {
      return "Belgium";
    },
    get$bzCountryDisplayName() {
      return "Belize";
    },
    get$bjCountryDisplayName() {
      return "Benin";
    },
    get$bmCountryDisplayName() {
      return "Bermuda";
    },
    get$btCountryDisplayName() {
      return "Bhutan";
    },
    get$boCountryDisplayName() {
      return "Bolivia";
    },
    get$baCountryDisplayName() {
      return "Bosnia and Herzegovina";
    },
    get$bwCountryDisplayName() {
      return "Botswana";
    },
    get$brCountryDisplayName() {
      return "Brazil";
    },
    get$ioCountryDisplayName() {
      return "British Indian Ocean Territory";
    },
    get$vgCountryDisplayName() {
      return "British Virgin Islands";
    },
    get$bnCountryDisplayName() {
      return "Brunei";
    },
    get$bgCountryDisplayName() {
      return "Bulgaria";
    },
    get$bfCountryDisplayName() {
      return "Burkina Faso";
    },
    get$biCountryDisplayName() {
      return "Burundi";
    },
    get$khCountryDisplayName() {
      return "Cambodia";
    },
    get$cmCountryDisplayName() {
      return "Cameroon";
    },
    get$caCountryDisplayName() {
      return "Canada";
    },
    get$cvCountryDisplayName() {
      return "Cape Verde";
    },
    get$bqCountryDisplayName() {
      return "Caribbean Netherlands";
    },
    get$kyCountryDisplayName() {
      return "Cayman Islands";
    },
    get$cfCountryDisplayName() {
      return "Central African Republic";
    },
    get$tdCountryDisplayName() {
      return "Chad";
    },
    get$clCountryDisplayName() {
      return "Chile";
    },
    get$cnCountryDisplayName() {
      return "China";
    },
    get$cxCountryDisplayName() {
      return "Christmas Island";
    },
    get$ccCountryDisplayName() {
      return "Cocos [Keeling] Islands";
    },
    get$coCountryDisplayName() {
      return "Colombia";
    },
    get$kmCountryDisplayName() {
      return "Comoros";
    },
    get$cdCountryDisplayName() {
      return "Democratic Republic Congo";
    },
    get$cgCountryDisplayName() {
      return "Republic of Congo";
    },
    get$ckCountryDisplayName() {
      return "Cook Islands";
    },
    get$crCountryDisplayName() {
      return "Costa Rica";
    },
    get$ciCountryDisplayName() {
      return "C\xf4te d'Ivoire";
    },
    get$hrCountryDisplayName() {
      return "Croatia";
    },
    get$cuCountryDisplayName() {
      return "Cuba";
    },
    get$cwCountryDisplayName() {
      return "Cura\xe7ao";
    },
    get$cyCountryDisplayName() {
      return "Cyprus";
    },
    get$czCountryDisplayName() {
      return "Czech Republic";
    },
    get$dkCountryDisplayName() {
      return "Denmark";
    },
    get$djCountryDisplayName() {
      return "Djibouti";
    },
    get$dmCountryDisplayName() {
      return "Dominica";
    },
    get$doCountryDisplayName() {
      return "Dominican Republic";
    },
    get$tlCountryDisplayName() {
      return "East Timor";
    },
    get$ecCountryDisplayName() {
      return "Ecuador";
    },
    get$egCountryDisplayName() {
      return "Egypt";
    },
    get$svCountryDisplayName() {
      return "El Salvador";
    },
    get$gqCountryDisplayName() {
      return "Equatorial Guinea";
    },
    get$erCountryDisplayName() {
      return "Eritrea";
    },
    get$eeCountryDisplayName() {
      return "Estonia";
    },
    get$szCountryDisplayName() {
      return "Eswatini";
    },
    get$etCountryDisplayName() {
      return "Ethiopia";
    },
    get$fkCountryDisplayName() {
      return "Falkland Islands";
    },
    get$foCountryDisplayName() {
      return "Faroe Islands";
    },
    get$fjCountryDisplayName() {
      return "Fiji";
    },
    get$fiCountryDisplayName() {
      return "Finland";
    },
    get$frCountryDisplayName() {
      return "France";
    },
    get$gfCountryDisplayName() {
      return "French Guiana";
    },
    get$pfCountryDisplayName() {
      return "French Polynesia";
    },
    get$gaCountryDisplayName() {
      return "Gabon";
    },
    get$gmCountryDisplayName() {
      return "Gambia";
    },
    get$geCountryDisplayName() {
      return "Georgia";
    },
    get$deCountryDisplayName() {
      return "Germany";
    },
    get$ghCountryDisplayName() {
      return "Ghana";
    },
    get$giCountryDisplayName() {
      return "Gibraltar";
    },
    get$grCountryDisplayName() {
      return "Greece";
    },
    get$glCountryDisplayName() {
      return "Greenland";
    },
    get$gdCountryDisplayName() {
      return "Grenada";
    },
    get$gpCountryDisplayName() {
      return "Guadeloupe";
    },
    get$guCountryDisplayName() {
      return "Guam";
    },
    get$gtCountryDisplayName() {
      return "Guatemala";
    },
    get$ggCountryDisplayName() {
      return "Guernsey";
    },
    get$gnCountryDisplayName() {
      return "Guinea Conakry";
    },
    get$gwCountryDisplayName() {
      return "Guinea-Bissau";
    },
    get$gyCountryDisplayName() {
      return "Guyana";
    },
    get$htCountryDisplayName() {
      return "Haiti";
    },
    get$hmCountryDisplayName() {
      return "Heard Island and McDonald Islands";
    },
    get$hnCountryDisplayName() {
      return "Honduras";
    },
    get$hkCountryDisplayName() {
      return "Hong Kong";
    },
    get$huCountryDisplayName() {
      return "Hungary";
    },
    get$isCountryDisplayName() {
      return "Iceland";
    },
    get$inCountryDisplayName() {
      return "India";
    },
    get$idCountryDisplayName() {
      return "Indonesia";
    },
    get$irCountryDisplayName() {
      return "Iran";
    },
    get$iqCountryDisplayName() {
      return "Iraq";
    },
    get$ieCountryDisplayName() {
      return "Ireland";
    },
    get$imCountryDisplayName() {
      return "Isle of Man";
    },
    get$ilCountryDisplayName() {
      return "Israel";
    },
    get$itCountryDisplayName() {
      return "Italy";
    },
    get$jmCountryDisplayName() {
      return "Jamaica";
    },
    get$jpCountryDisplayName() {
      return "Japan";
    },
    get$jeCountryDisplayName() {
      return "Jersey";
    },
    get$joCountryDisplayName() {
      return "Jordan";
    },
    get$kzCountryDisplayName() {
      return "Kazakhstan";
    },
    get$keCountryDisplayName() {
      return "Kenya";
    },
    get$kiCountryDisplayName() {
      return "Kiribati";
    },
    get$xkCountryDisplayName() {
      return "Kosovo";
    },
    get$kwCountryDisplayName() {
      return "Kuwait";
    },
    get$kgCountryDisplayName() {
      return "Kyrgyzstan";
    },
    get$laCountryDisplayName() {
      return "Laos";
    },
    get$lvCountryDisplayName() {
      return "Latvia";
    },
    get$lbCountryDisplayName() {
      return "Lebanon";
    },
    get$lsCountryDisplayName() {
      return "Lesotho";
    },
    get$lrCountryDisplayName() {
      return "Liberia";
    },
    get$lyCountryDisplayName() {
      return "Libya";
    },
    get$liCountryDisplayName() {
      return "Liechtenstein";
    },
    get$ltCountryDisplayName() {
      return "Lithuania";
    },
    get$luCountryDisplayName() {
      return "Luxembourg";
    },
    get$moCountryDisplayName() {
      return "Macau";
    },
    get$mkCountryDisplayName() {
      return "Macedonia";
    },
    get$mgCountryDisplayName() {
      return "Madagascar";
    },
    get$mwCountryDisplayName() {
      return "Malawi";
    },
    get$myCountryDisplayName() {
      return "Malaysia";
    },
    get$mvCountryDisplayName() {
      return "Maldives";
    },
    get$mlCountryDisplayName() {
      return "Mali";
    },
    get$mtCountryDisplayName() {
      return "Malta";
    },
    get$mhCountryDisplayName() {
      return "Marshall Islands";
    },
    get$mqCountryDisplayName() {
      return "Martinique";
    },
    get$mrCountryDisplayName() {
      return "Mauritania";
    },
    get$muCountryDisplayName() {
      return "Mauritius";
    },
    get$ytCountryDisplayName() {
      return "Mayotte";
    },
    get$mxCountryDisplayName() {
      return "Mexico";
    },
    get$fmCountryDisplayName() {
      return "Micronesia";
    },
    get$mdCountryDisplayName() {
      return "Moldova";
    },
    get$mcCountryDisplayName() {
      return "Monaco";
    },
    get$mnCountryDisplayName() {
      return "Mongolia";
    },
    get$meCountryDisplayName() {
      return "Montenegro";
    },
    get$msCountryDisplayName() {
      return "Montserrat";
    },
    get$maCountryDisplayName() {
      return "Morocco";
    },
    get$mzCountryDisplayName() {
      return "Mozambique";
    },
    get$mmCountryDisplayName() {
      return "Myanmar (Burma)";
    },
    get$naCountryDisplayName() {
      return "Namibia";
    },
    get$nrCountryDisplayName() {
      return "Nauru";
    },
    get$npCountryDisplayName() {
      return "Nepal";
    },
    get$nlCountryDisplayName() {
      return "Netherlands";
    },
    get$ncCountryDisplayName() {
      return "New Caledonia";
    },
    get$nzCountryDisplayName() {
      return "New Zealand";
    },
    get$niCountryDisplayName() {
      return "Nicaragua";
    },
    get$neCountryDisplayName() {
      return "Niger";
    },
    get$ngCountryDisplayName() {
      return "Nigeria";
    },
    get$nuCountryDisplayName() {
      return "Niue";
    },
    get$nfCountryDisplayName() {
      return "Norfolk Island";
    },
    get$kpCountryDisplayName() {
      return "North Korea";
    },
    get$mpCountryDisplayName() {
      return "Northern Mariana Islands";
    },
    get$noCountryDisplayName() {
      return "Norway";
    },
    get$omCountryDisplayName() {
      return "Oman";
    },
    get$pkCountryDisplayName() {
      return "Pakistan";
    },
    get$pwCountryDisplayName() {
      return "Palau";
    },
    get$psCountryDisplayName() {
      return "Palestinian Territories";
    },
    get$paCountryDisplayName() {
      return "Panama";
    },
    get$pgCountryDisplayName() {
      return "Papua New Guinea";
    },
    get$pyCountryDisplayName() {
      return "Paraguay";
    },
    get$peCountryDisplayName() {
      return "Peru";
    },
    get$phCountryDisplayName() {
      return "Philippines";
    },
    get$plCountryDisplayName() {
      return "Poland";
    },
    get$ptCountryDisplayName() {
      return "Portugal";
    },
    get$prCountryDisplayName() {
      return "Puerto Rico";
    },
    get$qaCountryDisplayName() {
      return "Qatar";
    },
    get$reCountryDisplayName() {
      return "R\xe9union";
    },
    get$roCountryDisplayName() {
      return "Romania";
    },
    get$ruCountryDisplayName() {
      return "Russia";
    },
    get$rwCountryDisplayName() {
      return "Rwanda";
    },
    get$blCountryDisplayName() {
      return "Saint Barth\xe9lemy";
    },
    get$shCountryDisplayName() {
      return "Saint Helena";
    },
    get$knCountryDisplayName() {
      return "St. Kitts";
    },
    get$lcCountryDisplayName() {
      return "St. Lucia";
    },
    get$mfCountryDisplayName() {
      return "Saint Martin";
    },
    get$pmCountryDisplayName() {
      return "Saint Pierre and Miquelon";
    },
    get$vcCountryDisplayName() {
      return "St. Vincent";
    },
    get$wsCountryDisplayName() {
      return "Samoa";
    },
    get$smCountryDisplayName() {
      return "San Marino";
    },
    get$stCountryDisplayName() {
      return "S\xe3o Tom\xe9 and Pr\xedncipe";
    },
    get$saCountryDisplayName() {
      return "Saudi Arabia";
    },
    get$snCountryDisplayName() {
      return "Senegal";
    },
    get$rsCountryDisplayName() {
      return "Serbia";
    },
    get$scCountryDisplayName() {
      return "Seychelles";
    },
    get$slCountryDisplayName() {
      return "Sierra Leone";
    },
    get$sgCountryDisplayName() {
      return "Singapore";
    },
    get$sxCountryDisplayName() {
      return "Sint Maarten";
    },
    get$skCountryDisplayName() {
      return "Slovakia";
    },
    get$siCountryDisplayName() {
      return "Slovenia";
    },
    get$sbCountryDisplayName() {
      return "Solomon Islands";
    },
    get$soCountryDisplayName() {
      return "Somalia";
    },
    get$zaCountryDisplayName() {
      return "South Africa";
    },
    get$gsCountryDisplayName() {
      return "South Georgia and the South Sandwich Islands";
    },
    get$krCountryDisplayName() {
      return "South Korea";
    },
    get$ssCountryDisplayName() {
      return "South Sudan";
    },
    get$esCountryDisplayName() {
      return "Spain";
    },
    get$lkCountryDisplayName() {
      return "Sri Lanka";
    },
    get$sdCountryDisplayName() {
      return "Sudan";
    },
    get$srCountryDisplayName() {
      return "Suriname";
    },
    get$sjCountryDisplayName() {
      return "Svalbard and Jan Mayen";
    },
    get$seCountryDisplayName() {
      return "Sweden";
    },
    get$chCountryDisplayName() {
      return "Switzerland";
    },
    get$syCountryDisplayName() {
      return "Syria";
    },
    get$twCountryDisplayName() {
      return "Taiwan";
    },
    get$tjCountryDisplayName() {
      return "Tajikistan";
    },
    get$tzCountryDisplayName() {
      return "Tanzania";
    },
    get$thCountryDisplayName() {
      return "Thailand";
    },
    get$tgCountryDisplayName() {
      return "Togo";
    },
    get$tkCountryDisplayName() {
      return "Tokelau";
    },
    get$toCountryDisplayName() {
      return "Tonga";
    },
    get$ttCountryDisplayName() {
      return "Trinidad/Tobago";
    },
    get$tnCountryDisplayName() {
      return "Tunisia";
    },
    get$trCountryDisplayName() {
      return "Turkey";
    },
    get$tmCountryDisplayName() {
      return "Turkmenistan";
    },
    get$tcCountryDisplayName() {
      return "Turks and Caicos Islands";
    },
    get$tvCountryDisplayName() {
      return "Tuvalu";
    },
    get$viCountryDisplayName() {
      return "U.S. Virgin Islands";
    },
    get$ugCountryDisplayName() {
      return "Uganda";
    },
    get$uaCountryDisplayName() {
      return "Ukraine";
    },
    get$aeCountryDisplayName() {
      return "United Arab Emirates";
    },
    get$gbCountryDisplayName() {
      return "United Kingdom";
    },
    get$usCountryDisplayName() {
      return "United States";
    },
    get$uyCountryDisplayName() {
      return "Uruguay";
    },
    get$uzCountryDisplayName() {
      return "Uzbekistan";
    },
    get$vuCountryDisplayName() {
      return "Vanuatu";
    },
    get$vaCountryDisplayName() {
      return "Vatican City";
    },
    get$veCountryDisplayName() {
      return "Venezuela";
    },
    get$vnCountryDisplayName() {
      return "Vietnam";
    },
    get$wfCountryDisplayName() {
      return "Wallis and Futuna";
    },
    get$ehCountryDisplayName() {
      return "Western Sahara";
    },
    get$yeCountryDisplayName() {
      return "Yemen";
    },
    get$zmCountryDisplayName() {
      return "Zambia";
    },
    get$zwCountryDisplayName() {
      return "Zimbabwe";
    },
    get$pay() {
      return "Pay";
    },
    invitedToSpace$2(space, user) {
      return user + " has invited you to join a course: " + space + "! Do you wish to accept?";
    },
    get$youreInvited() {
      return "\ud83d\udce9 You're invited!";
    },
    invitedToChat$2($name, user) {
      return user + " has invited you to join a chat: " + $name + "! Do you wish to accept?";
    },
    get$monthlySubscription() {
      return "Monthly";
    },
    get$yearlySubscription() {
      return "Yearly";
    },
    get$defaultSubscription() {
      return "Pangea Chat Subscription";
    },
    get$freeTrial() {
      return "Free Trial";
    },
    get$noDataFound() {
      return "No data found";
    },
    get$blurMeansTranslateTitle() {
      return "Why is the message blurred?";
    },
    get$blurMeansTranslateBody() {
      return "While Immersion Mode is on, messages that are sent in your base language will be blurred while Pangea Bot translates them to your target language. Immersion Mode can be toggled in individual and course settings.";
    },
    get$bestCorrectionFeedback() {
      return "That's correct!";
    },
    get$distractorFeedback() {
      return "That's not quite right.";
    },
    get$bestAnswerFeedback() {
      return "That's correct!";
    },
    get$definitionDefaultPrompt() {
      return "What does this word mean?";
    },
    get$practiceDefaultPrompt() {
      return "What is the best answer?";
    },
    get$correctionDefaultPrompt() {
      return "What is the best replacement?";
    },
    get$reportToTeacher() {
      return "Who do you want to report this message to?";
    },
    reportMessageTitle$3(reportingUserId, reportedUserId, roomName) {
      return reportingUserId + " has reported a message from " + reportedUserId + " in the chat " + roomName;
    },
    reportMessageBody$2(reportedMessage, reason) {
      return "Message: " + reportedMessage + "\nReason: " + reason;
    },
    get$noTeachersFound() {
      return "No teachers found to report to";
    },
    trialExpiration$1(expiration) {
      return "Your free trial expires on " + expiration;
    },
    get$freeTrialDesc() {
      return "New users recieve a one week free trial of Pangea Chat";
    },
    get$activateTrial() {
      return "Free 7-Day Trial";
    },
    get$successfullySubscribed() {
      return "You have successfully subscribed!";
    },
    get$clickToManageSubscription() {
      return "Click here to manage your subscription.";
    },
    pleaseChooseAtLeastChars$1(min) {
      return "Please choose at least " + min + " characters.";
    },
    get$pleaseEnterValidEmail() {
      return "Please enter a valid email address.";
    },
    get$pleaseChooseAUsername() {
      return "Please choose a username";
    },
    get$listen() {
      return "Listen";
    },
    get$trialPeriodExpired() {
      return "Your trial period has expired";
    },
    get$subscribedToUnlockTools() {
      return "Subscribe to unlock interactive translation and grammar checking, audio playback, personalized practice activities, and learning analytics!";
    },
    get$translationTooltip() {
      return "Translate";
    },
    get$speechToTextTooltip() {
      return "Transcript";
    },
    get$kickBotWarning() {
      return "Kicking Pangea Bot will remove the conversation bot from this chat.";
    },
    get$refresh(_) {
      return "Refresh";
    },
    get$updatePhoneOS() {
      return "You may need to update your device's OS version.";
    },
    get$autoIGCToolName() {
      return "Run Pangea writing assistance automatically";
    },
    get$autoIGCToolDescription() {
      return "Automatically run Pangea Chat grammar and translation writing assistance before sending my message.";
    },
    get$tooltipInstructionsTitle() {
      return "Not sure what that does?";
    },
    get$tooltipInstructionsBrowserBody() {
      return "Hover over items to view tooltips.";
    },
    get$chatCapacity() {
      return "Chat capacity";
    },
    get$roomFull() {
      return "This room is already at capacity.";
    },
    get$chatCapacityHasBeenChanged() {
      return "Chat capacity changed";
    },
    chatCapacitySetTooLow$1(count) {
      return "Chat capacity must be at least " + count + ".";
    },
    get$chatCapacityExplanation() {
      return "Chat capacity limits the number of members allowed in a chat.";
    },
    get$enterNumber() {
      return "Please enter a whole number value.";
    },
    get$buildTranslation() {
      return "Build your translation from the choices above";
    },
    get$practice() {
      return "Practice";
    },
    get$noLanguagesSet() {
      return "No languages set";
    },
    get$speechToTextBody() {
      return "For voice messages, you can see a transcript as well as the speaker's Words Per Minute score.";
    },
    get$versionNotFound() {
      return "Version Not Found";
    },
    get$fetchingVersion() {
      return "Fetching version...";
    },
    get$versionFetchError() {
      return "Error fetching version";
    },
    versionText$2(version, buildNumber) {
      return "Version: " + version + "+" + buildNumber;
    },
    get$l1TranslationBody() {
      return "Messages in your base language will not be translated.";
    },
    get$deleteSubscriptionWarningTitle() {
      return "You have an active subscription";
    },
    get$deleteSubscriptionWarningBody() {
      return "Deleting your account will not automatically cancel your subscription.";
    },
    get$manageSubscription() {
      return "Manage Subscription";
    },
    get$error520Title() {
      return "Please try again.";
    },
    get$error520Desc() {
      return "Sorry, we could not understand your message...";
    },
    get$level(_) {
      return "Level";
    },
    get$translationChoicesBody() {
      return "Click and hold an option for a hint.";
    },
    get$grammar() {
      return "Grammar";
    },
    get$contactHasBeenInvitedToTheChat() {
      return "Contact has been invited to the chat";
    },
    get$inviteChat() {
      return "\ud83d\udce8 Invite chat";
    },
    get$chatName() {
      return "Chat name";
    },
    get$clickTheWordAgainToDeselect() {
      return "Click the selected word to deselect it.";
    },
    get$l2SupportNa() {
      return "Not Available";
    },
    get$l2SupportAlpha() {
      return "Alpha";
    },
    get$l2SupportBeta() {
      return "Beta";
    },
    get$l2SupportFull() {
      return "Full";
    },
    get$missingVoiceTitle() {
      return "Missing voice";
    },
    get$voiceNotAvailable() {
      return "You don't have a voice installed for this language.";
    },
    get$playAudio() {
      return "Play";
    },
    get$stop(_) {
      return "Stop";
    },
    get$grammarCopyPOSsconj() {
      return "Subordinating Conjunction";
    },
    get$grammarCopyPOSnum() {
      return "Number";
    },
    get$grammarCopyPOSverb() {
      return "Verb";
    },
    get$grammarCopyPOSaffix() {
      return "Affix";
    },
    get$grammarCopyPOSpart() {
      return "Particle";
    },
    get$grammarCopyPOSadj() {
      return "Adjective";
    },
    get$grammarCopyPOScconj() {
      return "Coordinating Conjunction";
    },
    get$grammarCopyPOSpunct() {
      return "Punctuation";
    },
    get$grammarCopyPOSadv() {
      return "Adverb";
    },
    get$grammarCopyPOSaux() {
      return "Auxiliary";
    },
    get$grammarCopyPOSspace() {
      return "Space";
    },
    get$grammarCopyPOSsym() {
      return "Symbol";
    },
    get$grammarCopyPOSdet() {
      return "Determiner";
    },
    get$grammarCopyPOSpron() {
      return "Pronoun";
    },
    get$grammarCopyPOSadp() {
      return "Adposition";
    },
    get$grammarCopyPOSpropn() {
      return "Proper Noun";
    },
    get$grammarCopyPOSnoun() {
      return "Noun";
    },
    get$grammarCopyPOSintj() {
      return "Interjection";
    },
    get$grammarCopyPOSx() {
      return "Other";
    },
    get$grammarCopyGENDERfem() {
      return "Feminine";
    },
    get$grammarCopyPERSON2() {
      return "Second Person";
    },
    get$grammarCopyMOODimp() {
      return "Imperative";
    },
    get$grammarCopyPUNCTTYPEqest() {
      return "Question";
    },
    get$grammarCopyASPECTperf() {
      return "Perfect";
    },
    get$grammarCopyCASEaccnom() {
      return "Accusative, Nominative";
    },
    get$grammarCopyCASEobl() {
      return "Oblique";
    },
    get$grammarCopyVOICEact() {
      return "Active";
    },
    get$grammarCopyPUNCTTYPEbrck() {
      return "Bracket";
    },
    get$grammarCopyNOUNTYPEart() {
      return "Article";
    },
    get$grammarCopyNUMBERsing() {
      return "Singular";
    },
    get$grammarCopyGENDERmasc() {
      return "Masculine";
    },
    get$grammarCopyVERBTYPEmod() {
      return "Modal";
    },
    get$grammarCopyADVTYPEadverbial() {
      return "Adverbial";
    },
    get$grammarCopyTENSEperi() {
      return "Periphrastic";
    },
    get$grammarCopyNUMFORMdigit() {
      return "Digit";
    },
    get$grammarCopyNOUNTYPEnot_proper() {
      return "Not Proper";
    },
    get$grammarCopyNUMTYPEcard() {
      return "Cardinal";
    },
    get$grammarCopyNOUNTYPEprop() {
      return "Proper";
    },
    get$grammarCopyPUNCTTYPEdash() {
      return "Dash";
    },
    get$grammarCopyPUNCTTYPEyes() {
      return "Yes";
    },
    get$grammarCopyPUNCTTYPEsemi() {
      return "Semicolon";
    },
    get$grammarCopyPUNCTTYPEcomm() {
      return "Comma";
    },
    get$grammarCopyMOODcnd() {
      return "Conditional";
    },
    get$grammarCopyCASEacc() {
      return "Accusative";
    },
    get$grammarCopyPARTTYPEpart() {
      return "Partitive";
    },
    get$grammarCopyTENSEpast() {
      return "Past";
    },
    get$grammarCopyDEGREEsup() {
      return "Superlative";
    },
    get$grammarCopyPUNCTTYPEcolo() {
      return "Colon";
    },
    get$grammarCopyPERSON3() {
      return "Third Person";
    },
    get$grammarCopyNUMBERplur() {
      return "Plural";
    },
    get$grammarCopyPRONTYPEnpr() {
      return "Proper Noun";
    },
    get$grammarCopyPRONTYPEinterrogative() {
      return "Interrogative";
    },
    get$grammarCopyPOLITEinfm() {
      return "Informal";
    },
    get$grammarCopyADVTYPEtim() {
      return "Time";
    },
    get$grammarCopyPOLARITYneg() {
      return "Negative";
    },
    get$grammarCopyNUMTYPEtot() {
      return "Total";
    },
    get$grammarCopyADVTYPEadnomial() {
      return "Adnominal";
    },
    get$grammarCopyASPECTprog() {
      return "Progressive";
    },
    get$grammarCopyMOODsub() {
      return "Subjunctive";
    },
    get$grammarCopyVERBFORMcomplementive() {
      return "Complementive";
    },
    get$grammarCopyCASEnom() {
      return "Nominative";
    },
    get$grammarCopyTENSEfut() {
      return "Future";
    },
    get$grammarCopyCASEdat() {
      return "Dative";
    },
    get$grammarCopyTENSEpres() {
      return "Present";
    },
    get$grammarCopyGENDERneut() {
      return "Neuter";
    },
    get$grammarCopyPRONTYPErel() {
      return "Relative";
    },
    get$grammarCopyVERBFORMfinalEnding() {
      return "Final Ending";
    },
    get$grammarCopyPRONTYPEdem() {
      return "Demonstrative";
    },
    get$grammarCopyPREPCASEpre() {
      return "Prepositional";
    },
    get$grammarCopyVERBFORMfin() {
      return "Finite";
    },
    get$grammarCopyDEGREEpos() {
      return "Positive";
    },
    get$grammarCopyPUNCTTYPEquot() {
      return "Quotation";
    },
    get$grammarCopyVERBFORMger() {
      return "Gerund";
    },
    get$grammarCopyVOICEpass() {
      return "Passive";
    },
    get$grammarCopyCASEgen() {
      return "Genitive";
    },
    get$grammarCopyTENSEprs() {
      return "Present";
    },
    get$grammarCopyDEFINITEdef() {
      return "Definite";
    },
    get$grammarCopyNUMTYPEord() {
      return "Ordinal";
    },
    get$grammarCopyCASEins() {
      return "Instrumental";
    },
    get$grammarCopyVERBFORMinf() {
      return "Infinitive";
    },
    get$grammarCopyVERBFORMaux() {
      return "Auxiliary";
    },
    get$grammarCopyNUMFORMlong() {
      return "Long";
    },
    get$grammarCopyCASEloc() {
      return "Locative";
    },
    get$grammarCopyMOODind() {
      return "Indicative";
    },
    get$grammarCopyDEGREEcmp() {
      return "Comparative";
    },
    get$grammarCopyCASErelativeCase() {
      return "Relative";
    },
    get$grammarCopyPUNCTTYPEexcl() {
      return "Exclamative";
    },
    get$grammarCopyPERSON1() {
      return "First Person";
    },
    get$grammarCopyPUNCTSIDEini() {
      return "Initial";
    },
    get$grammarCopyGENDERperson() {
      return "Person";
    },
    get$grammarCopyFOREIGNyes() {
      return "Foreign";
    },
    get$grammarCopyVOICEvoice() {
      return "Voice";
    },
    get$grammarCopyVERBTYPEverbType() {
      return "Verb";
    },
    get$grammarCopyPOSSpass() {
      return "Possessive";
    },
    get$grammarCopyPREPCASEprepCase() {
      return "Prepositional";
    },
    get$grammarCopyNUMTYPEnumType() {
      return "Numeral";
    },
    get$grammarCopyNOUNTYPEnounType() {
      return "Noun";
    },
    get$grammarCopyREFLEXreflex() {
      return "Reflexive";
    },
    get$grammarCopyPRONTYPEpronType() {
      return "Pronoun";
    },
    get$grammarCopyPUNCTSIDEpunctSide() {
      return "Punctuation Side";
    },
    get$grammarCopyVERBFORMverbForm() {
      return "Verb";
    },
    get$grammarCopyGENDERgender() {
      return "Gender";
    },
    get$grammarCopyMOODmood() {
      return "Mood";
    },
    get$grammarCopyASPECTaspect() {
      return "Aspect";
    },
    get$grammarCopyPUNCTTYPEpunctType() {
      return "Punctuation";
    },
    get$grammarCopyTENSEtense() {
      return "Tense";
    },
    get$grammarCopyDEGREEdegree() {
      return "Degree";
    },
    get$grammarCopyPOLITEpolite() {
      return "Politeness";
    },
    get$grammarCopyADVTYPEadvType() {
      return "Adverb";
    },
    get$grammarCopyNUMFORMnumber() {
      return "Number";
    },
    get$grammarCopyCONJTYPEconjType() {
      return "Conjunction";
    },
    get$grammarCopyPOLARITYpolarity() {
      return "Polarity";
    },
    get$grammarCopyCASEcase() {
      return "Case";
    },
    get$grammarCopyDEFINITEdefinite() {
      return "Definiteness";
    },
    get$grammarCopyNUMFORMnumForm() {
      return "Numeral";
    },
    get$grammarCopyPRONTYPEadn() {
      return "Adnominal";
    },
    get$grammarCopyVOCvoc() {
      return "Vocative";
    },
    get$grammarCopyCMPLcmpl() {
      return "Complementizer";
    },
    get$grammarCopyADVadv() {
      return "Adverbial";
    },
    get$grammarCopyMOODjus() {
      return "Jussive";
    },
    get$grammarCopyGENDERcom() {
      return "Common";
    },
    get$grammarCopyREFLEXrflx() {
      return "Reflexive";
    },
    get$grammarCopyPARTTYPEpar() {
      return "Partitive";
    },
    get$grammarCopySPCspc() {
      return "Specific";
    },
    get$grammarCopyTENSEpqp() {
      return "Pluperfect";
    },
    get$grammarCopyREFLEXref() {
      return "Reflexive";
    },
    get$grammarCopyPUNCTTYPEnshrt() {
      return "Short";
    },
    get$grammarCopyNUMBERdual() {
      return "Dual";
    },
    get$grammarCopyNUMFORMlng() {
      return "Long";
    },
    get$grammarCopyVOICEmid() {
      return "Middle";
    },
    get$grammarCopyINTRELintRel() {
      return "Interrogative, Relative";
    },
    get$grammarCopyINTint() {
      return "Interrogative";
    },
    get$grammarCopyVOICEcaus() {
      return "Causative";
    },
    get$grammarCopyUnknown() {
      return "Unknown";
    },
    get$grammarCopyEVIDENTevident() {
      return "Evidentiality";
    },
    get$grammarCopyNUMFORMnumberPsor() {
      return "Possessor's Number";
    },
    get$grammarCopyASPECThab() {
      return "Habitual";
    },
    get$grammarCopyCASEabl() {
      return "Ablative";
    },
    get$grammarCopyCASEall() {
      return "Allative";
    },
    get$grammarCopyCASEess() {
      return "Essive";
    },
    get$grammarCopyCASEtra() {
      return "Translative";
    },
    get$grammarCopyCASEequ() {
      return "Equative";
    },
    get$grammarCopyCASEdis() {
      return "Distributive";
    },
    get$grammarCopyCASEabs() {
      return "Absolutive";
    },
    get$grammarCopyCASEerg() {
      return "Ergative";
    },
    get$grammarCopyCASEcau() {
      return "Causal";
    },
    get$grammarCopyCASEben() {
      return "Benefactive";
    },
    get$grammarCopyCASEtem() {
      return "Temporal";
    },
    get$grammarCopyCONJTYPEcoord() {
      return "Coordinating";
    },
    get$grammarCopyDEFINITEcons() {
      return "Construct State";
    },
    get$grammarCopyDEGREEabs() {
      return "Absolute Degree";
    },
    get$grammarCopyEVIDENTfh() {
      return "Factual Evidentiality";
    },
    get$grammarCopyEVIDENTnfh() {
      return "Non-factual Evidentiality";
    },
    get$grammarCopyMOODopt() {
      return "Optative";
    },
    get$grammarCopyMOODadm() {
      return "Admirative";
    },
    get$grammarCopyMOODdes() {
      return "Desiderative";
    },
    get$grammarCopyMOODnec() {
      return "Necessitative";
    },
    get$grammarCopyMOODpot() {
      return "Potential";
    },
    get$grammarCopyMOODprp() {
      return "Propositive";
    },
    get$grammarCopyMOODqot() {
      return "Quotative";
    },
    get$grammarCopyNUMFORMword() {
      return "Word Form";
    },
    get$grammarCopyNUMFORMroman() {
      return "Roman Numeral";
    },
    get$grammarCopyNUMFORMletter() {
      return "Letter Form";
    },
    get$grammarCopyNUMTYPEmult() {
      return "Multiplicative";
    },
    get$grammarCopyNUMTYPEfrac() {
      return "Fractional";
    },
    get$grammarCopyNUMTYPEsets() {
      return "Set";
    },
    get$grammarCopyNUMTYPErange() {
      return "Range";
    },
    get$grammarCopyNUMTYPEdist() {
      return "Distributive";
    },
    get$grammarCopyNUMBERtri() {
      return "Trial";
    },
    get$grammarCopyNUMBERpauc() {
      return "Paucal";
    },
    get$grammarCopyNUMBERgrpa() {
      return "Greater Paucal";
    },
    get$grammarCopyNUMBERgrpl() {
      return "Greater Plural";
    },
    get$grammarCopyNUMBERinv() {
      return "Inverse";
    },
    get$grammarCopyPERSON0() {
      return "Zero";
    },
    get$grammarCopyPERSON4() {
      return "Fourth";
    },
    get$grammarCopyPOLITEform() {
      return "Formal";
    },
    get$grammarCopyPOLITEelev() {
      return "Elevated";
    },
    get$grammarCopyPOLITEhumb() {
      return "Humble";
    },
    get$grammarCopyPRONTYPEemp() {
      return "Emphatic";
    },
    get$grammarCopyPRONTYPEexc() {
      return "Exclamative";
    },
    get$grammarCopyPRONTYPErcp() {
      return "Reciprocal";
    },
    get$grammarCopyPRONTYPEintRelPronType() {
      return "Interrogative-Relative";
    },
    get$grammarCopyTENSEaor() {
      return "Aorist";
    },
    get$grammarCopyTENSEeps() {
      return "Epistemic";
    },
    get$grammarCopyTENSEprosp() {
      return "Prospective";
    },
    get$grammarCopyVERBFORMpart() {
      return "Participle";
    },
    get$grammarCopyVERBFORMconv() {
      return "Converb";
    },
    get$grammarCopyVERBFORMvnoun() {
      return "Verbal Noun";
    },
    get$grammarCopyVOICEantip() {
      return "Antipassive";
    },
    get$grammarCopyVOICEcauVoice() {
      return "Causative";
    },
    get$grammarCopyVOICedir() {
      return "Direct";
    },
    get$grammarCopyVOICEinvVoice() {
      return "Inverse";
    },
    get$grammarCopyVOICErcpVoice() {
      return "Reciprocal";
    },
    get$grammarCopyPOS() {
      return "Part of Speech";
    },
    get$grammarCopyGENDER() {
      return "Gender";
    },
    get$grammarCopyPERSON() {
      return "Person";
    },
    get$grammarCopyMOOD() {
      return "Mood";
    },
    get$grammarCopyPUNCTTYPE() {
      return "Punctuation Type";
    },
    get$grammarCopyASPECT() {
      return "Aspect";
    },
    get$grammarCopyCASE() {
      return "Case";
    },
    get$grammarCopyVOICE() {
      return "Voice";
    },
    get$grammarCopyNOUNTYPE() {
      return "Noun Type";
    },
    get$grammarCopyVERBTYPE() {
      return "Verb Type";
    },
    get$grammarCopyADVTYPE() {
      return "Adverb Type";
    },
    get$grammarCopyNUMFORM() {
      return "Numeral Form";
    },
    get$grammarCopyNUMTYPE() {
      return "Numeral Type";
    },
    get$grammarCopyNUMBER() {
      return "Number";
    },
    get$grammarCopyDEFINITE() {
      return "Definiteness";
    },
    get$grammarCopyDEGREE() {
      return "Degree";
    },
    get$grammarCopyEVIDENT() {
      return "Evidentiality";
    },
    get$grammarCopyFOREIGN() {
      return "Foreign";
    },
    get$grammarCopyPOLARITY() {
      return "Polarity";
    },
    get$grammarCopyPOLITE() {
      return "Politeness";
    },
    get$grammarCopyPREPCASE() {
      return "Prepositional Case";
    },
    get$grammarCopyPRONTYPE() {
      return "Pronoun Type";
    },
    get$grammarCopyPUNCTSIDE() {
      return "Punctuation Side";
    },
    get$grammarCopyREFLEX() {
      return "Reflexive";
    },
    get$grammarCopyTENSE() {
      return "Tense";
    },
    get$grammarCopyVERBFORM() {
      return "Verb Form";
    },
    get$grammarCopyCONJTYPE() {
      return "Conjunction Type";
    },
    get$grammarCopyUNKNOWN() {
      return "Unknown";
    },
    get$grammarCopyNUMBERPSOR() {
      return "Possessor's Number";
    },
    get$grammarCopyPOSS() {
      return "Possessive";
    },
    get$grammarCopyASPECTimp() {
      return "Imperfective Aspect";
    },
    get$grammarCopyCASEvoc() {
      return "Vocative";
    },
    get$grammarCopyCASEcom() {
      return "Comitative";
    },
    get$grammarCopyCASEpar() {
      return "Partitive";
    },
    get$grammarCopyCASEadv() {
      return "Adverbial";
    },
    get$grammarCopyCASEref() {
      return "Referential";
    },
    get$grammarCopyCASErel() {
      return "Relative";
    },
    get$grammarCopyCASEsub() {
      return "Subessive";
    },
    get$grammarCopyCASEsup() {
      return "Superessive";
    },
    get$grammarCopyCASEaccdat() {
      return "Accusative-Dative";
    },
    get$grammarCopyCASEpre() {
      return "Prepositional";
    },
    get$grammarCopyCONJTYPEsub() {
      return "Subordinating";
    },
    get$grammarCopyCONJTYPEcmp() {
      return "Comparative";
    },
    get$grammarCopyDEFINITEind() {
      return "Indefinite";
    },
    get$grammarCopyMOODint() {
      return "Interrogative Mood";
    },
    get$grammarCopyNOUNTYPEcomm() {
      return "Common Noun";
    },
    get$grammarCopyNUMBERPSORsing() {
      return "Possessor's Singular";
    },
    get$grammarCopyNUMBERPSORplur() {
      return "Possessor's Plural";
    },
    get$grammarCopyNUMBERPSORdual() {
      return "Possessor's Dual";
    },
    get$grammarCopyPOLARITYpos() {
      return "Positive Polarity";
    },
    get$grammarCopyPOSSyes() {
      return "Possessive";
    },
    get$grammarCopyPREPCASEnpr() {
      return "Non-prepositional";
    },
    get$grammarCopyPRONTYPEprs() {
      return "Personal";
    },
    get$grammarCopyPRONTYPEint() {
      return "Interrogative";
    },
    get$grammarCopyPRONTYPEtot() {
      return "Total";
    },
    get$grammarCopyPRONTYPEneg() {
      return "Negative";
    },
    get$grammarCopyPRONTYPEart() {
      return "Article";
    },
    get$grammarCopyPRONTYPEind() {
      return "Indefinite";
    },
    get$grammarCopyPRONTYPEintrel() {
      return "Interrogative-Relative";
    },
    get$grammarCopyPUNCTSIDEfin() {
      return "Final Punctuation";
    },
    get$grammarCopyPUNCTTYPEperi() {
      return "Period";
    },
    get$grammarCopyREFLEXyes() {
      return "Reflexive";
    },
    get$grammarCopyTENSEimp() {
      return "Imperfect";
    },
    get$grammarCopyVERBFORMsup() {
      return "Supine";
    },
    get$grammarCopyVERBFORMadn() {
      return "Adnominal";
    },
    get$grammarCopyVERBFORMlng() {
      return "Long";
    },
    get$grammarCopyVERBFORMshrt() {
      return "Short";
    },
    get$grammarCopyVERBTYPEcaus() {
      return "Causative Verb";
    },
    get$grammarCopyVOICEcau() {
      return "Causative";
    },
    get$grammarCopyVOICEdir() {
      return "Direct";
    },
    get$grammarCopyVOICEinv() {
      return "Inverse";
    },
    get$grammarCopyVOICErcp() {
      return "Reciprocal";
    },
    get$other() {
      return "Other";
    },
    levelShort$1(level) {
      return "LVL " + level;
    },
    get$clickBestOption() {
      return "Choose the best options to translate your message!";
    },
    get$completeActivitiesToUnlock() {
      return "Complete at least one activity to unlock the translation!";
    },
    get$downloadGroupText() {
      return "Download group text";
    },
    get$notificationsOn() {
      return "Notifications on";
    },
    get$notificationsOff() {
      return "Notifications off";
    },
    get$createChatAndInviteUsers() {
      return "Create chat and invite users";
    },
    get$updatedNewSpaceDescription() {
      return "Courses allow you to consolidate your chats and build private or public communities.";
    },
    get$enterCodeToJoin() {
      return "Enter code to join";
    },
    get$updateNow() {
      return "Update Now";
    },
    get$updateLater() {
      return "Later";
    },
    get$constructUseWaDesc() {
      return "Used without help";
    },
    get$constructUseGaDesc() {
      return "Grammar assistance";
    },
    get$constructUseTaDesc() {
      return "Translation assistance";
    },
    get$constructUseUnkDesc() {
      return "Unknown";
    },
    get$constructUseCorITDesc() {
      return "Correct in translation";
    },
    get$constructUseIgnITDesc() {
      return "Ignored in translation";
    },
    get$constructUseIncITDesc() {
      return "Incorrect in translation";
    },
    get$constructUseIgnIGCDesc() {
      return "Ignored in grammar correction";
    },
    get$constructUseCorIGCDesc() {
      return "Correct in grammar correction";
    },
    get$constructUseIncIGCDesc() {
      return "Incorrect in grammar correction";
    },
    get$constructUseCorPADesc() {
      return "Correct in word meaning activity";
    },
    get$constructUseIgnPADesc() {
      return "Ignored in word meaning activity";
    },
    get$constructUseIncPADesc() {
      return "Incorrect in word meaning activity";
    },
    get$constructUseCorWLDesc() {
      return "Correct in word listening activity";
    },
    get$constructUseIncWLDesc() {
      return "Incorrect in word listening activity";
    },
    get$constructUseIngWLDesc() {
      return "Ignored in word listening activity";
    },
    get$constructUseCorHWLDesc() {
      return "Correct in hidden word activity";
    },
    get$constructUseIncHWLDesc() {
      return "Incorrect in hidden word activity";
    },
    get$constructUseIgnHWLDesc() {
      return "Ignored in hidden word activity";
    },
    get$constructUseCorLDesc() {
      return "Correct in lemma activity";
    },
    get$constructUseIncLDesc() {
      return "Incorrect in lemma activity";
    },
    get$constructUseIgnLDesc() {
      return "Ignored in lemma activity";
    },
    get$constructUseCorMDesc() {
      return "Correct in grammar activity";
    },
    get$constructUseIncMDesc() {
      return "Incorrect in grammar activity";
    },
    get$constructUseIgnMDesc() {
      return "Ignored in grammar activity";
    },
    get$constructUseEmojiDesc() {
      return "Correct in emoji activity";
    },
    get$constructUseCollected() {
      return "Collected in chat";
    },
    get$constructUseNanDesc() {
      return "Not applicable";
    },
    xpIntoLevel$2(currentXP, maxXP) {
      return "" + currentXP + " / " + maxXP + " XP";
    },
    get$enableTTSToolName() {
      return "Enabled text-to-speech";
    },
    get$enableTTSToolDescription() {
      return "Allow the app to generate text-to-speech output for portions of text in your target language.";
    },
    get$yourUsername() {
      return "Your username";
    },
    get$yourEmail() {
      return "Your email";
    },
    get$iWantToLearn() {
      return "I want to learn";
    },
    get$pleaseEnterEmail() {
      return "Please enter a valid email address.";
    },
    get$myBaseLanguage() {
      return "My base language";
    },
    get$meaningSectionHeader() {
      return "Meaning:";
    },
    get$formSectionHeader() {
      return "Forms used in chats:";
    },
    get$writingExercisesTooltip() {
      return "Writing";
    },
    get$listeningExercisesTooltip() {
      return "Listening";
    },
    get$readingExercisesTooltip() {
      return "Reading";
    },
    get$meaningNotFound() {
      return "Meaning could not be found.";
    },
    get$chooseBaseForm() {
      return "Choose the base form";
    },
    get$notTheCodeError() {
      return "Sorry, that's not the code!";
    },
    get$totalXP() {
      return "Total XP";
    },
    get$numLemmas() {
      return "Total number of lemmas";
    },
    get$numLemmasUsedCorrectly() {
      return "Number of lemmas used correctly at least once";
    },
    get$numLemmasUsedIncorrectly() {
      return "Number of lemmas used correctly 0 times";
    },
    get$numLemmasSmallXP() {
      return "Number of lemmas with 0 - 30 XP";
    },
    get$numLemmasMediumXP() {
      return "Number of lemmas with 31 - 200 XP";
    },
    get$numLemmasLargeXP() {
      return "Number of lemmas with > 200 XP";
    },
    get$numGrammarConcepts() {
      return "Number of grammar concepts";
    },
    get$listGrammarConcepts() {
      return "Grammar concepts";
    },
    get$listGrammarConceptsUsedCorrectly() {
      return "Grammar concepts used correctly in original messages at least 80% of the time";
    },
    get$listGrammarConceptsUsedIncorrectly() {
      return "Grammar concepts used correctly in original messages less than 80% of the time";
    },
    get$listGrammarConceptsUseCorrectlySystemGenerated() {
      return "Grammar concepts chosen correctly from system-generated suggestions at least 80% of the time";
    },
    get$listGrammarConceptsUseIncorrectlySystemGenerated() {
      return "Grammar concepts chosen correctly from system-generated suggestions less than 80% of the time";
    },
    get$listGrammarConceptsSmallXP() {
      return "Grammar concepts with 0-50 xp";
    },
    get$listGrammarConceptsMediumXP() {
      return "Grammar concepts with 51-200 xp";
    },
    get$listGrammarConceptsLargeXP() {
      return "Grammar concepts 201-500 xp";
    },
    get$listGrammarConceptsHugeXP() {
      return "Grammar concepts >500 xp";
    },
    get$numMessagesSent() {
      return "Number of messages sent";
    },
    get$numWordsTyped() {
      return "Number of words typed in original messages";
    },
    get$numCorrectChoices() {
      return "Number of correct words chosen from system-generated suggestions";
    },
    get$numIncorrectChoices() {
      return "Number of incorrect words chosen from system-generated suggestions";
    },
    get$commaSeparatedFile() {
      return "CSV";
    },
    get$excelFile() {
      return "Excel";
    },
    get$fileType() {
      return "File type";
    },
    get$download(_) {
      return "Download";
    },
    get$analyticsNotAvailable() {
      return "User analytics not available";
    },
    get$downloading() {
      return "Downloading...";
    },
    get$failedFetchUserAnalytics() {
      return "Failed to download user analytics";
    },
    get$downloadComplete() {
      return "Download complete!";
    },
    whatIsTheMorphTag$2(morphologicalFeature, wordForm) {
      return "What is the " + morphologicalFeature + " of '" + wordForm + "'?";
    },
    get$dataAvailable() {
      return "Data availability";
    },
    get$available(_) {
      return "Available";
    },
    get$pangeaBotIsFallible() {
      return "Pangea Bot makes mistakes too!";
    },
    whatIsMeaning$2(lemma, partOfSpeech) {
      return "What does '" + lemma + "' mean?";
    },
    get$chooseLemmaMeaningInstructionsBody() {
      return "Match meanings with the words in the message!";
    },
    get$doubleClickToEdit() {
      return "Double-click to edit.";
    },
    get$targetLanguageLabel() {
      return "Target language";
    },
    get$cefrLevelLabel() {
      return "CEFR level";
    },
    get$image(_) {
      return "Image";
    },
    get$activityPlannerOverviewInstructionsBody() {
      return "Choose a topic, mode, learning objective and generate an activity for the chat!";
    },
    get$constructUsePvmDesc() {
      return "Produced in voice message";
    },
    get$leaveSpaceDescription() {
      return "By leaving the course, you will leave all of the chats within it. Other users will see that you have left the course.";
    },
    get$constructUseCorMmDesc() {
      return "Correct message meaning";
    },
    get$constructUseIncMmDesc() {
      return "Incorrect message meaning";
    },
    get$constructUseIgnMmDesc() {
      return "Ignored message meaning";
    },
    get$meaning() {
      return "Meaning";
    },
    chatWith$1(displayname) {
      return "Group with " + displayname;
    },
    get$clickOnEmailLink() {
      return "Please click on the link in the email and then proceed.\n\nCheck your spam folder if the email hasn't arrived.";
    },
    get$dontForgetPassword() {
      return "Don't forget your password!";
    },
    get$enableAutocorrectToolName() {
      return "Enable device autocorrect";
    },
    get$enableAutocorrectDescription() {
      return "If your device supports the language you're learning, you can enable device autocorrect to fix common errors as you type.";
    },
    get$ttsDisbledTitle() {
      return "Text-to-speech disabled";
    },
    get$ttsDisabledBody() {
      return "You can enable text-to-speech in your learning settings";
    },
    get$noSpaceDescriptionYet() {
      return "No course description created yet.";
    },
    get$tooLargeToSend() {
      return "This message is too large to send";
    },
    get$exitWithoutSaving() {
      return "Are you sure you want to leave without saving?";
    },
    get$enableAutocorrectWarning() {
      return "Warning! Requires adding your target language keyboard";
    },
    get$leaveRoomDescription() {
      return "You're about to leave this chat. Other users will see that you have left the chat.";
    },
    get$confirmUserId() {
      return "Please confirm your Pangea Chat username in order to delete your account.";
    },
    paidSubscriptionStarts$1(startDate) {
      return "Starting " + startDate;
    },
    get$cancelInSubscriptionSettings() {
      return "\u2022 Cancel at any time in subscription settings";
    },
    get$autocorrectNotAvailable() {
      return "Unfortunately your platform is not currently supported for this feature. Stay tuned for further development!";
    },
    get$pleaseUpdateApp() {
      return "Please update the app to continue.";
    },
    get$chooseEmojiInstructionsBody() {
      return "Match emojis with the words they best represent. Don't worry! No points off for disagreeing. \ud83d\ude05";
    },
    get$analyticsVocabListBody() {
      return "This is all your vocabulary! As you earn XP for each word, they'll go from seedling to full bloom. Click on any word to see more details.";
    },
    get$morphAnalyticsListBody() {
      return "These are all the grammar concepts in the language you're learning! You'll unlock them as you encounter them while chatting. Click for details.";
    },
    get$knockSpaceSuccess() {
      return "You have requested to join this course! An admin will respond to your request when they receive it \ud83d\ude00";
    },
    get$chooseWordAudioInstructionsBody() {
      return "Listen to the complete message. Then match the audios with the words.";
    },
    get$chooseMorphsInstructionsBody() {
      return "Click the puzzle pieces for grammar questions!";
    },
    get$home() {
      return "Home";
    },
    get$join(_) {
      return "Join";
    },
    get$readingAssistanceOverviewBody() {
      return "Click the buttons below for mini-games on matching emojis, audios, word meanings, and grammar concepts. Or click on any word for details.";
    },
    get$resetInstructionTooltipsTitle() {
      return "Reset instruction tooltips";
    },
    get$resetInstructionTooltipsDesc() {
      return "Click to show instruction tooltips like for a brand new user.";
    },
    get$selectForGrammar() {
      return "Select a grammar icon for activities and details.";
    },
    get$translationProblem() {
      return "Translation problem";
    },
    get$niceJob() {
      return "Nice job!";
    },
    get$askToJoin() {
      return "Ask to join";
    },
    get$emptyChatWarningTitle() {
      return "Chat is empty";
    },
    get$emptyChatWarningDesc() {
      return "You haven't invited anyone to your chat. Go to Chat settings to invite your contacts or the Bot. You can also do this later.";
    },
    get$areYouLikeMe() {
      return "Are you like me?";
    },
    get$tryAgainLater() {
      return "Too many attempts made. Please try again in 5 minutes.";
    },
    get$enterSpaceCode() {
      return "Enter course code";
    },
    get$shareSpaceLink() {
      return "Share link";
    },
    get$byUsingPangeaChat() {
      return "By using Pangea Chat, I agree to the ";
    },
    get$details(_) {
      return "Details";
    },
    get$languageLevelPreA1Desc() {
      return "I have never learned or used the language.";
    },
    get$languageLevelA1Desc() {
      return "I can understand and use some familiar everyday expressions and very basic phrases.";
    },
    get$languageLevelA2Desc() {
      return "I can understand sentences and frequently used expressions related to areas of immediate relevance.";
    },
    get$languageLevelB1Desc() {
      return "I can deal with most familiar situations and can produce simple connected text on familiar topics.";
    },
    get$languageLevelB2Desc() {
      return "I can understand the mains ideas of complex texts and interact with a degree of fluency and spontaneity.";
    },
    get$languageLevelC1Desc() {
      return "I can express ideas fluently and spontaneously without much struggle and understand a wide range of demanding texts.";
    },
    get$languageLevelC2Desc() {
      return "I can understand virtually everything heard or read and express myself fluently and precisely.";
    },
    get$newVocab() {
      return "New vocab";
    },
    get$newGrammar() {
      return "New grammar concepts";
    },
    get$choosePracticeMode() {
      return "Click on one of the buttons above to start a practice activity";
    },
    get$ban() {
      return "Ban";
    },
    get$kick() {
      return "Kick";
    },
    get$lemma() {
      return "Lemma";
    },
    get$grammarFeature() {
      return "Grammar feature";
    },
    get$grammarTag() {
      return "Grammar tag";
    },
    get$forms() {
      return "Forms";
    },
    get$exampleMessages() {
      return "Example messages";
    },
    get$timesUsedIndependently() {
      return "Times used independently";
    },
    get$timesUsedWithAssistance() {
      return "Times used with assistance";
    },
    shareInviteCode$1(code) {
      return "Share invite code: " + code;
    },
    get$permissions(_) {
      return "Permissions";
    },
    get$spaceChildPermission() {
      return "Who can add new chats to this course";
    },
    get$addEnvironmentOverride() {
      return "Add environment override";
    },
    get$defaultOption() {
      return "Default";
    },
    get$deleteChatDesc() {
      return "Are you sure you want to delete this chat? It will be deleted for all participants and all messages within the chat will no longer be available for practice or learning analytics.";
    },
    get$deleteSpaceDesc() {
      return "The course and any selected chats will be deleted for all participants and all messages within the chat will no longer be available for practice or learning analytics. This action cannot be undone.";
    },
    get$configureSpace() {
      return "Configure course";
    },
    get$pinMessages() {
      return "Pin messages";
    },
    get$setJoinRules() {
      return "Set join rules";
    },
    get$changeGeneralSettings() {
      return "Change general settings";
    },
    get$inviteOtherUsersToRoom() {
      return "Invite other users";
    },
    get$changeTheNameOfTheSpace() {
      return "Change the name of the course";
    },
    get$changeTheDescription() {
      return "Change the description";
    },
    get$changeThePermissions() {
      return "Change the permissions";
    },
    get$introductions() {
      return "Introductions";
    },
    get$announcements() {
      return "Announcements";
    },
    get$activities() {
      return "Activities";
    },
    get$access() {
      return "Access";
    },
    get$howSpaceCanBeFound() {
      return "How this course can be found";
    },
    get$$private() {
      return "Private";
    },
    get$cannotBeFoundInSearch() {
      return "Cannot be found in search";
    },
    get$$public(_) {
      return "Public";
    },
    get$visibleToCommunity() {
      return 'Visible to the broader Pangea Chat community via "Find a course"';
    },
    get$howSpaceCanBeJoined() {
      return "How this course can be joined";
    },
    get$canBeFoundVia() {
      return "Can be found via:";
    },
    get$canBeFoundViaInvitation() {
      return "\u2022 invitation";
    },
    get$canBeFoundViaCodeOrLink() {
      return "\u2022 code or link";
    },
    get$canBeFoundViaKnock() {
      return "\u2022 request to join and admin approval";
    },
    get$youHaveLeveledUp() {
      return "You have leveled up!";
    },
    get$sendActivities() {
      return "Send activities";
    },
    get$directMessage() {
      return "Direct Message";
    },
    get$newDirectMessage() {
      return "New direct message";
    },
    get$speakingExercisesTooltip() {
      return "Speaking";
    },
    get$transcriptionFailed() {
      return "Failed to transcribe audio";
    },
    get$aUserIsKnocking() {
      return "1 user is requesting to join your course";
    },
    usersAreKnocking$1(users) {
      return "" + users + " users are requesting to join your course";
    },
    get$failedToFetchTranscription() {
      return "Failed to fetch transcription";
    },
    get$deleteEmptySpaceDesc() {
      return "The course will be deleted for all participants. This action cannot be undone.";
    },
    get$failedToPlayVideo() {
      return "Failed to play video";
    },
    get$done() {
      return "Done";
    },
    get$inThisSpace() {
      return "In this course";
    },
    get$myContacts() {
      return "My contacts";
    },
    get$inviteAllInSpace() {
      return "Invite all in this course";
    },
    get$spaceParticipantsHaveBeenInvitedToTheChat() {
      return "All course participants has been invited to the chat";
    },
    numKnocking$1(count) {
      return "" + count + " knocking";
    },
    numInvited$1(count) {
      return "" + count + " invited";
    },
    get$errorFetchingDefinition() {
      return "Failed to fetch definition";
    },
    get$errorProcessAnalytics() {
      return "Failed to process analytics";
    },
    get$errorDownloading() {
      return "Download failed";
    },
    get$errorFetchingLevelSummary() {
      return "Failed to fetch level summary";
    },
    get$errorLoadingSpaceChildren() {
      return "Failed to load chats within this course";
    },
    get$unexpectedError() {
      return "Unexpected error.";
    },
    get$pleaseReload() {
      return "Please reload and try again.";
    },
    get$translationError() {
      return "Translation error";
    },
    get$errorFetchingTranslation() {
      return "Failed to fetch translation";
    },
    get$errorFetchingActivity() {
      return "Failed to fetch activity";
    },
    get$check(_) {
      return "Check";
    },
    get$unableToFindRoom() {
      return "No chat or course found with that code. Please try again.";
    },
    get$numCompletedActivities() {
      return "Number of completed activities";
    },
    viewingAnalytics$2(visible, users) {
      return "Viewing " + visible + "/" + users + " Analytics";
    },
    get$request(_) {
      return "Request";
    },
    get$requestAll(_) {
      return "Request All";
    },
    get$confirmMessageUnpin() {
      return "Are you sure you want to unpin this message?";
    },
    get$pending(_) {
      return "Pending";
    },
    get$openRoleLabel() {
      return "OPEN";
    },
    joinedTheActivity$2(username, role) {
      return "\ud83d\udc4b " + username + " joined as " + role;
    },
    finishedTheActivity$1(username) {
      return "\ud83c\udfaf " + username + " wrapped up this activity";
    },
    get$endActivityTitle() {
      return "I'm done";
    },
    get$activitySummaryError() {
      return "Activity summaries unavailable";
    },
    get$requestSummaries() {
      return "Request summaries";
    },
    get$requestAccessTitle() {
      return "Request to analytics view access?";
    },
    get$requestAccessDesc() {
      return "Would you like to request access to view participant analytics?\n\nIf participants agree, admins of this course will be able to view their:\n    \u2022 total vocabulary\n    \u2022 total grammar concepts\n    \u2022 total activity sessions completed\n    \u2022 the specific grammar concepts used, correctly and incorrectly\n\nThey will not be able to view their:\n    \u2022 messages in chats outside the course\n    \u2022 vocabulary list";
    },
    get$analyticsInactiveTitle() {
      return "Requests to inactive users couldn\u2019t be sent";
    },
    get$analyticsInactiveDesc() {
      return "Inactive users who haven't logged in since this feature was introduced won't see your request.\n\nThe Request button will appear once they return. You can resend the request later by clicking the Request button under their name when it's available.";
    },
    get$accessRequestedTitle() {
      return "Analytics Access Request";
    },
    accessRequestedDesc$1(space) {
      return "The administrators of \u201c" + space + "\u201d are requesting to view your learning analytics.\n\nIf you agree, admins of this course will be able to view your:\n    \u2022 total vocabulary\n    \u2022 total grammar concepts\n    \u2022 total activity sessions completed\n    \u2022 the specific grammar concepts used, correctly and incorrectly\n\nThey will not be able to view your:\n    \u2022 messages in chats outside the course\n    \u2022 vocabulary list";
    },
    get$allowAccess() {
      return "Allow Access";
    },
    get$denyAccess() {
      return "Deny Access";
    },
    get$adminRequestedAccess() {
      return "Admins asked to view your analytics.";
    },
    lastUpdated$1(time) {
      return "Updated\n" + time;
    },
    get$activityFinishedMessage() {
      return "All Finished!";
    },
    get$endForAll() {
      return "End for all";
    },
    get$newCourse() {
      return "New course";
    },
    numModules$1(num) {
      return "" + num + " modules";
    },
    get$coursePlan() {
      return "Course Plan";
    },
    get$editCourseLater() {
      return "You can edit template title, descriptions, and course image later.";
    },
    get$newCourseAccess() {
      return "By default, courses are private and require admin approval to join. You can edit these settings at any time.";
    },
    get$createCourse() {
      return "Create course";
    },
    get$stats() {
      return "Stats";
    },
    get$createGroupChat() {
      return "Create group chat";
    },
    get$editCourse() {
      return "Edit course";
    },
    get$inviteDesc() {
      return "By username, by code or link";
    },
    get$editCourseDesc() {
      return "Here you can edit course title, description, etc.";
    },
    get$permissionsDesc() {
      return "Set permissions such as who can invite users, send messages, create chats, etc.";
    },
    get$accessDesc() {
      return "You can make your course open to the world! Or, make your course private and secure.";
    },
    get$createGroupChatDesc() {
      return "Whereas activity sessions start and end, group chats will stay open for routine communication.";
    },
    get$deleteDesc() {
      return "Only admins can delete a course. This is a destructive action which removes all users and deletes all selected chats within the course. Proceed with caution.";
    },
    get$noCourseFound() {
      return "Oh, this course needs a plan!\n\nCourse plans are a sequence of topics and conversation activities.";
    },
    additionalParticipants$1(num) {
      return "+ " + num + " others";
    },
    get$directMessages() {
      return "Direct Messages";
    },
    get$whatNow() {
      return "What now?";
    },
    get$chooseNextActivity() {
      return "Choose your next activity!";
    },
    get$letsGo() {
      return "Let's go";
    },
    get$chooseRole() {
      return "Choose a role!";
    },
    get$chooseRoleToParticipate() {
      return "Choose a role to participate!";
    },
    waitingToFillRole$1(num) {
      return "Waiting to fill " + num + " roles...";
    },
    get$pingParticipants() {
      return "Ping course participants";
    },
    get$playWithBot() {
      return "Play with Pangea Bot";
    },
    get$inviteFriendsToActivity() {
      return "Invite friends to activity";
    },
    get$inviteFriendsToActivityCourse() {
      return "Invite friends to activity and course";
    },
    get$waitNotDone() {
      return "Wait I\u2019m not done!";
    },
    get$waitingForOthersToFinish() {
      return "Waiting for the rest to finish up...";
    },
    get$saveToCompletedActivities() {
      return "Save to completed activities";
    },
    get$generatingSummary() {
      return "Analyzing chat and generating results";
    },
    get$activityCompletedDesc() {
      return "Your completed activity was added to analytics where you can review and practice the language you used.";
    },
    pingParticipantsNotification$2(user, room) {
      return user + " is looking for users to join the activity session in " + room;
    },
    get$courseName() {
      return "Course name";
    },
    get$createNewCourse() {
      return "New course";
    },
    get$publicCourses() {
      return "Public courses";
    },
    goToCourse$1(course) {
      return "Go to course: " + course;
    },
    get$startNewSession() {
      return "Start new session";
    },
    get$joinOpenSession() {
      return "Join open session";
    },
    get$activityNotFound() {
      return "Activity not found";
    },
    get$levelUp() {
      return "Level up";
    },
    get$myActivities() {
      return "My activities";
    },
    get$openToJoin() {
      return "Open to join";
    },
    get$activityDone() {
      return "Activity Done!";
    },
    get$promoCodeInfo() {
      return "Promo codes can be entered on the next page";
    },
    get$editsComingSoon() {
      return "The ability to edit cities and activities is coming soon.";
    },
    get$editing() {
      return "Editing";
    },
    get$activityNeedsOneMember() {
      return "Uh oh! This activity needs 1 more person.";
    },
    activityNeedsMembers$1(num) {
      return "Uh oh! This activity needs " + num + " more people.";
    },
    get$inviteFriendsToCourse() {
      return "Invite friends to my course";
    },
    get$subscribeToUnlockActivitySummaries() {
      return "Subscribe to unlock activity summaries";
    },
    get$subscribeToUnlockDefinitions() {
      return "Subscribe to unlock definitions";
    },
    get$subscribeToUnlockTranscriptions() {
      return "Subscribe to unlock transcriptions";
    },
    get$pingSent() {
      return "\ud83d\udd14 Course ping sent! \ud83d\udd14";
    },
    get$courseTitle() {
      return "Course title";
    },
    get$courseDesc() {
      return "Course description";
    },
    get$courseSavedSuccessfully() {
      return "Course saved successfully";
    },
    get$addCoursePlan() {
      return "Add a course plan";
    },
    get$activityStatsButtonInstruction() {
      return "Click here to view your activity stats and to close the activity when finished";
    },
    get$readingAnalyticsDesc() {
      return "Click practice on each message for reading activities.";
    },
    get$speakingAnalyticsDesc() {
      return "Record voice messages for speaking practice.";
    },
    get$audioAnalyticsDesc() {
      return "Click practice on each message for listening activities.";
    },
    get$loginToAccount() {
      return "Login to my account";
    },
    get$appDescription() {
      return "Learn a language\nwhile texting your friends.";
    },
    get$languages(_) {
      return "Languages";
    },
    get$chooseLanguage() {
      return "Choose a language.";
    },
    get$startOwn() {
      return "Start my own";
    },
    get$joinCourseDesc() {
      return "Each course has 8-10 sequenced topics with a range of task-based language learning activities.";
    },
    get$courseCodeHint() {
      return "Course code";
    },
    get$signupOption() {
      return "How do you want to sign up?";
    },
    get$withApple() {
      return "With Apple";
    },
    get$withGoogle() {
      return "With Google";
    },
    get$withEmail() {
      return "With Email";
    },
    get$createAccount() {
      return "Create account";
    },
    get$loginWithEmail() {
      return "Login with email";
    },
    get$usernameOrEmail() {
      return "Username or email";
    },
    get$email() {
      return "Email";
    },
    get$forgotPassword() {
      return "Forgot password?";
    },
    get$writingAnalyticsDesc() {
      return "Send messages to practice writing.";
    },
    get$endActivity() {
      return "End activity";
    },
    get$allLanguages() {
      return "All languages";
    },
    get$chatListTooltip() {
      return "Here you\u2019ll find your direct messages! Click on any user\u2019s avatar and \u201cstart conversation\u201d to send a DM.";
    },
    get$directMessageBotTitle() {
      return "Direct message Pangea Bot";
    },
    get$feedbackTitle() {
      return "Activity Feedback";
    },
    get$feedbackDesc() {
      return "How should the activity be improved? If you can provide some details, we\u2019ll make the change!";
    },
    get$feedbackRespDesc() {
      return "Check back tomorrow for activity updates.";
    },
    get$feedbackHint() {
      return "Your feedback";
    },
    get$feedbackButton() {
      return "Submit feedback";
    },
    get$directMessageBotDesc() {
      return "Talking to humans is more fun but... AI is always ready!";
    },
    get$inviteYourFriends() {
      return "Invite your friends";
    },
    get$playWithAI() {
      return "Play with AI for now";
    },
    get$courseStartDesc() {
      return "Pangea Bot is ready to go anytime!\n\n...but learning is better with friends!";
    },
    get$activityDropdownDesc() {
      return "When you\u2019re done with this activity, click below";
    },
    get$activityAnalyticsListBody() {
      return "These are your completed activities! After finishing activities, you can view them here.";
    },
    get$languageMismatchTitle() {
      return "Language mismatch";
    },
    get$languageMismatchDesc() {
      return "Your target language doesn't match the language of this activity. Update your target language?";
    },
    get$reportWordIssueTooltip() {
      return "Report word information issue";
    },
    get$tokenInfoFeedbackDialogTitle() {
      return "Word Information Feedback";
    },
    get$tokenInfoFeedbackDialogDesc() {
      return "AI makes mistakes. Please describe any issues you found with the information above.";
    },
    get$noPublicCoursesFound() {
      return "No public courses found. Would you like to create one?";
    },
    get$noCourseTemplatesFound() {
      return "We couldn't find any courses for your target language. You can chat with Pangea Bot in the meantime, and check back later for more courses.";
    },
    get$botActivityJoinFailMessage() {
      return "Pangea Bot is taking a while to respond. Please try again later, or invite a friend.";
    },
    get$unsubscribedResponseError() {
      return "This feature requires a subscription";
    },
    get$leaveDesc() {
      return "Leave this space and all chats within it";
    },
    get$selectAll() {
      return "Select all";
    },
    get$deselectAll(_) {
      return "Deselect all";
    },
    get$shareCourse() {
      return "Share course";
    },
    get$addCourse() {
      return "Add a course";
    },
    get$joinCourseWithCode() {
      return "Join course with code";
    },
    get$joinPublicCourse() {
      return "Join public course";
    },
    remove$1($receiver, arg0) {
      return this.get$remove(this).call$1(arg0);
    }
  };
  var typesOffset = hunkHelpers.updateTypes([]);
  (function inheritance() {
    var _inherit = hunkHelpers.inherit;
    _inherit(A.L10nIt, C.L10n);
  })();
  B._Universe_addRules(init.typeUniverse, JSON.parse('{"L10nIt":{"L10n":[]}}'));
};
;
(d => {
  d["kJ9poQtDzr4IKAJf0nN69lRH39o="] = d.current;
})($__dart_deferred_initializers__);
;
//# sourceMappingURL=main.dart.js_238.part.js.map
