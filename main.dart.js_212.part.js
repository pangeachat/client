// Generated by dart2js (, trust primitives, omit checks, lax runtime type, csp, intern-composite-values), the Dart to JavaScript compiler version: 3.8.1.
((s, d, e) => {
  s[d] = s[d] || {};
  s[d][e] = s[d][e] || [];
  s[d][e].push({p: "main.dart.js_212", e: "beginPart"});
})(self, "$__dart_deferred_initializers__", "eventLog");
$__dart_deferred_initializers__.current = function(hunkHelpers, init, holdersList, $) {
  var B, C,
  A = {
    L10nGa$() {
      return new A.L10nGa(B.canonicalizedLocale("ga"));
    },
    L10nGa: function L10nGa(t0) {
      this.localeName = t0;
    }
  };
  B = holdersList[0];
  C = holdersList[54];
  A = hunkHelpers.updateHolder(holdersList[23], A);
  A.L10nGa.prototype = {
    get$alwaysUse24HourFormat() {
      return "br\xe9agach";
    },
    get$repeatPassword() {
      return "Scr\xedobh an pasfhocal ar\xeds";
    },
    get$notAnImage() {
      return "N\xed comhad \xedomh\xe1 \xe9.";
    },
    get$setCustomPermissionLevel() {
      return "Socraigh leibh\xe9al ceadanna saincheaptha";
    },
    get$setPermissionsLevelDescription() {
      return "Roghnaigh r\xf3l r\xe9amhshainithe th\xedos n\xf3 cuir isteach leibh\xe9al ceadanna saincheaptha idir 0 agus 100.";
    },
    get$ignoreUser() {
      return "D\xe9an neamhaird den \xfas\xe1ideoir";
    },
    get$normalUser() {
      return "Gn\xe1th\xfas\xe1ideoir";
    },
    get$remove(_) {
      return "Bain";
    },
    get$importNow() {
      return "Iomp\xf3rt\xe1il anois";
    },
    get$importEmojis() {
      return "Iomp\xf3rt\xe1il Emoji";
    },
    get$importFromZipFile() {
      return "Iomp\xf3rt\xe1il \xf3 chomhad .zip";
    },
    get$exportEmotePack() {
      return "Easp\xf3rt\xe1il Emote pac\xe1iste mar .zip";
    },
    get$replace(_) {
      return "Ionadaigh";
    },
    aboutHomeserver$1(homeserver) {
      return "Maidir le " + homeserver;
    },
    get$accept(_) {
      return "Glac";
    },
    acceptedTheInvitation$1(username) {
      return "\ud83d\udc4d Ghlac " + username + " leis an gcuireadh";
    },
    get$account() {
      return "Cuntas";
    },
    activatedEndToEndEncryption$1(username) {
      return "\ud83d\udd10 " + username + " criptithe deireadh go deireadh gn\xedomhachtaithe";
    },
    get$addEmail() {
      return "Cuir r\xedomhphoist";
    },
    supposedMxid$1(mxid) {
      return "Ba cheart go mbeadh s\xe9 seo " + mxid;
    },
    get$admin() {
      return "Riarth\xf3ir";
    },
    get$commandHint_roomupgrade() {
      return "Uasghr\xe1daigh an seomra seo go dt\xed an leagan seomra a thugtar";
    },
    get$commandHint_googly() {
      return "Seol roinnt s\xfaile googly";
    },
    get$commandHint_cuddle() {
      return "Seol cuddle";
    },
    get$commandHint_hug() {
      return "Seol barr\xf3g";
    },
    googlyEyesContent$1(senderName) {
      return "Seolann " + senderName + " s\xfaile googly chugat";
    },
    cuddleContent$1(senderName) {
      return "Cuireann " + senderName + " do chudacht";
    },
    hugContent$1(senderName) {
      return "Tugann " + senderName + " barr\xf3g duit";
    },
    answeredTheCall$1(senderName) {
      return "D'fhreagair " + senderName + " an glao";
    },
    get$anyoneCanJoin() {
      return "Is f\xe9idir le aon duine dul isteach";
    },
    get$archive() {
      return "Cartlann";
    },
    get$areYouSure() {
      return "An bhfuil t\xfa cinnte?";
    },
    get$areYouSureYouWantToLogout() {
      return "An bhfuil t\xfa cinnte gur mhaith leat log\xe1il amach?";
    },
    get$askSSSSSign() {
      return "Chun a bheith in ann an duine eile a sh\xedni\xfa, cuir isteach do phasfhr\xe1sa st\xf3ir s\xe1bh\xe1ilte n\xf3 d'eochair t\xe9arnaimh.";
    },
    askVerificationRequest$1(username) {
      return "Glac leis an iarratas f\xedoraithe seo \xf3 " + username + "?";
    },
    badServerLoginTypesException$3(serverVersions, supportedVersions, suportedVersions) {
      return "T\xe1 na cine\xe1lacha log\xe1la isteach seo ar f\xe1il faoin freastala\xed baile:\n" + serverVersions + "\nAch n\xedl ach na ceann seo ar f\xe1il faoin aip seo:\n" + supportedVersions;
    },
    get$sendTypingNotifications() {
      return "Seol f\xf3gra\xed cl\xf3scr\xedofa";
    },
    get$swipeRightToLeftToReply() {
      return "Svaidhpe\xe1il ar dheis ar chl\xe9 chun freagra a thabhairt";
    },
    get$sendOnEnter() {
      return "Seol ar iontr\xe1il";
    },
    countChatsAndCountParticipants$2(chats, participants) {
      return "" + chats + " comhr\xe1 agus " + participants + " rannph\xe1irt\xed";
    },
    get$noMoreChatsFound() {
      return "N\xedor aims\xedodh a thuilleadh comhr\xe1ite...";
    },
    get$banFromChat() {
      return "Toirmisc \xf3n gcomhr\xe1";
    },
    get$banned() {
      return "Coiscthe";
    },
    bannedUser$2(username, targetName) {
      return "Chuir " + username + " cosc ar " + targetName;
    },
    get$blockDevice() {
      return "Bac Gl\xe9as";
    },
    get$blocked() {
      return "Bactha";
    },
    get$cancel(_) {
      return "Cealaigh";
    },
    cantOpenUri$1(uri) {
      return "N\xed f\xe9idir an URI " + uri + " a oscailt";
    },
    get$changeDeviceName() {
      return "Athraigh ainm an ghl\xe9is";
    },
    changedTheChatAvatar$1(username) {
      return "D'athraigh " + username + " abhat\xe1r an chomhr\xe1";
    },
    changedTheChatDescriptionTo$2(username, description) {
      return "D'athraigh " + username + " an cur s\xedos comhr\xe1 go: '" + description + "'";
    },
    changedTheChatNameTo$2(username, chatname) {
      return "D'athraigh " + username + " an t-ainm comhr\xe1 go: '" + chatname + "'";
    },
    changedTheChatPermissions$1(username) {
      return "D'athraigh " + username + " na ceadanna comhr\xe1";
    },
    changedTheDisplaynameTo$2(username, displayname) {
      return "D'athraigh " + username + " a n-ainm taispe\xe1na go: '" + displayname + "'";
    },
    changedTheGuestAccessRules$1(username) {
      return "D'athraigh " + username + " na rialacha rochtana aoi";
    },
    changedTheGuestAccessRulesTo$2(username, rules) {
      return "D'athraigh " + username + " na rialacha maidir le rochtain aoi chuig: " + rules;
    },
    changedTheHistoryVisibility$1(username) {
      return "D'athraigh " + username + " infheictheacht na staire";
    },
    changedTheHistoryVisibilityTo$2(username, rules) {
      return "D'athraigh " + username + " infheictheacht na staire go: " + rules;
    },
    changedTheJoinRules$1(username) {
      return "D'athraigh " + username + " na rialacha ceangail";
    },
    changedTheJoinRulesTo$2(username, joinRules) {
      return "D'athraigh " + username + " na rialacha ceangail go: " + joinRules;
    },
    changedTheProfileAvatar$1(username) {
      return "D'athraigh " + username + " a n-abhat\xe1r";
    },
    changedTheRoomAliases$1(username) {
      return "D'athraigh " + username + " ailiasanna an tseomra";
    },
    changedTheRoomInvitationLink$1(username) {
      return "D'athraigh " + username + " nasc an chuiridh";
    },
    get$changePassword() {
      return "Athraigh an pasfhocal";
    },
    get$changeTheme() {
      return "Athraigh do st\xedl";
    },
    get$changeYourAvatar() {
      return "Athraigh do abhat\xe1r";
    },
    get$channelCorruptedDecryptError() {
      return "Truaill\xedodh an cripti\xfa";
    },
    get$chat() {
      return "Comhr\xe1";
    },
    get$chatDetails() {
      return "Sonra\xed comhr\xe1";
    },
    get$chats() {
      return "Comhr\xe1ite";
    },
    get$chooseAStrongPassword() {
      return "Roghnaigh pasfhocal l\xe1idir";
    },
    get$clearArchive() {
      return "Glan an cartlann";
    },
    get$close(_) {
      return "D\xfan";
    },
    get$commandHint_markasdm() {
      return "Marc\xe1il mar sheomra teachtaireachta d\xedr\xed don ID Maitr\xeds tugtha";
    },
    get$commandHint_markasgroup() {
      return "Marc\xe1il mar ghr\xfapa";
    },
    get$commandHint_ban() {
      return string$.Cuir_c;
    },
    get$commandHint_clearcache() {
      return "Glan an taisce";
    },
    get$commandHint_create() {
      return "Cruthaigh comhr\xe1 gr\xfapa folamh\n\xdas\xe1id --no-encryption chun cripti\xfach\xe1n a dh\xedchumas\xfa";
    },
    get$commandHint_discardsession() {
      return "Scrios an seisi\xfan";
    },
    get$commandHint_dm() {
      return "Cuir t\xfas le comhr\xe1 d\xedreach\n\xdas\xe1id --no-cription chun cripti\xfach\xe1n a dh\xedchumas\xfa";
    },
    get$commandHint_html() {
      return "Seol t\xe9acs HTML-form\xe1idithe";
    },
    get$commandHint_invite() {
      return string$.Cuir_c;
    },
    get$commandHint_join() {
      return "T\xe9igh isteach sa seomra \xe1irithe";
    },
    get$commandHint_kick() {
      return "Bain an t-\xfas\xe1ideoir \xe1irithe den seomra seo";
    },
    get$commandHint_leave() {
      return "F\xe1g an seomra seo";
    },
    get$commandHint_me() {
      return "D\xe9an cur s\xedos ort f\xe9in";
    },
    get$commandHint_myroomavatar() {
      return "Cuir do phicti\xfar don seomra seo (le mxc-uri)";
    },
    get$commandHint_myroomnick() {
      return "Socraigh d'ainm taispe\xe1na don seomra seo";
    },
    get$commandHint_op() {
      return "Socraigh leibh\xe9al cumhachta an \xfas\xe1ideora \xe1irithe (r\xe9amhshocr\xfa: 50)";
    },
    get$commandHint_plain() {
      return "Seol t\xe9acs neamhfhoirmithe";
    },
    get$commandHint_react() {
      return "Seol freagra mar fhreagairt";
    },
    get$commandHint_send() {
      return "Seol t\xe9acs";
    },
    get$commandHint_unban() {
      return "Cuir deireadh an cosc den \xfas\xe1ideoir \xe1irithe \xf3n seomra seo";
    },
    get$compareEmojiMatch() {
      return "Cuir na emojis i gcompar\xe1id le do thoil";
    },
    get$compareNumbersMatch() {
      return "Cuir na huimhreacha i gcompar\xe1id le do thoil";
    },
    get$configureChat() {
      return "Cumraigh comhr\xe1";
    },
    get$confirm(_) {
      return "Dearbhaigh";
    },
    get$copiedToClipboard() {
      return "C\xf3ipe\xe1ilte ar an ghearrthaisce";
    },
    get$copy(_) {
      return "C\xf3ipe\xe1il";
    },
    couldNotDecryptMessage$1(error) {
      return "N\xedorbh fh\xe9idir teachtaireacht a dh\xedchripti\xfa: " + error;
    },
    get$checkList() {
      return "Liosta seice\xe1la";
    },
    countParticipants$1(count) {
      return "" + count + " rannph\xe1irtithe";
    },
    countInvited$1(count) {
      return "cuireadh chuig " + count;
    },
    get$create(_) {
      return "Cruthaigh";
    },
    createdTheChat$1(username) {
      return "\ud83d\udcac chruthaigh " + username + " an comhr\xe1";
    },
    get$createGroup() {
      return "Cruthaigh gr\xfapa";
    },
    get$currentlyActive() {
      return "Gn\xedomhach faoi l\xe1thair";
    },
    get$darkTheme() {
      return "Dorcha";
    },
    dateAndTimeOfDay$2(date, timeOfDay) {
      return date + ", " + timeOfDay;
    },
    get$deactivateAccountWarning() {
      return "D\xedghn\xedomhachtaeoidh s\xe9 seo do chuntas \xfas\xe1ideora. N\xed f\xe9idir \xe9 seo a cheal\xfa! An bhfuil t\xfa cinnte?";
    },
    get$defaultPermissionLevel() {
      return "Leibh\xe9al ceada r\xe9amhshocraithe d'\xfas\xe1ideoir\xed nua";
    },
    get$$delete(_) {
      return "Scrios";
    },
    get$deleteAccount() {
      return "Scrios an cuntas";
    },
    get$deleteMessage() {
      return "Scrios an teachtaireacht";
    },
    get$devices() {
      return "Gl\xe9asanna";
    },
    get$displaynameHasBeenChanged() {
      return "Athra\xedodh an t-ainm taispe\xe1na";
    },
    get$downloadFile() {
      return "\xcdosl\xf3d\xe1il comhad";
    },
    get$edit() {
      return "Cuir in eagar";
    },
    get$editBlockedServers() {
      return "Cuir freastala\xed bloc\xe1ilte in eagar";
    },
    get$chatPermissions() {
      return "Ceadanna comhr\xe1";
    },
    get$editDisplayname() {
      return "Cuir ainm taispe\xe1na in eagar";
    },
    get$editRoomAvatar() {
      return "Cuir in eagar abhat\xe1r an tseomra";
    },
    get$emoteExists() {
      return "T\xe1 iomaite ann cheana f\xe9in!";
    },
    get$emoteInvalid() {
      return "Gearrch\xf3d emote neamhbhail\xed!";
    },
    get$emoteKeyboardNoRecents() {
      return "Beidh moth\xfach\xe1in a \xfas\xe1ideadh le d\xe9ana\xed le feice\xe1il anseo ...";
    },
    get$emotePacks() {
      return "Pac\xe1ist\xed straoiseoige don seomra";
    },
    get$customEmojisAndStickers() {
      return "Emojis agus gream\xe1in saincheaptha";
    },
    get$emoteShortcode() {
      return "Gearrch\xf3d straoiseoige";
    },
    get$emoteWarnNeedToPick() {
      return "Caithfidh t\xfa gearrch\xf3d straoiseoige agus \xedomh\xe1 a roghn\xfa!";
    },
    get$emptyChat() {
      return "Comhr\xe1 folamh";
    },
    get$enableEmotesGlobally() {
      return "Cumasaigh pac\xe1iste straoiseoige go huil\xedoch";
    },
    get$enableEncryption() {
      return "Tosaigh cripti\xfa";
    },
    get$encrypted() {
      return "Criptithe";
    },
    get$encryptionNotEnabled() {
      return "N\xed chumasa\xedtear cripti\xfa";
    },
    endedTheCall$1(senderName) {
      return "Chuir " + senderName + " deireadh leis an nglao";
    },
    get$enterAnEmailAddress() {
      return "Cuir isteach seoladh r\xedomhphoist";
    },
    errorObtainingLocation$1(error) {
      return "Earr\xe1id maidir le su\xedomh a fh\xe1il: " + error;
    },
    get$fontSize(_) {
      return "M\xe9id cl\xf3";
    },
    get$forward(_) {
      return "Seol ar aghaidh";
    },
    get$fromJoining() {
      return "\xd3 tar isteach";
    },
    get$fromTheInvitation() {
      return "\xd3n gcuireadh";
    },
    get$guestsAreForbidden() {
      return "T\xe1 cosc ar a\xedonna";
    },
    get$guestsCanJoin() {
      return "Is f\xe9idir le ha\xedonna p\xe1irt a ghlacadh";
    },
    hasWithdrawnTheInvitationFor$2(username, targetName) {
      return "Tharraing " + username + " an cuireadh do " + targetName + " siar";
    },
    get$help() {
      return "Cabhair";
    },
    get$hideRedactedMessages() {
      return "Folaigh teachtaireachta\xed curtha in eagar";
    },
    get$hideRedactedMessagesBody() {
      return "M\xe1 athghn\xedomha\xedonn duine \xe9igin teachtaireacht, n\xed bheidh an teachtaireacht seo le feice\xe1il sa chomhr\xe1 a thuilleadh.";
    },
    get$hideInvalidOrUnknownMessageFormats() {
      return "Folaigh form\xe1id\xed teachtaireachta neamhbhail\xed n\xf3 anaithnid";
    },
    get$block() {
      return "Bloc";
    },
    get$blockedUsers() {
      return "\xdas\xe1ideoir\xed bactha";
    },
    get$blockListDescription() {
      return "Is f\xe9idir leat bac a chur ar \xfas\xe1ideoir\xed at\xe1 ag cur isteach ort. N\xed bheidh t\xfa in ann teachtaireachta\xed n\xf3 cuireadh seomra ar bith a fh\xe1il \xf3 na h\xfas\xe1ideoir\xed ar do liosta bloc pearsanta.";
    },
    get$blockUsername() {
      return "D\xe9an neamhaird de ainm \xfas\xe1ideora";
    },
    get$iHaveClickedOnLink() {
      return "Chlice\xe1il m\xe9 ar an nasc";
    },
    get$incorrectPassphraseOrKey() {
      return "Pasfhr\xe1sa n\xf3 eochair t\xe9arnaimh m\xedcheart";
    },
    get$inviteContact() {
      return "Tabhair cuireadh do theagmh\xe1il";
    },
    get$noChatDescriptionYet() {
      return "N\xedl aon chur s\xedos ar an gcomhr\xe1 cruthaithe f\xf3s.";
    },
    get$tryAgain() {
      return "Bain triail eile as";
    },
    get$invited() {
      return "Le cuireadh";
    },
    get$redactMessageDescription() {
      return "Athr\xf3far an teachtaireacht do gach rannph\xe1irt\xed sa chomhr\xe1 seo. N\xed f\xe9idir \xe9 seo a cheal\xfa.";
    },
    get$optionalRedactReason() {
      return "(Roghnach) An ch\xfais leis an teachtaireacht seo a chur in eagar...";
    },
    invitedUser$2(username, targetName) {
      return "\ud83d\udce9 thug " + username + " cuireadh do " + targetName;
    },
    get$invitedUsersOnly() {
      return "\xdas\xe1ideoir\xed le cuireadh amh\xe1in";
    },
    get$inviteForMe() {
      return "Tabhair cuireadh dom";
    },
    get$isTyping() {
      return "ag cl\xf3scr\xedobh\u2026";
    },
    joinedTheChat$1(username) {
      return "Th\xe1inig \ud83d\udc4b " + username + " isteach sa chomhr\xe1";
    },
    kicked$2(username, targetName) {
      return "\ud83d\udc5e chice\xe1il " + username + " " + targetName;
    },
    get$kickFromChat() {
      return "Caith \xe9 amach as an comhr\xe1";
    },
    lastActiveAgo$1(localizedTimeShort) {
      return "Gn\xedomhach deireanach: " + localizedTimeShort;
    },
    get$leave() {
      return "F\xe1g";
    },
    get$leftTheChat() {
      return "F\xe1gadh an comhr\xe1";
    },
    get$lightTheme() {
      return "Solas";
    },
    get$dehydrate() {
      return "Easp\xf3rt\xe1il seisi\xfan agus gl\xe9as wipe";
    },
    get$dehydrateWarning() {
      return "N\xed f\xe9idir an gn\xedomh seo a cheal\xfa. Cinntigh go st\xf3r\xe1lann t\xfa an comhad c\xfaltaca go s\xe1bh\xe1ilte.";
    },
    get$dehydrateTor() {
      return "\xdas\xe1ideoir\xed TOR: Seisi\xfan easp\xf3rt\xe1la";
    },
    get$dehydrateTorLong() {
      return "Maidir le h\xfas\xe1ideoir\xed TOR, moltar an seisi\xfan a onnmhairi\xfa roimh dh\xfanadh an fhuinneog.";
    },
    get$loadingPleaseWait() {
      return "Ag l\xf3d\xe1il\u2026 Fan, le do thoil.";
    },
    get$loadMore() {
      return "L\xf3d\xe1il n\xedos m\xf3\u2026";
    },
    get$locationDisabledNotice() {
      return "T\xe1 seirbh\xeds\xed su\xedmh d\xedchumasaithe. Cuir ar a gcumas le do thoil a bheith in ann do shu\xedomh a roinnt.";
    },
    get$locationPermissionDeniedNotice() {
      return "Di\xfalta\xedodh cead su\xedmh. Deonaigh d\xf3ibh le do thoil go mbeidh t\xfa in ann do shu\xedomh a roinnt.";
    },
    get$logout() {
      return "Log\xe1il amach";
    },
    get$mention() {
      return "Luaigh";
    },
    get$messages() {
      return "Teachtaireachta\xed";
    },
    get$messagesStyle() {
      return "Teachtaireachta\xed:";
    },
    get$moderator() {
      return "Modhn\xf3ir";
    },
    get$newChat() {
      return "Comhr\xe1 nua";
    },
    get$newVerificationRequest() {
      return "Iarratas f\xedoraithe nua!";
    },
    get$next(_) {
      return "Ar Aghaidh";
    },
    get$no() {
      return "N\xedl";
    },
    get$noConnectionToTheServer() {
      return "Gan aon nasc leis an bhfreastala\xed";
    },
    get$noEmotesFound() {
      return "N\xedor aims\xedodh aon straoiseoga. \ud83d\ude15";
    },
    get$shareInviteLink() {
      return "Roinn an nasc cuireadh";
    },
    get$none() {
      return "Aon cheann";
    },
    get$noPasswordRecoveryDescription() {
      return "N\xedor chuir t\xfa bealach leis do phasfhocal a aisghabh\xe1il f\xf3s.";
    },
    get$noPermission() {
      return "Gan cead";
    },
    get$noRoomsFound() {
      return "N\xedor aims\xedodh aon seomra\xed\u2026";
    },
    get$notifications() {
      return "F\xf3gra\xed";
    },
    get$obtainingLocation() {
      return "ag Aimsi\xfa an su\xedomh\u2026";
    },
    get$offensive() {
      return "Maslach";
    },
    get$ok() {
      return "Ceart go leor";
    },
    get$oopsSomethingWentWrong() {
      return "\xdaps, chuaigh rud \xe9igin m\xedcheart \u2026";
    },
    get$oneClientLoggedOut() {
      return "T\xe1 duine de do chliaint log\xe1ilte amach";
    },
    get$openInMaps() {
      return "Oscail i l\xe9arsc\xe1ileanna";
    },
    get$link() {
      return "Nasc";
    },
    get$serverRequiresEmail() {
      return "N\xed m\xf3r don fhreastala\xed seo do sheoladh r\xedomhphoist a bhail\xedocht\xfa le haghaidh cl\xe1r\xfach\xe1in.";
    },
    get$or() {
      return "N\xf3";
    },
    get$participant() {
      return "Rannph\xe1irt\xed";
    },
    get$passphraseOrKey() {
      return "pasfhr\xe1sa n\xf3 eochair t\xe9arnaimh";
    },
    get$password(_) {
      return "Pasfhocal";
    },
    get$passwordForgotten() {
      return "Pasfhocal dearmadta";
    },
    get$passwordHasBeenChanged() {
      return "Athra\xedodh an pasfhocal";
    },
    get$overview() {
      return "Forbhreathn\xfa";
    },
    get$passwordRecoverySettings() {
      return "Socruithe athshl\xe1naithe pasfhocal";
    },
    get$passwordRecovery() {
      return "Aisfh\xe1il pasfhocail";
    },
    get$pickImage() {
      return "Roghnaigh \xedomh\xe1";
    },
    get$pin() {
      return "Bior\xe1n";
    },
    get$pleaseChoose() {
      return "Roghnaigh le do thoil";
    },
    get$pleaseEnterYourPassword() {
      return "Iontr\xe1il do phasfhocal le do thoil";
    },
    get$pleaseEnterYourPin() {
      return "Cuir isteach d'uimhir PIN le do thoil";
    },
    get$pleaseEnterYourUsername() {
      return "Cuir isteach d'ainm \xfas\xe1ideora le do thoil";
    },
    get$pleaseFollowInstructionsOnWeb() {
      return 'Lean na treoracha ar an su\xedomh gr\xe9as\xe1in agus tap\xe1il "ar aghaidh".';
    },
    get$privacy() {
      return "Pr\xedobh\xe1ideacht";
    },
    get$reason(_) {
      return "F\xe1th";
    },
    redactedBy$1(username) {
      return "Arna chur in eagar ag " + username;
    },
    get$directChat() {
      return "Comhr\xe1 d\xedreach";
    },
    redactedByBecause$2(username, reason) {
      return "Athbhreithnithe ag " + username + ' mar: "' + reason + '"';
    },
    redactedAnEvent$1(username) {
      return "Rinne " + username + " cinsire imeacht";
    },
    get$redactMessage() {
      return "Bain teachtaireacht amach";
    },
    get$reject() {
      return "Di\xfaltaigh";
    },
    rejectedTheInvitation$1(username) {
      return "Dhi\xfaltaigh " + username + " don chuireadh";
    },
    get$removeAllOtherDevices() {
      return "Bain gach gl\xe9as eile";
    },
    get$unbanFromChat() {
      return "Cuir deireadh an cosc \xf3n gcomhr\xe1";
    },
    get$removeYourAvatar() {
      return "Bain d'abhat\xe1r";
    },
    get$replaceRoomWithNewerVersion() {
      return "Cuir leagan seomra n\xedos nua\xed in ionad an tseomra";
    },
    get$reply(_) {
      return "Freagair";
    },
    get$reportMessage() {
      return "Tuairiscigh teachtaireacht";
    },
    get$roomHasBeenUpgraded() {
      return "Uasghr\xe1da\xedodh an seomra";
    },
    get$search(_) {
      return "Cuardaigh";
    },
    get$security() {
      return "Sl\xe1nd\xe1il";
    },
    get$send(_) {
      return "Seol";
    },
    get$sendAMessage() {
      return "Seol teachtaireacht";
    },
    get$sendAudio() {
      return "Seol fuaim";
    },
    get$sendFile() {
      return "Seol comhad";
    },
    get$sendImage() {
      return "Seol \xedomh\xe1";
    },
    sendImages$1(count) {
      return "Seol " + count + " \xedomh\xe1";
    },
    get$sendMessages() {
      return "Seol teachtaireachta\xed";
    },
    get$sendVideo() {
      return "Seol f\xedse\xe1n";
    },
    sentAFile$1(username) {
      return "\ud83d\udcc1 sheol " + username + " comhad";
    },
    sentAnAudio$1(username) {
      return "\ud83c\udfa4 sheol " + username + " fuaim";
    },
    sentAPicture$1(username) {
      return "\ud83d\uddbc\ufe0f sheol " + username + " picti\xfar";
    },
    sentASticker$1(username) {
      return "\ud83d\ude0a sheol " + username + " gream\xe1n";
    },
    sentAVideo$1(username) {
      return "\ud83c\udfa5 sheol " + username + " f\xedse\xe1n";
    },
    sentCallInformations$1(senderName) {
      return "Sheol " + senderName + " faisn\xe9is maidir le glaonna";
    },
    get$separateChatTypes() {
      return "Comhr\xe1ite D\xedreacha agus Gr\xfapa\xed ar Leith";
    },
    get$setChatDescription() {
      return "Socraigh cur s\xedos ar an gcomhr\xe1";
    },
    get$setStatus() {
      return "Cuir st\xe1das";
    },
    get$settings() {
      return "Socruithe";
    },
    get$share(_) {
      return "Roinn";
    },
    sharedTheLocation$1(username) {
      return "Roinn " + username + " a su\xedomh";
    },
    get$shareLocation() {
      return "Roinn su\xedomh";
    },
    get$presencesToggle() {
      return "Taispe\xe1in teachtaireachta\xed st\xe1dais \xf3 \xfas\xe1ideoir\xed eile";
    },
    get$skip(_) {
      return "L\xe9im";
    },
    get$sourceCode() {
      return "C\xf3d foinseach";
    },
    startedACall$1(senderName) {
      return "Thosaigh " + senderName + " glao";
    },
    get$status(_) {
      return "Staid";
    },
    get$statusExampleMessage() {
      return "Conas at\xe1 t\xfa inniu?";
    },
    get$submit(_) {
      return "Cuir isteach";
    },
    get$synchronizingPleaseWait() {
      return "Ag sioncr\xf3n\xfa... Fan, le do thoil.";
    },
    synchronizingPleaseWaitCounter$1(percentage) {
      return " Ag sioncron\xfa\u2026 (" + percentage + "%)";
    },
    get$systemTheme() {
      return "C\xf3ras";
    },
    get$theyDontMatch() {
      return "N\xedl siad c\xe9anna";
    },
    get$theyMatch() {
      return "T\xe1 siad c\xe9anna";
    },
    get$tooManyRequestsWarning() {
      return "An iomarca iarratas. Bain triail eile as n\xedos d\xe9ana\xed!";
    },
    get$tryToSendAgain() {
      return "D\xe9an iarracht a sheoladh ar\xeds";
    },
    get$unavailable() {
      return "N\xedl ar f\xe1il";
    },
    unbannedUser$2(username, targetName) {
      return "Chuir " + username + " deireadh an cosc " + targetName;
    },
    get$unblockDevice() {
      return "D\xedbhloc\xe1il Gl\xe9as";
    },
    get$unknownDevice() {
      return "Gl\xe9as anaithnid";
    },
    get$unknownEncryptionAlgorithm() {
      return "Algartam criptithe anaithnid";
    },
    unknownEvent$1(type) {
      return "Imeacht anaithnid '" + type + "'";
    },
    get$unpin() {
      return "Bain bior\xe1n";
    },
    userAndOthersAreTyping$2(username, count) {
      return "t\xe1 " + username + " agus " + count + " daoine eile ag cl\xf3scr\xedobh\u2026";
    },
    userAndUserAreTyping$2(username, username2) {
      return "T\xe1 " + username + " agus " + username2 + " ag cl\xf3scr\xedobh\u2026";
    },
    userIsTyping$1(username) {
      return "T\xe1 " + username + " ag cl\xf3scr\xedobh\u2026";
    },
    userLeftTheChat$1(username) {
      return "\ud83d\udeaa D'fh\xe1g " + username + " an comhr\xe1";
    },
    get$username(_) {
      return "Ainm \xfas\xe1ideora";
    },
    userSentUnknownEvent$2(username, type) {
      return "Sheol " + username + " imeacht " + type;
    },
    get$unverified() {
      return "Neamhfh\xedoraithe";
    },
    get$verified() {
      return "Deimhnithe";
    },
    get$verifyStart() {
      return "Tosaigh F\xedor\xfa";
    },
    get$verifySuccess() {
      return "D'fh\xedoraigh t\xfa go rath\xfail!";
    },
    get$verifyTitle() {
      return "Ag f\xedor\xfa cuntas eile";
    },
    get$visibleForAllParticipants() {
      return "Infheicthe do na rannph\xe1irtithe go l\xe9ir";
    },
    get$visibleForEveryone() {
      return "Infheicthe do gach duine";
    },
    get$voiceMessage() {
      return "Gl\xf3rphost";
    },
    get$waitingPartnerAcceptRequest() {
      return "Ag fanacht le comhph\xe1irt\xed glacadh leis an iarratas\u2026";
    },
    get$waitingPartnerEmoji() {
      return "Ag fanacht le comhph\xe1irt\xed glacadh leis na straoiseoga\u2026";
    },
    get$waitingPartnerNumbers() {
      return "Ag fanacht le comhph\xe1irt\xed glacadh leis na huimhreacha \u2026";
    },
    get$warning() {
      return "Rabhadh!";
    },
    get$weSentYouAnEmail() {
      return "Sheolamar r\xedomhphost chugat";
    },
    get$whyDoYouWantToReportThis() {
      return "C\xe9n f\xe1th ar mhaith leat \xe9 seo a thuairisci\xfa?";
    },
    get$withTheseAddressesRecoveryDescription() {
      return "Leis na seolta\xed seo is f\xe9idir leat do phasfhocal a athshl\xe1n\xfa.";
    },
    get$writeAMessage() {
      return "Scr\xedobh teachtaireacht\u2026";
    },
    get$yes() {
      return "T\xe1";
    },
    get$you() {
      return "T\xfa";
    },
    get$youAreNoLongerParticipatingInThisChat() {
      return "N\xedl t\xfa ag glacadh p\xe1irte sa chomhr\xe1 seo a thuilleadh";
    },
    get$youHaveBeenBannedFromThisChat() {
      return "Cuireadh cosc ort \xf3n gcomhr\xe1 seo";
    },
    get$yourPublicKey() {
      return "D'eochair phoibl\xed";
    },
    get$messageInfo() {
      return "Eolas teachtaireachta";
    },
    get$time(_) {
      return "Am";
    },
    get$sender() {
      return "Seolt\xf3ir";
    },
    get$openGallery() {
      return "Oscail gaileara\xed";
    },
    get$start(_) {
      return "Tosaigh";
    },
    get$markAsRead() {
      return "Marc\xe1il mar l\xe9ite";
    },
    reactedWith$2(sender, reaction) {
      return "D'fhreagair " + sender + " le " + reaction;
    },
    get$pinMessage() {
      return "PIN go seomra";
    },
    get$emojis() {
      return "Emojis";
    },
    get$youRejectedTheInvitation() {
      return "Dhi\xfaltaigh t\xfa don chuireadh";
    },
    get$youJoinedTheChat() {
      return "Chuaigh t\xfa isteach sa chomhr\xe1";
    },
    get$youAcceptedTheInvitation() {
      return "\ud83d\udc4d Ghlac t\xfa leis an gcuireadh";
    },
    youBannedUser$1(user) {
      return "Chuir t\xfa cosc ar " + user;
    },
    youHaveWithdrawnTheInvitationFor$1(user) {
      return "Tharraing t\xfa siar an cuireadh do " + user;
    },
    youInvitedBy$1(user) {
      return "\ud83d\udce9 Thug " + user + " cuireadh duit";
    },
    youInvitedUser$1(user) {
      return "\ud83d\udce9 Thug t\xfa cuireadh do " + user;
    },
    youKicked$1(user) {
      return "\ud83d\udc5e Chice\xe1il t\xfa " + user;
    },
    youUnbannedUser$1(user) {
      return "Unbanned t\xfa " + user;
    },
    hasKnocked$1(user) {
      return "\ud83d\udeaa T\xe1 " + user + " tar \xe9is cnagadh";
    },
    get$users() {
      return "\xdas\xe1ideoir\xed";
    },
    countFiles$1(count) {
      return "Comhaid " + count;
    },
    get$user() {
      return "\xdas\xe1ideoir";
    },
    get$custom() {
      return "Saincheaptha";
    },
    get$noKeyForThisMessage() {
      return "F\xe9adfaidh s\xe9 seo tarl\xfa m\xe1 seoladh an teachtaireacht sular sh\xednigh t\xfa isteach ar do chuntas ag an ngl\xe9as seo.\n\nIs f\xe9idir freisin gur chuir an seolt\xf3ir bac ar do ghl\xe9as n\xf3 go ndeachaigh rud \xe9igin m\xedcheart leis an nasc idirl\xedn.\n\nAn bhfuil t\xfa in ann an teachtaireacht a l\xe9amh ar sheisi\xfan eile? Ansin is f\xe9idir leat an teachtaireacht a aistri\xfa uaidh! T\xe9igh go Socruithe > Gl\xe9asanna agus cinntigh go bhfuil do ghl\xe9asanna f\xedoraithe a ch\xe9ile. Nuair a oscla\xedonn t\xfa an seomra an ch\xe9ad uair eile agus an d\xe1 sheisi\xfan sa tulra, d\xe9anfar na heochracha a tharchur go huathoibr\xedoch.\n\nN\xe1r mhaith leat na heochracha a chailleadh agus t\xfa ag log\xe1il amach n\xf3 ag aistri\xfa gl\xe9asanna? D\xe9an cinnte go bhfuil an c\xfaltaca comhr\xe1 cumasaithe agat sna socruithe.";
    },
    wasDirectChatDisplayName$1(oldDisplayName) {
      return "Comhr\xe1 folamh (bh\xed " + oldDisplayName + ")";
    },
    get$reopenChat() {
      return "Comhr\xe1 a athoscailt";
    },
    get$noOtherDevicesFound() {
      return "N\xedor aims\xedodh aon ghl\xe9as eile";
    },
    fileIsTooBigForServer$1(max) {
      return "N\xed f\xe9idir seol! N\xed thaca\xedonn an freastala\xed ach le ceangalt\xe1in suas le " + max + ".";
    },
    get$jumpToLastReadMessage() {
      return "L\xe9im go dt\xed an teachtaireacht l\xe9ite is d\xe9ana\xed";
    },
    get$readUpToHere() {
      return "L\xe9igh suas go dt\xed seo";
    },
    get$jump() {
      return "L\xe9im";
    },
    get$openLinkInBrowser() {
      return "Oscail nasc sa bhrabhs\xe1la\xed";
    },
    get$setColorTheme() {
      return "Socraigh t\xe9ama datha:";
    },
    get$invite() {
      return "Tabhair cuireadh";
    },
    get$invalidInput() {
      return "Ionchur neamhbhail\xed!";
    },
    wrongPinEntered$1(seconds) {
      return "Th\xe1inig bior\xe1n m\xedcheart isteach! Bain triail eile as i " + seconds + " soicind...";
    },
    get$pleaseEnterANumber() {
      return "Iontr\xe1il uimhir n\xedos m\xf3 n\xe1 0";
    },
    get$removeDevicesDescription() {
      return "Beidh t\xfa log\xe1ilte amach as an ngl\xe9as seo agus n\xed bheidh t\xfa in ann teachtaireachta\xed a fh\xe1il a thuilleadh.";
    },
    get$banUserDescription() {
      return "Beidh cosc ar an \xfas\xe1ideoir \xf3n gcomhr\xe1 agus n\xed bheidh s\xe9 in ann dul isteach sa chomhr\xe1 ar\xeds go dt\xed go mbeidh siad gan chosc.";
    },
    get$unbanUserDescription() {
      return "Beidh an t-\xfas\xe1ideoir in ann dul isteach sa chomhr\xe1 ar\xeds m\xe1 dh\xe9anann siad iarracht.";
    },
    get$kickUserDescription() {
      return "Cice\xe1iltear an t-\xfas\xe1ideoir as an gcomhr\xe1 ach n\xedl cosc air. I gcomhr\xe1ite poibl\xed, is f\xe9idir leis an \xfas\xe1ideoir teacht ar ais ag am ar bith.";
    },
    get$makeAdminDescription() {
      return "Nuair a dh\xe9anann t\xfa an riarach\xe1n \xfas\xe1ideora seo, b'fh\xe9idir nach mbeidh t\xfa in ann \xe9 seo a cheal\xfa mar go mbeidh na ceadanna c\xe9anna acu agus at\xe1 agat.";
    },
    get$yourGlobalUserIdIs() {
      return "Is \xe9 d'aitheantas \xfas\xe1ideora domhanda: ";
    },
    noUsersFoundWithQuery$1(query) {
      return 'Ar an drochuair n\xed fh\xe9adfa\xed aon \xfas\xe1ideoir a aimsi\xfa le "' + query + '". Seice\xe1il le do thoil an ndearna t\xfa typo.';
    },
    get$knocking() {
      return "Cnagadh";
    },
    get$nothingFound() {
      return "N\xedor aims\xedodh aon rud...";
    },
    get$groupName() {
      return "Ainm an ghr\xfapa";
    },
    get$wrongRecoveryKey() {
      return "T\xe1 br\xf3n orm... N\xed cos\xfail gurb \xe9 seo an eochair aisghabh\xe1la ceart.";
    },
    get$startConversation() {
      return "Tosaigh comhr\xe1";
    },
    get$commandHint_sendraw() {
      return "Seol json amh";
    },
    get$leaveEmptyToClearStatus() {
      return "F\xe1g folamh chun do st\xe1das a ghlanadh.";
    },
    get$searchForUsers() {
      return "Cuardaigh @users...";
    },
    get$pleaseEnterYourCurrentPassword() {
      return "Iontr\xe1il do phasfhocal reatha le do thoil";
    },
    get$newPassword() {
      return "Pasfhocal nua";
    },
    get$pleaseChooseAStrongPassword() {
      return "Roghnaigh pasfhocal l\xe1idir";
    },
    get$passwordsDoNotMatch() {
      return "N\xed mheaitse\xe1lann pasfhocail";
    },
    get$passwordIsWrong() {
      return "T\xe1 do phasfhocal iontr\xe1la m\xedcheart";
    },
    get$decline() {
      return "Meath";
    },
    get$thisDevice() {
      return "An gl\xe9as seo:";
    },
    get$initAppError() {
      return "Tharla earr\xe1id agus an feidhmchl\xe1r \xe1 thos\xfa";
    },
    searchIn$1(chat) {
      return 'Cuardaigh i gcomhr\xe1 "' + chat + '"...';
    },
    get$searchMore() {
      return "Cuardaigh tuilleadh...";
    },
    get$gallery() {
      return "Gaileara\xed";
    },
    get$files(_) {
      return "Comhaid";
    },
    sessionLostBody$2(url, error) {
      return "Cailltear do sheisi\xfan. Tuairiscigh an earr\xe1id seo do na forbr\xf3ir\xed ag " + url + ". Is \xed an teachtaireacht earr\xe1ide: " + error;
    },
    restoreSessionBody$2(url, error) {
      return "D\xe9anann an aip iarracht anois do sheisi\xfan a chur ar ais \xf3n gc\xfaltaca. Tuairiscigh an earr\xe1id seo do na forbr\xf3ir\xed ag " + url + ". Is \xed an teachtaireacht earr\xe1ide: " + error;
    },
    get$sendReadReceipts() {
      return "Seol admh\xe1lacha l\xe9ite";
    },
    get$sendTypingNotificationsDescription() {
      return "Is f\xe9idir le rannph\xe1irtithe eile i gcomhr\xe1 a fheice\xe1il nuair at\xe1 teachtaireacht nua \xe1 cl\xf3scr\xedobh agat.";
    },
    get$sendReadReceiptsDescription() {
      return "Is f\xe9idir le rannph\xe1irtithe eile i gcomhr\xe1 a fheice\xe1il nuair a bh\xedonn teachtaireacht l\xe9ite agat.";
    },
    get$verifyOtherDevice() {
      return "\ud83d\udd10 F\xedoraigh gl\xe9as eile";
    },
    get$verifyOtherDeviceDescription() {
      return "Nuair a fh\xedora\xedonn t\xfa gl\xe9as eile, is f\xe9idir leis na gl\xe9asanna sin eochracha a mhalart\xfa, do shl\xe1nd\xe1il fhorioml\xe1n a mh\xe9ad\xfa. \ud83d\udcaa Nuair a thosa\xedonn t\xfa f\xedor\xfa, beidh preabfhuinneog le feice\xe1il san aip ar an d\xe1 ghl\xe9as. Ansin feicfidh t\xfa sraith emojis n\xf3 uimhreacha a chaithfidh t\xfa a chur i gcompar\xe1id lena ch\xe9ile. Is fearr an d\xe1 ghl\xe9as a bheith \xe1isi\xfail sula dtosa\xedonn t\xfa ar an bhf\xedor\xfa. \ud83e\udd33";
    },
    acceptedKeyVerification$1(sender) {
      return sender + " glacadh le f\xedor\xfa eochair";
    },
    canceledKeyVerification$1(sender) {
      return sender + " cealaithe f\xedor\xfa eochrach";
    },
    completedKeyVerification$1(sender) {
      return sender + " f\xedor\xfa eochair cr\xedochnaithe";
    },
    isReadyForKeyVerification$1(sender) {
      return "T\xe1 " + sender + " r\xe9idh le haghaidh f\xedor\xfa eochair";
    },
    requestedKeyVerification$1(sender) {
      return "D'iarr " + sender + " f\xedor\xfa eochrach";
    },
    startedKeyVerification$1(sender) {
      return "Thosaigh " + sender + " f\xedor\xfa eochrach";
    },
    get$stickers() {
      return "Gream\xe1in";
    },
    get$commandHint_ignore() {
      return "D\xe9an neamhaird d'aitheantas na maitr\xedse sonraithe";
    },
    get$commandHint_unignore() {
      return "Unignore an ID maitr\xeds tugtha";
    },
    thereAreCountUsersBlocked$1(count) {
      return "Faoi l\xe1thair t\xe1 bac curtha ar \xfas\xe1ideoir\xed " + count + ".";
    },
    get$restricted() {
      return "Srianta";
    },
    get$markAsUnread() {
      return "Marc\xe1il mar gan l\xe9amh";
    },
    userLevel$1(level) {
      return "" + level + " - \xdas\xe1ideoir";
    },
    moderatorLevel$1(level) {
      return "" + level + " - Modhn\xf3ir";
    },
    adminLevel$1(level) {
      return "" + level + " - Riarach\xe1n";
    },
    get$changeTheVisibilityOfChatHistory() {
      return "Athraigh infheictheacht stair an chomhr\xe1";
    },
    get$changeTheCanonicalRoomAlias() {
      return "Athraigh an pr\xedomhsheoladh comhr\xe1 poibl\xed";
    },
    get$sendRoomNotifications() {
      return "Seol f\xf3gra\xed @room";
    },
    get$chatPermissionsDescription() {
      return "Sainmh\xednigh c\xe9n leibh\xe9al cumhachta is g\xe1 le haghaidh gn\xedomhartha \xe1irithe sa chomhr\xe1 seo. De ghn\xe1th b\xedonn na leibh\xe9il chumhachta 0, 50 agus 100 ag d\xe9anamh ionada\xedochta d'\xfas\xe1ideoir\xed, do mhodhn\xf3ir\xed agus do riarth\xf3ir\xed, ach is f\xe9idir aon ghr\xe1d\xfa a dh\xe9anamh.";
    },
    updateInstalled$1(version) {
      return "\ud83c\udf89 Nuashonraigh " + version + " suite\xe1ilte!";
    },
    get$sendCanceled() {
      return "Ceala\xedodh seoladh";
    },
    get$doesNotSeemToBeAValidHomeserver() {
      return "N\xed cos\xfail gur freastala\xed baile comhoiri\xfanach \xe9. URL m\xedcheart?";
    },
    get$calculatingFileSize() {
      return "M\xe9id an chomhaid \xe1 r\xedomh...";
    },
    get$prepareSendingAttachment() {
      return "Ullmhaigh an t- iat\xe1n \xe1 sheoladh...";
    },
    get$sendingAttachment() {
      return "Iat\xe1n \xe1 sheoladh...";
    },
    sendingAttachmentCountOfCount$2(index, $length) {
      return "Ceangalt\xe1n " + index + " de " + $length + " \xe1 sheoladh...";
    },
    serverLimitReached$1(seconds) {
      return "Sroicheadh teorainn an fhreastala\xed! Ag fanacht " + seconds + " soicind...";
    },
    get$noticeChatBackupDeviceVerification() {
      return "N\xf3ta: Nuair a nascann t\xfa do ghl\xe9asanna go l\xe9ir leis an gc\xfaltaca comhr\xe1, d\xe9antar iad a fh\xedor\xfa go huathoibr\xedoch.";
    },
    get$continueText() {
      return "Lean ar aghaidh";
    },
    get$blur(_) {
      return "Doil\xe9irigh:";
    },
    get$opacity(_) {
      return "Teimhneacht:";
    },
    get$setWallpaper() {
      return "Socraigh c\xfalbhrat";
    },
    get$noContactInformationProvided() {
      return "N\xed shol\xe1thra\xedonn an freastala\xed aon fhaisn\xe9is teagmh\xe1la bhail\xed";
    },
    get$contactServerAdmin() {
      return "D\xe9an teagmh\xe1il le admin an fhreastala\xed";
    },
    get$contactServerSecurity() {
      return "D\xe9an teagmh\xe1il le sl\xe1nd\xe1il an fhreastala\xed";
    },
    get$supportPage() {
      return "Leathanach taca\xedochta";
    },
    get$serverInformation() {
      return "Eolas freastala\xed:";
    },
    get$name(_) {
      return "Ainm";
    },
    get$version(_) {
      return "Leagan";
    },
    get$compress() {
      return "Comhbhr\xfaigh";
    },
    get$boldText() {
      return "T\xe9acs trom";
    },
    get$italicText() {
      return "T\xe9acs iod\xe1lach";
    },
    get$strikeThrough() {
      return "Stailc tr\xedd";
    },
    get$pleaseFillOut() {
      return "L\xedon amach le do thoil";
    },
    get$invalidUrl() {
      return "URL neamhbhail\xed";
    },
    get$addLink() {
      return "Cuir nasc leis";
    },
    get$unableToJoinChat() {
      return "N\xed f\xe9idir p\xe1irt a ghlacadh sa chomhr\xe1. B\u2019fh\xe9idir go bhfuil an comhr\xe1 d\xfanta cheana f\xe9in ag an bp\xe1irt\xed eile.";
    },
    get$previous() {
      return "Roimhe Seo";
    },
    get$otherPartyNotLoggedIn() {
      return "N\xedl an p\xe1irt\xed eile log\xe1ilte isteach faoi l\xe1thair agus mar sin n\xed f\xe9idir leo teachtaireachta\xed a fh\xe1il!";
    },
    get$open(_) {
      return "Oscail";
    },
    get$waitingForServer() {
      return "Ag fanacht leis an bhfreastala\xed...";
    },
    get$newChatRequest() {
      return "\ud83d\udce9 Iarratas comhr\xe1 nua";
    },
    get$contentNotificationSettings() {
      return "Socruithe f\xf3gra inneachair";
    },
    get$generalNotificationSettings() {
      return "Socruithe ginear\xe1lta f\xf3gra";
    },
    get$roomNotificationSettings() {
      return "Socruithe f\xf3gra seomra";
    },
    get$userSpecificNotificationSettings() {
      return "Socruithe f\xf3gra saini\xfala don \xfas\xe1ideoir";
    },
    get$otherNotificationSettings() {
      return "Socruithe f\xf3gra eile";
    },
    get$notificationRuleContainsUserName() {
      return "T\xe1 Ainm \xdas\xe1ideora ann";
    },
    get$notificationRuleContainsUserNameDescription() {
      return "Cuireann s\xe9 sin in i\xfal don \xfas\xe1ideoir nuair a bh\xedonn a ainm \xfas\xe1ideora i dteachtaireacht.";
    },
    get$notificationRuleMaster() {
      return "Balbhaigh gach f\xf3gra";
    },
    get$notificationRuleMasterDescription() {
      return "S\xe1ra\xedonn s\xe9 gach riail eile agus d\xedchumasa\xedtear gach f\xf3gra.";
    },
    get$notificationRuleSuppressNotices() {
      return "Bain Teachtaireachta\xed Uathoibrithe";
    },
    get$notificationRuleSuppressNoticesDescription() {
      return "Sochtann s\xe9 f\xf3gra\xed \xf3 chliaint uathoibrithe amhail r\xf3b\xf3nna.";
    },
    get$notificationRuleInviteForMe() {
      return "Tabhair cuireadh Do Mhise";
    },
    get$notificationRuleInviteForMeDescription() {
      return "Cuireann s\xe9 seo ar an eolas don \xfas\xe1ideoir nuair a thugtar cuireadh d\xf3/di go seomra.";
    },
    get$notificationRuleMemberEvent() {
      return "Imeacht Ball";
    },
    get$notificationRuleMemberEventDescription() {
      return "Sochtann f\xf3gra\xed le haghaidh imeachta\xed ballra\xedochta.";
    },
    get$notificationRuleIsUserMention() {
      return "Luaigh \xdas\xe1ideoir";
    },
    get$notificationRuleIsUserMentionDescription() {
      return "Cuireann s\xe9 sin in i\xfal don \xfas\xe1ideoir nuair a luaitear go d\xedreach iad i dteachtaireacht.";
    },
    get$notificationRuleContainsDisplayName() {
      return "T\xe1 Ainm Taispe\xe1na ann";
    },
    get$notificationRuleContainsDisplayNameDescription() {
      return "Cuireann s\xe9 sin in i\xfal don \xfas\xe1ideoir nuair a bh\xedonn a ainm taispe\xe1na i dteachtaireacht.";
    },
    get$notificationRuleIsRoomMention() {
      return "Luaigh Seomra";
    },
    get$notificationRuleIsRoomMentionDescription() {
      return "Cuireann s\xe9 sin in i\xfal don \xfas\xe1ideoir nuair a luaitear seomra.";
    },
    get$notificationRuleRoomnotif() {
      return "F\xf3gra Seomra";
    },
    get$notificationRuleRoomnotifDescription() {
      return "Cuireann s\xe9 seo in i\xfal don \xfas\xe1ideoir nuair a bh\xedonn '@room' i dteachtaireacht.";
    },
    get$notificationRuleTombstone() {
      return "Leac uaighe";
    },
    get$notificationRuleTombstoneDescription() {
      return "Cuireann s\xe9 seo in i\xfal don \xfas\xe1ideoir faoi theachtaireachta\xed d\xedghn\xedomhaithe seomra.";
    },
    get$notificationRuleReaction() {
      return "Imoibri\xfa";
    },
    get$notificationRuleReactionDescription() {
      return "Sochtann f\xf3gra\xed le haghaidh frithghn\xedomhartha.";
    },
    get$notificationRuleRoomServerAcl() {
      return "Freastala\xed Seomra ACL";
    },
    get$notificationRuleRoomServerAclDescription() {
      return "Sochtann s\xe9 f\xf3gra\xed do liosta\xed rialaithe rochtana freastala\xed seomra (ACL).";
    },
    get$notificationRuleSuppressEdits() {
      return "Cuir na hEagarth\xf3ir\xed ar ceal";
    },
    get$notificationRuleSuppressEditsDescription() {
      return "Sochtann f\xf3gra\xed le haghaidh teachtaireachta\xed curtha in eagar.";
    },
    get$notificationRuleCall() {
      return "Glaoigh";
    },
    get$notificationRuleCallDescription() {
      return "Cuireann s\xe9 an t-\xfas\xe1ideoir ar an eolas faoi ghlaonna.";
    },
    get$notificationRuleEncryptedRoomOneToOne() {
      return "Seomra Duine le Duine Criptithe";
    },
    get$notificationRuleEncryptedRoomOneToOneDescription() {
      return "Cuireann s\xe9 seo in i\xfal don \xfas\xe1ideoir faoi theachtaireachta\xed i seomra\xed duine le duine criptithe.";
    },
    get$notificationRuleRoomOneToOne() {
      return "Seomra duine le duine";
    },
    get$notificationRuleRoomOneToOneDescription() {
      return "Cuireann s\xe9 seo in i\xfal don \xfas\xe1ideoir faoi theachtaireachta\xed i seomra\xed duine le duine.";
    },
    get$notificationRuleMessage() {
      return "Teachtaireacht";
    },
    get$notificationRuleMessageDescription() {
      return "Cuireann s\xe9 seo in i\xfal don \xfas\xe1ideoir faoi theachtaireachta\xed ginear\xe1lta.";
    },
    get$notificationRuleEncrypted() {
      return "Criptithe";
    },
    get$notificationRuleEncryptedDescription() {
      return "Cuireann s\xe9 seo in i\xfal don \xfas\xe1ideoir faoi theachtaireachta\xed i seomra\xed criptithe.";
    },
    get$notificationRuleJitsi() {
      return "Jitsi";
    },
    get$notificationRuleJitsiDescription() {
      return "Cuireann s\xe9 seo in i\xfal don \xfas\xe1ideoir faoi imeachta\xed giuirl\xe9id\xed Jitsi.";
    },
    get$notificationRuleServerAcl() {
      return "Seachtaigh Freastala\xed ACL Imeachta\xed";
    },
    get$notificationRuleServerAclDescription() {
      return "Sochtann f\xf3gra\xed le haghaidh imeachta\xed Freastala\xed ACL.";
    },
    unknownPushRule$1(rule) {
      return "Riail bhr\xfa anaithnid '" + rule + "'";
    },
    sentVoiceMessage$2(sender, duration) {
      return "\ud83c\udf99\ufe0f " + duration + " - Teachtaireacht ghutha \xf3 " + sender;
    },
    get$deletePushRuleCanNotBeUndone() {
      return "M\xe1 scriosann t\xfa an socr\xfa f\xf3gra seo, n\xed f\xe9idir \xe9 seo a cheal\xfa.";
    },
    get$more() {
      return "Tuilleadh";
    },
    get$shareKeysWith() {
      return "Roinn na heochracha le...";
    },
    get$shareKeysWithDescription() {
      return "Cad iad na gl\xe9asanna ar cheart muin\xedn a chur iontu ionas gur f\xe9idir leo do chuid teachtaireachta\xed a l\xe9amh i gcomhr\xe1ite criptithe?";
    },
    get$allDevices() {
      return "Gach gl\xe9asanna";
    },
    get$crossVerifiedDevicesIfEnabled() {
      return "Gl\xe9asanna trasfh\xedoraithe m\xe1 t\xe1 siad cumasaithe";
    },
    get$crossVerifiedDevices() {
      return "Feist\xed trasfh\xedoraithe";
    },
    get$verifiedDevicesOnly() {
      return "Gl\xe9asanna f\xedoraithe amh\xe1in";
    },
    get$optionalMessage() {
      return "Teachtaireacht (Roghnach)\u2026";
    },
    get$notSupportedOnThisDevice() {
      return "N\xed thaca\xedtear leis ar an ngl\xe9as seo";
    },
    get$enterNewChat() {
      return "Cuir isteach comhr\xe1 nua";
    },
    get$approve() {
      return "Ceadaigh";
    },
    get$commandHint_logout() {
      return "Log\xe1il amach as do ghl\xe9as reatha";
    },
    get$commandHint_logoutall() {
      return "Log\xe1il amach gach gl\xe9as gn\xedomhach";
    },
    get$customReaction() {
      return "Custom reaction";
    },
    writeAMessageLangCodes$2(l1, l2) {
      return "Type in " + l1 + " or " + l2 + "...";
    },
    get$holdForInfo() {
      return "Click and hold for word info.";
    },
    get$greenFeedback() {
      return "That's what I would put!";
    },
    get$yellowFeedback() {
      return "Hm, you can try that and see if it works! To use this word, just click it again.";
    },
    get$redFeedback() {
      return "I don't think that's right...";
    },
    get$itInstructionsTitle() {
      return "I can help you translate!";
    },
    get$itInstructionsBody() {
      return "You can click and hold choices for word info.";
    },
    get$gaTooltip() {
      return "L2 use with grammar assistance";
    },
    get$taTooltip() {
      return "L2 use with translation assistance";
    },
    get$interactiveTranslatorSliderHeader() {
      return "Interactive Translator";
    },
    get$interactiveGrammarSliderHeader() {
      return "Interactive Grammar Checker";
    },
    get$waTooltip() {
      return "L2 use without assistance";
    },
    get$noIdenticalLanguages() {
      return "Please choose different base and target languages";
    },
    get$joinWithClassCode() {
      return "Join course";
    },
    get$joinWithClassCodeHint() {
      return "Enter invite code";
    },
    get$languageLevelPreA1() {
      return "True Beginner (Pre A1)";
    },
    get$languageLevelA1() {
      return "Beginner (A1)";
    },
    get$languageLevelA2() {
      return "Elementary (A2)";
    },
    get$languageLevelB1() {
      return "Intermediate (B1)";
    },
    get$languageLevelB2() {
      return "Upper Intermediate (B2)";
    },
    get$languageLevelC1() {
      return "Advanced (C1)";
    },
    get$languageLevelC2() {
      return "Mastery (C2)";
    },
    get$changeTheNameOfTheClass() {
      return "Change the name";
    },
    get$changeTheNameOfTheChat() {
      return "Change the name of the chat";
    },
    get$sorryNoResults() {
      return "Sorry, no results.";
    },
    get$ignoreInThisText() {
      return "Ignore";
    },
    needsItMessage$1(targetLanguage) {
      return "Wait, that's not " + targetLanguage + "! Do you need help translating?";
    },
    get$countryInformation() {
      return "My country";
    },
    get$targetLanguage() {
      return "Target Language";
    },
    get$updateLanguage() {
      return "My languages";
    },
    get$whatLanguageYouWantToLearn() {
      return "What language do you want to learn?";
    },
    get$whatIsYourBaseLanguage() {
      return "What is your base language?";
    },
    get$saveChanges() {
      return "Save changes";
    },
    get$publicProfileTitle() {
      return "Allow my profile to be found in search";
    },
    get$publicProfileDesc() {
      return "By turning on, you enable other users to find your profile in the global search bar and send requests to chat. At this point, you can choose to accept or deny the request.";
    },
    get$errorDisableIT() {
      return "Translation assistance is turned off.";
    },
    get$errorDisableIGC() {
      return "Grammar assistance is turned off.";
    },
    get$errorDisableLanguageAssistance() {
      return "Translation assistance and grammar assistance are turned off.";
    },
    get$errorDisableITUserDesc() {
      return "Click here to update translation assistance settings";
    },
    get$errorDisableIGCUserDesc() {
      return "Click here to update grammar assistance settings";
    },
    get$errorDisableLanguageAssistanceUserDesc() {
      return "Click here to update translation assistance and grammar assistance settings";
    },
    get$errorDisableITClassDesc() {
      return "Translation assistance is turned off for the course that this chat is in.";
    },
    get$errorDisableIGCClassDesc() {
      return "Grammar assistance is turned off for the course that this chat is in.";
    },
    get$error405Title() {
      return "Languages not set";
    },
    get$error405Desc() {
      return "Please set your languages in Main Menu > Learning Settings.";
    },
    get$termsAndConditions() {
      return "Terms and Conditions";
    },
    get$andCertifyIAmAtLeast13YearsOfAge() {
      return " and certify I am at least 16 years of age.";
    },
    get$error502504Title() {
      return "Wow, there are a lot of students online!";
    },
    get$error502504Desc() {
      return "Translation and grammar tools may be slow or unavailable while the Pangea bots catch up.";
    },
    get$error404Title() {
      return "Translation error!";
    },
    get$error404Desc() {
      return "Pangea Bot isn't sure how to translate that...";
    },
    get$errorPleaseRefresh() {
      return "We're looking into it! Please reload and try again.";
    },
    get$connectedToStaging() {
      return "Connected to Staging";
    },
    get$learningSettings() {
      return "Learning settings";
    },
    get$participants() {
      return "Participants";
    },
    get$clickMessageTitle() {
      return "Need help?";
    },
    get$clickMessageBody() {
      return "Click a message for language tools like translation, play back and more!";
    },
    get$allDone() {
      return "All done!";
    },
    get$vocab() {
      return "Vocab";
    },
    get$subscribe(_) {
      return "Subscribe";
    },
    get$getAccess() {
      return "Subscribe now!";
    },
    get$subscriptionDesc() {
      return "Messaging is free! Subscribe to unlock interactive translation, grammar checking and learning analytics.";
    },
    get$subscriptionManagement() {
      return "Subscription Management";
    },
    get$currentSubscription() {
      return "Current Subscription";
    },
    get$cancelSubscription() {
      return "Cancel your subscription";
    },
    get$selectYourPlan() {
      return "Select Your Plan";
    },
    get$subsciptionPlatformTooltip() {
      return "Please login to your original device to manage your subscription plan";
    },
    get$subscriptionManagementUnavailable() {
      return "Subscription management not available";
    },
    get$paymentMethod() {
      return "Payment Method";
    },
    get$paymentHistory() {
      return "Payment History";
    },
    get$emptyChatDownloadWarning() {
      return "Cannot download empty chat";
    },
    get$toggleImmersionMode() {
      return "Immersion Mode";
    },
    get$toggleImmersionModeDesc() {
      return "When enabled, all messages are displayed in your target language. This setting is most useful in language exchanges.";
    },
    get$itToggleDescription() {
      return "This language learning tool will identify words in your base language and help you translate them to your target language. Though rare, the AI can make translation errors.";
    },
    get$igcToggleDescription() {
      return "This language learning tool will identify common spelling, grammar and punctuation errors in your message and suggest corrections. Though rare, the AI can make correction errors.";
    },
    get$originalMessage() {
      return "Original Message";
    },
    get$sentMessage() {
      return "Sent Message";
    },
    get$useType() {
      return "Use Type";
    },
    get$notAvailable() {
      return "Not Available";
    },
    get$taAndGaTooltip() {
      return "L2 use with translation assistance and grammar assistance";
    },
    get$definitionsToolName() {
      return "Word Definitions";
    },
    get$definitionsToolDescription() {
      return "When enabled, words underlined in blue can be clicked for definitions. Click messages to access definitions.";
    },
    get$welcomeBack() {
      return "Welcome back! If you were part of the 2023-2024 pilot, please contact us for your special pilot subscription. If you are a teacher who has (or whose institution has) purchased licenses for your class, contact us for your teacher subscription.";
    },
    get$downloadTxtFile() {
      return "Download Text File";
    },
    get$downloadCSVFile() {
      return "Download CSV File";
    },
    get$promotionalSubscriptionDesc() {
      return "You currently have a lifetime promotional subscription. Message support@pangea.chat for help changing your subscription.";
    },
    originalSubscriptionPlatform$1(purchasePlatform) {
      return "Subscription purchased through " + purchasePlatform;
    },
    get$oneWeekTrial() {
      return "One Week Trial";
    },
    get$downloadXLSXFile() {
      return "Download Excel File";
    },
    get$unkDisplayName() {
      return "Unknown";
    },
    get$wwCountryDisplayName() {
      return "World Wide";
    },
    get$afCountryDisplayName() {
      return "Afghanistan";
    },
    get$axCountryDisplayName() {
      return "Aland Islands";
    },
    get$alCountryDisplayName() {
      return "Albania";
    },
    get$dzCountryDisplayName() {
      return "Algeria";
    },
    get$asCountryDisplayName() {
      return "American Samoa";
    },
    get$adCountryDisplayName() {
      return "Andorra";
    },
    get$aoCountryDisplayName() {
      return "Angola";
    },
    get$aiCountryDisplayName() {
      return "Anguilla";
    },
    get$agCountryDisplayName() {
      return "Antigua and Barbuda";
    },
    get$arCountryDisplayName() {
      return "Argentina";
    },
    get$amCountryDisplayName() {
      return "Armenia";
    },
    get$awCountryDisplayName() {
      return "Aruba";
    },
    get$acCountryDisplayName() {
      return "Ascension Island";
    },
    get$auCountryDisplayName() {
      return "Australia";
    },
    get$atCountryDisplayName() {
      return "Austria";
    },
    get$azCountryDisplayName() {
      return "Azerbaijan";
    },
    get$bsCountryDisplayName() {
      return "Bahamas";
    },
    get$bhCountryDisplayName() {
      return "Bahrain";
    },
    get$bdCountryDisplayName() {
      return "Bangladesh";
    },
    get$bbCountryDisplayName() {
      return "Barbados";
    },
    get$byCountryDisplayName() {
      return "Belarus";
    },
    get$beCountryDisplayName() {
      return "Belgium";
    },
    get$bzCountryDisplayName() {
      return "Belize";
    },
    get$bjCountryDisplayName() {
      return "Benin";
    },
    get$bmCountryDisplayName() {
      return "Bermuda";
    },
    get$btCountryDisplayName() {
      return "Bhutan";
    },
    get$boCountryDisplayName() {
      return "Bolivia";
    },
    get$baCountryDisplayName() {
      return "Bosnia and Herzegovina";
    },
    get$bwCountryDisplayName() {
      return "Botswana";
    },
    get$brCountryDisplayName() {
      return "Brazil";
    },
    get$ioCountryDisplayName() {
      return "British Indian Ocean Territory";
    },
    get$vgCountryDisplayName() {
      return "British Virgin Islands";
    },
    get$bnCountryDisplayName() {
      return "Brunei";
    },
    get$bgCountryDisplayName() {
      return "Bulgaria";
    },
    get$bfCountryDisplayName() {
      return "Burkina Faso";
    },
    get$biCountryDisplayName() {
      return "Burundi";
    },
    get$khCountryDisplayName() {
      return "Cambodia";
    },
    get$cmCountryDisplayName() {
      return "Cameroon";
    },
    get$caCountryDisplayName() {
      return "Canada";
    },
    get$cvCountryDisplayName() {
      return "Cape Verde";
    },
    get$bqCountryDisplayName() {
      return "Caribbean Netherlands";
    },
    get$kyCountryDisplayName() {
      return "Cayman Islands";
    },
    get$cfCountryDisplayName() {
      return "Central African Republic";
    },
    get$tdCountryDisplayName() {
      return "Chad";
    },
    get$clCountryDisplayName() {
      return "Chile";
    },
    get$cnCountryDisplayName() {
      return "China";
    },
    get$cxCountryDisplayName() {
      return "Christmas Island";
    },
    get$ccCountryDisplayName() {
      return "Cocos [Keeling] Islands";
    },
    get$coCountryDisplayName() {
      return "Colombia";
    },
    get$kmCountryDisplayName() {
      return "Comoros";
    },
    get$cdCountryDisplayName() {
      return "Democratic Republic Congo";
    },
    get$cgCountryDisplayName() {
      return "Republic of Congo";
    },
    get$ckCountryDisplayName() {
      return "Cook Islands";
    },
    get$crCountryDisplayName() {
      return "Costa Rica";
    },
    get$ciCountryDisplayName() {
      return "C\xf4te d'Ivoire";
    },
    get$hrCountryDisplayName() {
      return "Croatia";
    },
    get$cuCountryDisplayName() {
      return "Cuba";
    },
    get$cwCountryDisplayName() {
      return "Cura\xe7ao";
    },
    get$cyCountryDisplayName() {
      return "Cyprus";
    },
    get$czCountryDisplayName() {
      return "Czech Republic";
    },
    get$dkCountryDisplayName() {
      return "Denmark";
    },
    get$djCountryDisplayName() {
      return "Djibouti";
    },
    get$dmCountryDisplayName() {
      return "Dominica";
    },
    get$doCountryDisplayName() {
      return "Dominican Republic";
    },
    get$tlCountryDisplayName() {
      return "East Timor";
    },
    get$ecCountryDisplayName() {
      return "Ecuador";
    },
    get$egCountryDisplayName() {
      return "Egypt";
    },
    get$svCountryDisplayName() {
      return "El Salvador";
    },
    get$gqCountryDisplayName() {
      return "Equatorial Guinea";
    },
    get$erCountryDisplayName() {
      return "Eritrea";
    },
    get$eeCountryDisplayName() {
      return "Estonia";
    },
    get$szCountryDisplayName() {
      return "Eswatini";
    },
    get$etCountryDisplayName() {
      return "Ethiopia";
    },
    get$fkCountryDisplayName() {
      return "Falkland Islands";
    },
    get$foCountryDisplayName() {
      return "Faroe Islands";
    },
    get$fjCountryDisplayName() {
      return "Fiji";
    },
    get$fiCountryDisplayName() {
      return "Finland";
    },
    get$frCountryDisplayName() {
      return "France";
    },
    get$gfCountryDisplayName() {
      return "French Guiana";
    },
    get$pfCountryDisplayName() {
      return "French Polynesia";
    },
    get$gaCountryDisplayName() {
      return "Gabon";
    },
    get$gmCountryDisplayName() {
      return "Gambia";
    },
    get$geCountryDisplayName() {
      return "Georgia";
    },
    get$deCountryDisplayName() {
      return "Germany";
    },
    get$ghCountryDisplayName() {
      return "Ghana";
    },
    get$giCountryDisplayName() {
      return "Gibraltar";
    },
    get$grCountryDisplayName() {
      return "Greece";
    },
    get$glCountryDisplayName() {
      return "Greenland";
    },
    get$gdCountryDisplayName() {
      return "Grenada";
    },
    get$gpCountryDisplayName() {
      return "Guadeloupe";
    },
    get$guCountryDisplayName() {
      return "Guam";
    },
    get$gtCountryDisplayName() {
      return "Guatemala";
    },
    get$ggCountryDisplayName() {
      return "Guernsey";
    },
    get$gnCountryDisplayName() {
      return "Guinea Conakry";
    },
    get$gwCountryDisplayName() {
      return "Guinea-Bissau";
    },
    get$gyCountryDisplayName() {
      return "Guyana";
    },
    get$htCountryDisplayName() {
      return "Haiti";
    },
    get$hmCountryDisplayName() {
      return "Heard Island and McDonald Islands";
    },
    get$hnCountryDisplayName() {
      return "Honduras";
    },
    get$hkCountryDisplayName() {
      return "Hong Kong";
    },
    get$huCountryDisplayName() {
      return "Hungary";
    },
    get$isCountryDisplayName() {
      return "Iceland";
    },
    get$inCountryDisplayName() {
      return "India";
    },
    get$idCountryDisplayName() {
      return "Indonesia";
    },
    get$irCountryDisplayName() {
      return "Iran";
    },
    get$iqCountryDisplayName() {
      return "Iraq";
    },
    get$ieCountryDisplayName() {
      return "Ireland";
    },
    get$imCountryDisplayName() {
      return "Isle of Man";
    },
    get$ilCountryDisplayName() {
      return "Israel";
    },
    get$itCountryDisplayName() {
      return "Italy";
    },
    get$jmCountryDisplayName() {
      return "Jamaica";
    },
    get$jpCountryDisplayName() {
      return "Japan";
    },
    get$jeCountryDisplayName() {
      return "Jersey";
    },
    get$joCountryDisplayName() {
      return "Jordan";
    },
    get$kzCountryDisplayName() {
      return "Kazakhstan";
    },
    get$keCountryDisplayName() {
      return "Kenya";
    },
    get$kiCountryDisplayName() {
      return "Kiribati";
    },
    get$xkCountryDisplayName() {
      return "Kosovo";
    },
    get$kwCountryDisplayName() {
      return "Kuwait";
    },
    get$kgCountryDisplayName() {
      return "Kyrgyzstan";
    },
    get$laCountryDisplayName() {
      return "Laos";
    },
    get$lvCountryDisplayName() {
      return "Latvia";
    },
    get$lbCountryDisplayName() {
      return "Lebanon";
    },
    get$lsCountryDisplayName() {
      return "Lesotho";
    },
    get$lrCountryDisplayName() {
      return "Liberia";
    },
    get$lyCountryDisplayName() {
      return "Libya";
    },
    get$liCountryDisplayName() {
      return "Liechtenstein";
    },
    get$ltCountryDisplayName() {
      return "Lithuania";
    },
    get$luCountryDisplayName() {
      return "Luxembourg";
    },
    get$moCountryDisplayName() {
      return "Macau";
    },
    get$mkCountryDisplayName() {
      return "Macedonia";
    },
    get$mgCountryDisplayName() {
      return "Madagascar";
    },
    get$mwCountryDisplayName() {
      return "Malawi";
    },
    get$myCountryDisplayName() {
      return "Malaysia";
    },
    get$mvCountryDisplayName() {
      return "Maldives";
    },
    get$mlCountryDisplayName() {
      return "Mali";
    },
    get$mtCountryDisplayName() {
      return "Malta";
    },
    get$mhCountryDisplayName() {
      return "Marshall Islands";
    },
    get$mqCountryDisplayName() {
      return "Martinique";
    },
    get$mrCountryDisplayName() {
      return "Mauritania";
    },
    get$muCountryDisplayName() {
      return "Mauritius";
    },
    get$ytCountryDisplayName() {
      return "Mayotte";
    },
    get$mxCountryDisplayName() {
      return "Mexico";
    },
    get$fmCountryDisplayName() {
      return "Micronesia";
    },
    get$mdCountryDisplayName() {
      return "Moldova";
    },
    get$mcCountryDisplayName() {
      return "Monaco";
    },
    get$mnCountryDisplayName() {
      return "Mongolia";
    },
    get$meCountryDisplayName() {
      return "Montenegro";
    },
    get$msCountryDisplayName() {
      return "Montserrat";
    },
    get$maCountryDisplayName() {
      return "Morocco";
    },
    get$mzCountryDisplayName() {
      return "Mozambique";
    },
    get$mmCountryDisplayName() {
      return "Myanmar (Burma)";
    },
    get$naCountryDisplayName() {
      return "Namibia";
    },
    get$nrCountryDisplayName() {
      return "Nauru";
    },
    get$npCountryDisplayName() {
      return "Nepal";
    },
    get$nlCountryDisplayName() {
      return "Netherlands";
    },
    get$ncCountryDisplayName() {
      return "New Caledonia";
    },
    get$nzCountryDisplayName() {
      return "New Zealand";
    },
    get$niCountryDisplayName() {
      return "Nicaragua";
    },
    get$neCountryDisplayName() {
      return "Niger";
    },
    get$ngCountryDisplayName() {
      return "Nigeria";
    },
    get$nuCountryDisplayName() {
      return "Niue";
    },
    get$nfCountryDisplayName() {
      return "Norfolk Island";
    },
    get$kpCountryDisplayName() {
      return "North Korea";
    },
    get$mpCountryDisplayName() {
      return "Northern Mariana Islands";
    },
    get$noCountryDisplayName() {
      return "Norway";
    },
    get$omCountryDisplayName() {
      return "Oman";
    },
    get$pkCountryDisplayName() {
      return "Pakistan";
    },
    get$pwCountryDisplayName() {
      return "Palau";
    },
    get$psCountryDisplayName() {
      return "Palestinian Territories";
    },
    get$paCountryDisplayName() {
      return "Panama";
    },
    get$pgCountryDisplayName() {
      return "Papua New Guinea";
    },
    get$pyCountryDisplayName() {
      return "Paraguay";
    },
    get$peCountryDisplayName() {
      return "Peru";
    },
    get$phCountryDisplayName() {
      return "Philippines";
    },
    get$plCountryDisplayName() {
      return "Poland";
    },
    get$ptCountryDisplayName() {
      return "Portugal";
    },
    get$prCountryDisplayName() {
      return "Puerto Rico";
    },
    get$qaCountryDisplayName() {
      return "Qatar";
    },
    get$reCountryDisplayName() {
      return "R\xe9union";
    },
    get$roCountryDisplayName() {
      return "Romania";
    },
    get$ruCountryDisplayName() {
      return "Russia";
    },
    get$rwCountryDisplayName() {
      return "Rwanda";
    },
    get$blCountryDisplayName() {
      return "Saint Barth\xe9lemy";
    },
    get$shCountryDisplayName() {
      return "Saint Helena";
    },
    get$knCountryDisplayName() {
      return "St. Kitts";
    },
    get$lcCountryDisplayName() {
      return "St. Lucia";
    },
    get$mfCountryDisplayName() {
      return "Saint Martin";
    },
    get$pmCountryDisplayName() {
      return "Saint Pierre and Miquelon";
    },
    get$vcCountryDisplayName() {
      return "St. Vincent";
    },
    get$wsCountryDisplayName() {
      return "Samoa";
    },
    get$smCountryDisplayName() {
      return "San Marino";
    },
    get$stCountryDisplayName() {
      return "S\xe3o Tom\xe9 and Pr\xedncipe";
    },
    get$saCountryDisplayName() {
      return "Saudi Arabia";
    },
    get$snCountryDisplayName() {
      return "Senegal";
    },
    get$rsCountryDisplayName() {
      return "Serbia";
    },
    get$scCountryDisplayName() {
      return "Seychelles";
    },
    get$slCountryDisplayName() {
      return "Sierra Leone";
    },
    get$sgCountryDisplayName() {
      return "Singapore";
    },
    get$sxCountryDisplayName() {
      return "Sint Maarten";
    },
    get$skCountryDisplayName() {
      return "Slovakia";
    },
    get$siCountryDisplayName() {
      return "Slovenia";
    },
    get$sbCountryDisplayName() {
      return "Solomon Islands";
    },
    get$soCountryDisplayName() {
      return "Somalia";
    },
    get$zaCountryDisplayName() {
      return "South Africa";
    },
    get$gsCountryDisplayName() {
      return "South Georgia and the South Sandwich Islands";
    },
    get$krCountryDisplayName() {
      return "South Korea";
    },
    get$ssCountryDisplayName() {
      return "South Sudan";
    },
    get$esCountryDisplayName() {
      return "Spain";
    },
    get$lkCountryDisplayName() {
      return "Sri Lanka";
    },
    get$sdCountryDisplayName() {
      return "Sudan";
    },
    get$srCountryDisplayName() {
      return "Suriname";
    },
    get$sjCountryDisplayName() {
      return "Svalbard and Jan Mayen";
    },
    get$seCountryDisplayName() {
      return "Sweden";
    },
    get$chCountryDisplayName() {
      return "Switzerland";
    },
    get$syCountryDisplayName() {
      return "Syria";
    },
    get$twCountryDisplayName() {
      return "Taiwan";
    },
    get$tjCountryDisplayName() {
      return "Tajikistan";
    },
    get$tzCountryDisplayName() {
      return "Tanzania";
    },
    get$thCountryDisplayName() {
      return "Thailand";
    },
    get$tgCountryDisplayName() {
      return "Togo";
    },
    get$tkCountryDisplayName() {
      return "Tokelau";
    },
    get$toCountryDisplayName() {
      return "Tonga";
    },
    get$ttCountryDisplayName() {
      return "Trinidad/Tobago";
    },
    get$tnCountryDisplayName() {
      return "Tunisia";
    },
    get$trCountryDisplayName() {
      return "Turkey";
    },
    get$tmCountryDisplayName() {
      return "Turkmenistan";
    },
    get$tcCountryDisplayName() {
      return "Turks and Caicos Islands";
    },
    get$tvCountryDisplayName() {
      return "Tuvalu";
    },
    get$viCountryDisplayName() {
      return "U.S. Virgin Islands";
    },
    get$ugCountryDisplayName() {
      return "Uganda";
    },
    get$uaCountryDisplayName() {
      return "Ukraine";
    },
    get$aeCountryDisplayName() {
      return "United Arab Emirates";
    },
    get$gbCountryDisplayName() {
      return "United Kingdom";
    },
    get$usCountryDisplayName() {
      return "United States";
    },
    get$uyCountryDisplayName() {
      return "Uruguay";
    },
    get$uzCountryDisplayName() {
      return "Uzbekistan";
    },
    get$vuCountryDisplayName() {
      return "Vanuatu";
    },
    get$vaCountryDisplayName() {
      return "Vatican City";
    },
    get$veCountryDisplayName() {
      return "Venezuela";
    },
    get$vnCountryDisplayName() {
      return "Vietnam";
    },
    get$wfCountryDisplayName() {
      return "Wallis and Futuna";
    },
    get$ehCountryDisplayName() {
      return "Western Sahara";
    },
    get$yeCountryDisplayName() {
      return "Yemen";
    },
    get$zmCountryDisplayName() {
      return "Zambia";
    },
    get$zwCountryDisplayName() {
      return "Zimbabwe";
    },
    get$pay() {
      return "Pay";
    },
    invitedToSpace$2(space, user) {
      return user + " has invited you to join a course: " + space + "! Do you wish to accept?";
    },
    get$youreInvited() {
      return "\ud83d\udce9 You're invited!";
    },
    invitedToChat$2($name, user) {
      return user + " has invited you to join a chat: " + $name + "! Do you wish to accept?";
    },
    get$monthlySubscription() {
      return "Monthly";
    },
    get$yearlySubscription() {
      return "Yearly";
    },
    get$defaultSubscription() {
      return "Pangea Chat Subscription";
    },
    get$freeTrial() {
      return "Free Trial";
    },
    get$noDataFound() {
      return "No data found";
    },
    get$blurMeansTranslateTitle() {
      return "Why is the message blurred?";
    },
    get$blurMeansTranslateBody() {
      return "While Immersion Mode is on, messages that are sent in your base language will be blurred while Pangea Bot translates them to your target language. Immersion Mode can be toggled in individual and course settings.";
    },
    get$bestCorrectionFeedback() {
      return "That's correct!";
    },
    get$distractorFeedback() {
      return "That's not quite right.";
    },
    get$bestAnswerFeedback() {
      return "That's correct!";
    },
    get$definitionDefaultPrompt() {
      return "What does this word mean?";
    },
    get$practiceDefaultPrompt() {
      return "What is the best answer?";
    },
    get$correctionDefaultPrompt() {
      return "What is the best replacement?";
    },
    get$definition() {
      return "Definition";
    },
    get$exampleSentence() {
      return "Example Sentence";
    },
    get$reportToTeacher() {
      return "Who do you want to report this message to?";
    },
    reportMessageTitle$3(reportingUserId, reportedUserId, roomName) {
      return reportingUserId + " has reported a message from " + reportedUserId + " in the chat " + roomName;
    },
    reportMessageBody$2(reportedMessage, reason) {
      return "Message: " + reportedMessage + "\nReason: " + reason;
    },
    get$noTeachersFound() {
      return "No teachers found to report to";
    },
    trialExpiration$1(expiration) {
      return "Your free trial expires on " + expiration;
    },
    get$freeTrialDesc() {
      return "New users recieve a one week free trial of Pangea Chat";
    },
    get$activateTrial() {
      return "Free 7-Day Trial";
    },
    get$successfullySubscribed() {
      return "You have successfully subscribed!";
    },
    get$clickToManageSubscription() {
      return "Click here to manage your subscription.";
    },
    get$signUp() {
      return "Sign up";
    },
    pleaseChooseAtLeastChars$1(min) {
      return "Please choose at least " + min + " characters.";
    },
    get$pleaseEnterValidEmail() {
      return "Please enter a valid email address.";
    },
    get$pleaseChooseAUsername() {
      return "Please choose a username";
    },
    get$listen() {
      return "Listen";
    },
    get$trialPeriodExpired() {
      return "Your trial period has expired";
    },
    get$subscribedToUnlockTools() {
      return "Subscribe to unlock interactive translation and grammar checking, audio playback, personalized practice activities, and learning analytics!";
    },
    get$translationTooltip() {
      return "Translate";
    },
    get$speechToTextTooltip() {
      return "Transcript";
    },
    get$kickBotWarning() {
      return "Kicking Pangea Bot will remove the conversation bot from this chat.";
    },
    get$refresh(_) {
      return "Refresh";
    },
    get$botConfig() {
      return "Bot and activity settings";
    },
    get$botConfigNoPermissionTitle() {
      return "No permission";
    },
    get$botConfigNoPermissionMessage() {
      return "Contact room admin to change bot configuration";
    },
    get$conversationBotStatus() {
      return "Invite bot";
    },
    get$updatePhoneOS() {
      return "You may need to update your device's OS version.";
    },
    get$autoIGCToolName() {
      return "Run Pangea writing assistance automatically";
    },
    get$autoIGCToolDescription() {
      return "Automatically run Pangea Chat grammar and translation writing assistance before sending my message.";
    },
    get$tooltipInstructionsTitle() {
      return "Not sure what that does?";
    },
    get$tooltipInstructionsBrowserBody() {
      return "Hover over items to view tooltips.";
    },
    get$chatCapacity() {
      return "Chat capacity";
    },
    get$roomFull() {
      return "This room is already at capacity.";
    },
    get$chatCapacityHasBeenChanged() {
      return "Chat capacity changed";
    },
    chatCapacitySetTooLow$1(count) {
      return "Chat capacity must be at least " + count + ".";
    },
    get$chatCapacityExplanation() {
      return "Chat capacity limits the number of members allowed in a chat.";
    },
    get$enterNumber() {
      return "Please enter a whole number value.";
    },
    get$buildTranslation() {
      return "Build your translation from the choices above";
    },
    get$practice() {
      return "Practice";
    },
    get$noLanguagesSet() {
      return "No languages set";
    },
    get$speechToTextBody() {
      return "For voice messages, you can see a transcript as well as the speaker's Words Per Minute score.";
    },
    get$versionNotFound() {
      return "Version Not Found";
    },
    get$fetchingVersion() {
      return "Fetching version...";
    },
    get$versionFetchError() {
      return "Error fetching version";
    },
    versionText$2(version, buildNumber) {
      return "Version: " + version + "+" + buildNumber;
    },
    get$l1TranslationBody() {
      return "Messages in your base language will not be translated.";
    },
    get$deleteSubscriptionWarningTitle() {
      return "You have an active subscription";
    },
    get$deleteSubscriptionWarningBody() {
      return "Deleting your account will not automatically cancel your subscription.";
    },
    get$manageSubscription() {
      return "Manage Subscription";
    },
    get$error520Title() {
      return "Please try again.";
    },
    get$error520Desc() {
      return "Sorry, we could not understand your message...";
    },
    get$level(_) {
      return "Level";
    },
    get$translationChoicesBody() {
      return "Click and hold an option for a hint.";
    },
    get$grammar() {
      return "Grammar";
    },
    get$contactHasBeenInvitedToTheChat() {
      return "Contact has been invited to the chat";
    },
    get$inviteChat() {
      return "\ud83d\udce8 Invite chat";
    },
    get$chatName() {
      return "Chat name";
    },
    get$clickTheWordAgainToDeselect() {
      return "Click the selected word to deselect it.";
    },
    get$l2SupportNa() {
      return "Not Available";
    },
    get$l2SupportAlpha() {
      return "Alpha";
    },
    get$l2SupportBeta() {
      return "Beta";
    },
    get$l2SupportFull() {
      return "Full";
    },
    get$missingVoiceTitle() {
      return "Missing voice";
    },
    get$voiceNotAvailable() {
      return "You don't have a voice installed for this language.";
    },
    get$playAudio() {
      return "Play";
    },
    get$stop(_) {
      return "Stop";
    },
    get$grammarCopyPOSsconj() {
      return "Subordinating Conjunction";
    },
    get$grammarCopyPOSnum() {
      return "Number";
    },
    get$grammarCopyPOSverb() {
      return "Verb";
    },
    get$grammarCopyPOSaffix() {
      return "Affix";
    },
    get$grammarCopyPOSpart() {
      return "Particle";
    },
    get$grammarCopyPOSadj() {
      return "Adjective";
    },
    get$grammarCopyPOScconj() {
      return "Coordinating Conjunction";
    },
    get$grammarCopyPOSpunct() {
      return "Punctuation";
    },
    get$grammarCopyPOSadv() {
      return "Adverb";
    },
    get$grammarCopyPOSaux() {
      return "Auxiliary";
    },
    get$grammarCopyPOSspace() {
      return "Space";
    },
    get$grammarCopyPOSsym() {
      return "Symbol";
    },
    get$grammarCopyPOSdet() {
      return "Determiner";
    },
    get$grammarCopyPOSpron() {
      return "Pronoun";
    },
    get$grammarCopyPOSadp() {
      return "Adposition";
    },
    get$grammarCopyPOSpropn() {
      return "Proper Noun";
    },
    get$grammarCopyPOSnoun() {
      return "Noun";
    },
    get$grammarCopyPOSintj() {
      return "Interjection";
    },
    get$grammarCopyPOSx() {
      return "Other";
    },
    get$grammarCopyGENDERfem() {
      return "Feminine";
    },
    get$grammarCopyPERSON2() {
      return "Second Person";
    },
    get$grammarCopyMOODimp() {
      return "Imperative";
    },
    get$grammarCopyPUNCTTYPEqest() {
      return "Question";
    },
    get$grammarCopyASPECTperf() {
      return "Perfect";
    },
    get$grammarCopyCASEaccnom() {
      return "Accusative, Nominative";
    },
    get$grammarCopyCASEobl() {
      return "Oblique";
    },
    get$grammarCopyVOICEact() {
      return "Active";
    },
    get$grammarCopyPUNCTTYPEbrck() {
      return "Bracket";
    },
    get$grammarCopyNOUNTYPEart() {
      return "Article";
    },
    get$grammarCopyNUMBERsing() {
      return "Singular";
    },
    get$grammarCopyGENDERmasc() {
      return "Masculine";
    },
    get$grammarCopyVERBTYPEmod() {
      return "Modal";
    },
    get$grammarCopyADVTYPEadverbial() {
      return "Adverbial";
    },
    get$grammarCopyTENSEperi() {
      return "Periphrastic";
    },
    get$grammarCopyNUMFORMdigit() {
      return "Digit";
    },
    get$grammarCopyNOUNTYPEnot_proper() {
      return "Not Proper";
    },
    get$grammarCopyNUMTYPEcard() {
      return "Cardinal";
    },
    get$grammarCopyNOUNTYPEprop() {
      return "Proper";
    },
    get$grammarCopyPUNCTTYPEdash() {
      return "Dash";
    },
    get$grammarCopyPUNCTTYPEyes() {
      return "Yes";
    },
    get$grammarCopyPUNCTTYPEsemi() {
      return "Semicolon";
    },
    get$grammarCopyPUNCTTYPEcomm() {
      return "Comma";
    },
    get$grammarCopyMOODcnd() {
      return "Conditional";
    },
    get$grammarCopyCASEacc() {
      return "Accusative";
    },
    get$grammarCopyPARTTYPEpart() {
      return "Partitive";
    },
    get$grammarCopyTENSEpast() {
      return "Past";
    },
    get$grammarCopyDEGREEsup() {
      return "Superlative";
    },
    get$grammarCopyPUNCTTYPEcolo() {
      return "Colon";
    },
    get$grammarCopyPERSON3() {
      return "Third Person";
    },
    get$grammarCopyNUMBERplur() {
      return "Plural";
    },
    get$grammarCopyPRONTYPEnpr() {
      return "Proper Noun";
    },
    get$grammarCopyPRONTYPEinterrogative() {
      return "Interrogative";
    },
    get$grammarCopyPOLITEinfm() {
      return "Informal";
    },
    get$grammarCopyADVTYPEtim() {
      return "Time";
    },
    get$grammarCopyPOLARITYneg() {
      return "Negative";
    },
    get$grammarCopyNUMTYPEtot() {
      return "Total";
    },
    get$grammarCopyADVTYPEadnomial() {
      return "Adnominal";
    },
    get$grammarCopyASPECTprog() {
      return "Progressive";
    },
    get$grammarCopyMOODsub() {
      return "Subjunctive";
    },
    get$grammarCopyVERBFORMcomplementive() {
      return "Complementive";
    },
    get$grammarCopyCASEnom() {
      return "Nominative";
    },
    get$grammarCopyTENSEfut() {
      return "Future";
    },
    get$grammarCopyCASEdat() {
      return "Dative";
    },
    get$grammarCopyTENSEpres() {
      return "Present";
    },
    get$grammarCopyGENDERneut() {
      return "Neuter";
    },
    get$grammarCopyPRONTYPErel() {
      return "Relative";
    },
    get$grammarCopyVERBFORMfinalEnding() {
      return "Final Ending";
    },
    get$grammarCopyPRONTYPEdem() {
      return "Demonstrative";
    },
    get$grammarCopyPREPCASEpre() {
      return "Prepositional";
    },
    get$grammarCopyVERBFORMfin() {
      return "Finite";
    },
    get$grammarCopyDEGREEpos() {
      return "Positive";
    },
    get$grammarCopyPUNCTTYPEquot() {
      return "Quotation";
    },
    get$grammarCopyVERBFORMger() {
      return "Gerund";
    },
    get$grammarCopyVOICEpass() {
      return "Passive";
    },
    get$grammarCopyCASEgen() {
      return "Genitive";
    },
    get$grammarCopyTENSEprs() {
      return "Present";
    },
    get$grammarCopyDEFINITEdef() {
      return "Definite";
    },
    get$grammarCopyNUMTYPEord() {
      return "Ordinal";
    },
    get$grammarCopyCASEins() {
      return "Instrumental";
    },
    get$grammarCopyVERBFORMinf() {
      return "Infinitive";
    },
    get$grammarCopyVERBFORMaux() {
      return "Auxiliary";
    },
    get$grammarCopyNUMFORMlong() {
      return "Long";
    },
    get$grammarCopyCASEloc() {
      return "Locative";
    },
    get$grammarCopyMOODind() {
      return "Indicative";
    },
    get$grammarCopyDEGREEcmp() {
      return "Comparative";
    },
    get$grammarCopyCASErelativeCase() {
      return "Relative";
    },
    get$grammarCopyPUNCTTYPEexcl() {
      return "Exclamative";
    },
    get$grammarCopyPERSON1() {
      return "First Person";
    },
    get$grammarCopyPUNCTSIDEini() {
      return "Initial";
    },
    get$grammarCopyGENDERperson() {
      return "Person";
    },
    get$grammarCopyFOREIGNyes() {
      return "Foreign";
    },
    get$grammarCopyVOICEvoice() {
      return "Voice";
    },
    get$grammarCopyVERBTYPEverbType() {
      return "Verb";
    },
    get$grammarCopyPOSSpass() {
      return "Possessive";
    },
    get$grammarCopyPREPCASEprepCase() {
      return "Prepositional";
    },
    get$grammarCopyNUMTYPEnumType() {
      return "Numeral";
    },
    get$grammarCopyNOUNTYPEnounType() {
      return "Noun";
    },
    get$grammarCopyREFLEXreflex() {
      return "Reflexive";
    },
    get$grammarCopyPRONTYPEpronType() {
      return "Pronoun";
    },
    get$grammarCopyPUNCTSIDEpunctSide() {
      return "Punctuation Side";
    },
    get$grammarCopyVERBFORMverbForm() {
      return "Verb";
    },
    get$grammarCopyGENDERgender() {
      return "Gender";
    },
    get$grammarCopyMOODmood() {
      return "Mood";
    },
    get$grammarCopyASPECTaspect() {
      return "Aspect";
    },
    get$grammarCopyPUNCTTYPEpunctType() {
      return "Punctuation";
    },
    get$grammarCopyTENSEtense() {
      return "Tense";
    },
    get$grammarCopyDEGREEdegree() {
      return "Degree";
    },
    get$grammarCopyPOLITEpolite() {
      return "Politeness";
    },
    get$grammarCopyADVTYPEadvType() {
      return "Adverb";
    },
    get$grammarCopyNUMFORMnumber() {
      return "Number";
    },
    get$grammarCopyCONJTYPEconjType() {
      return "Conjunction";
    },
    get$grammarCopyPOLARITYpolarity() {
      return "Polarity";
    },
    get$grammarCopyCASEcase() {
      return "Case";
    },
    get$grammarCopyDEFINITEdefinite() {
      return "Definiteness";
    },
    get$grammarCopyNUMFORMnumForm() {
      return "Numeral";
    },
    get$grammarCopyPRONTYPEadn() {
      return "Adnominal";
    },
    get$grammarCopyVOCvoc() {
      return "Vocative";
    },
    get$grammarCopyCMPLcmpl() {
      return "Complementizer";
    },
    get$grammarCopyADVadv() {
      return "Adverbial";
    },
    get$grammarCopyMOODjus() {
      return "Jussive";
    },
    get$grammarCopyGENDERcom() {
      return "Common";
    },
    get$grammarCopyREFLEXrflx() {
      return "Reflexive";
    },
    get$grammarCopyPARTTYPEpar() {
      return "Partitive";
    },
    get$grammarCopySPCspc() {
      return "Specific";
    },
    get$grammarCopyTENSEpqp() {
      return "Pluperfect";
    },
    get$grammarCopyREFLEXref() {
      return "Reflexive";
    },
    get$grammarCopyPUNCTTYPEnshrt() {
      return "Short";
    },
    get$grammarCopyNUMBERdual() {
      return "Dual";
    },
    get$grammarCopyNUMFORMlng() {
      return "Long";
    },
    get$grammarCopyVOICEmid() {
      return "Middle";
    },
    get$grammarCopyINTRELintRel() {
      return "Interrogative, Relative";
    },
    get$grammarCopyINTint() {
      return "Interrogative";
    },
    get$grammarCopyVOICEcaus() {
      return "Causative";
    },
    get$grammarCopyUnknown() {
      return "Unknown";
    },
    get$grammarCopyEVIDENTevident() {
      return "Evidentiality";
    },
    get$grammarCopyNUMFORMnumberPsor() {
      return "Possessor's Number";
    },
    get$grammarCopyASPECThab() {
      return "Habitual";
    },
    get$grammarCopyCASEabl() {
      return "Ablative";
    },
    get$grammarCopyCASEall() {
      return "Allative";
    },
    get$grammarCopyCASEess() {
      return "Essive";
    },
    get$grammarCopyCASEtra() {
      return "Translative";
    },
    get$grammarCopyCASEequ() {
      return "Equative";
    },
    get$grammarCopyCASEdis() {
      return "Distributive";
    },
    get$grammarCopyCASEabs() {
      return "Absolutive";
    },
    get$grammarCopyCASEerg() {
      return "Ergative";
    },
    get$grammarCopyCASEcau() {
      return "Causal";
    },
    get$grammarCopyCASEben() {
      return "Benefactive";
    },
    get$grammarCopyCASEtem() {
      return "Temporal";
    },
    get$grammarCopyCONJTYPEcoord() {
      return "Coordinating";
    },
    get$grammarCopyDEFINITEcons() {
      return "Construct State";
    },
    get$grammarCopyDEGREEabs() {
      return "Absolute Degree";
    },
    get$grammarCopyEVIDENTfh() {
      return "Factual Evidentiality";
    },
    get$grammarCopyEVIDENTnfh() {
      return "Non-factual Evidentiality";
    },
    get$grammarCopyMOODopt() {
      return "Optative";
    },
    get$grammarCopyMOODadm() {
      return "Admirative";
    },
    get$grammarCopyMOODdes() {
      return "Desiderative";
    },
    get$grammarCopyMOODnec() {
      return "Necessitative";
    },
    get$grammarCopyMOODpot() {
      return "Potential";
    },
    get$grammarCopyMOODprp() {
      return "Propositive";
    },
    get$grammarCopyMOODqot() {
      return "Quotative";
    },
    get$grammarCopyNUMFORMword() {
      return "Word Form";
    },
    get$grammarCopyNUMFORMroman() {
      return "Roman Numeral";
    },
    get$grammarCopyNUMFORMletter() {
      return "Letter Form";
    },
    get$grammarCopyNUMTYPEmult() {
      return "Multiplicative";
    },
    get$grammarCopyNUMTYPEfrac() {
      return "Fractional";
    },
    get$grammarCopyNUMTYPEsets() {
      return "Set";
    },
    get$grammarCopyNUMTYPErange() {
      return "Range";
    },
    get$grammarCopyNUMTYPEdist() {
      return "Distributive";
    },
    get$grammarCopyNUMBERtri() {
      return "Trial";
    },
    get$grammarCopyNUMBERpauc() {
      return "Paucal";
    },
    get$grammarCopyNUMBERgrpa() {
      return "Greater Paucal";
    },
    get$grammarCopyNUMBERgrpl() {
      return "Greater Plural";
    },
    get$grammarCopyNUMBERinv() {
      return "Inverse";
    },
    get$grammarCopyPERSON0() {
      return "Zero";
    },
    get$grammarCopyPERSON4() {
      return "Fourth";
    },
    get$grammarCopyPOLITEform() {
      return "Formal";
    },
    get$grammarCopyPOLITEelev() {
      return "Elevated";
    },
    get$grammarCopyPOLITEhumb() {
      return "Humble";
    },
    get$grammarCopyPRONTYPEemp() {
      return "Emphatic";
    },
    get$grammarCopyPRONTYPEexc() {
      return "Exclamative";
    },
    get$grammarCopyPRONTYPErcp() {
      return "Reciprocal";
    },
    get$grammarCopyPRONTYPEintRelPronType() {
      return "Interrogative-Relative";
    },
    get$grammarCopyTENSEaor() {
      return "Aorist";
    },
    get$grammarCopyTENSEeps() {
      return "Epistemic";
    },
    get$grammarCopyTENSEprosp() {
      return "Prospective";
    },
    get$grammarCopyVERBFORMpart() {
      return "Participle";
    },
    get$grammarCopyVERBFORMconv() {
      return "Converb";
    },
    get$grammarCopyVERBFORMvnoun() {
      return "Verbal Noun";
    },
    get$grammarCopyVOICEantip() {
      return "Antipassive";
    },
    get$grammarCopyVOICEcauVoice() {
      return "Causative";
    },
    get$grammarCopyVOICedir() {
      return "Direct";
    },
    get$grammarCopyVOICEinvVoice() {
      return "Inverse";
    },
    get$grammarCopyVOICErcpVoice() {
      return "Reciprocal";
    },
    get$grammarCopyPOS() {
      return "Part of Speech";
    },
    get$grammarCopyGENDER() {
      return "Gender";
    },
    get$grammarCopyPERSON() {
      return "Person";
    },
    get$grammarCopyMOOD() {
      return "Mood";
    },
    get$grammarCopyPUNCTTYPE() {
      return "Punctuation Type";
    },
    get$grammarCopyASPECT() {
      return "Aspect";
    },
    get$grammarCopyCASE() {
      return "Case";
    },
    get$grammarCopyVOICE() {
      return "Voice";
    },
    get$grammarCopyNOUNTYPE() {
      return "Noun Type";
    },
    get$grammarCopyVERBTYPE() {
      return "Verb Type";
    },
    get$grammarCopyADVTYPE() {
      return "Adverb Type";
    },
    get$grammarCopyNUMFORM() {
      return "Numeral Form";
    },
    get$grammarCopyNUMTYPE() {
      return "Numeral Type";
    },
    get$grammarCopyNUMBER() {
      return "Number";
    },
    get$grammarCopyDEFINITE() {
      return "Definiteness";
    },
    get$grammarCopyDEGREE() {
      return "Degree";
    },
    get$grammarCopyEVIDENT() {
      return "Evidentiality";
    },
    get$grammarCopyFOREIGN() {
      return "Foreign";
    },
    get$grammarCopyPOLARITY() {
      return "Polarity";
    },
    get$grammarCopyPOLITE() {
      return "Politeness";
    },
    get$grammarCopyPREPCASE() {
      return "Prepositional Case";
    },
    get$grammarCopyPRONTYPE() {
      return "Pronoun Type";
    },
    get$grammarCopyPUNCTSIDE() {
      return "Punctuation Side";
    },
    get$grammarCopyREFLEX() {
      return "Reflexive";
    },
    get$grammarCopyTENSE() {
      return "Tense";
    },
    get$grammarCopyVERBFORM() {
      return "Verb Form";
    },
    get$grammarCopyCONJTYPE() {
      return "Conjunction Type";
    },
    get$grammarCopyUNKNOWN() {
      return "Unknown";
    },
    get$grammarCopyNUMBERPSOR() {
      return "Possessor's Number";
    },
    get$grammarCopyPOSS() {
      return "Possessive";
    },
    get$grammarCopyASPECTimp() {
      return "Imperfective Aspect";
    },
    get$grammarCopyCASEvoc() {
      return "Vocative";
    },
    get$grammarCopyCASEcom() {
      return "Comitative";
    },
    get$grammarCopyCASEpar() {
      return "Partitive";
    },
    get$grammarCopyCASEadv() {
      return "Adverbial";
    },
    get$grammarCopyCASEref() {
      return "Referential";
    },
    get$grammarCopyCASErel() {
      return "Relative";
    },
    get$grammarCopyCASEsub() {
      return "Subessive";
    },
    get$grammarCopyCASEsup() {
      return "Superessive";
    },
    get$grammarCopyCASEaccdat() {
      return "Accusative-Dative";
    },
    get$grammarCopyCASEpre() {
      return "Prepositional";
    },
    get$grammarCopyCONJTYPEsub() {
      return "Subordinating";
    },
    get$grammarCopyCONJTYPEcmp() {
      return "Comparative";
    },
    get$grammarCopyDEFINITEind() {
      return "Indefinite";
    },
    get$grammarCopyMOODint() {
      return "Interrogative Mood";
    },
    get$grammarCopyNOUNTYPEcomm() {
      return "Common Noun";
    },
    get$grammarCopyNUMBERPSORsing() {
      return "Possessor's Singular";
    },
    get$grammarCopyNUMBERPSORplur() {
      return "Possessor's Plural";
    },
    get$grammarCopyNUMBERPSORdual() {
      return "Possessor's Dual";
    },
    get$grammarCopyPOLARITYpos() {
      return "Positive Polarity";
    },
    get$grammarCopyPOSSyes() {
      return "Possessive";
    },
    get$grammarCopyPREPCASEnpr() {
      return "Non-prepositional";
    },
    get$grammarCopyPRONTYPEprs() {
      return "Personal";
    },
    get$grammarCopyPRONTYPEint() {
      return "Interrogative";
    },
    get$grammarCopyPRONTYPEtot() {
      return "Total";
    },
    get$grammarCopyPRONTYPEneg() {
      return "Negative";
    },
    get$grammarCopyPRONTYPEart() {
      return "Article";
    },
    get$grammarCopyPRONTYPEind() {
      return "Indefinite";
    },
    get$grammarCopyPRONTYPEintrel() {
      return "Interrogative-Relative";
    },
    get$grammarCopyPUNCTSIDEfin() {
      return "Final Punctuation";
    },
    get$grammarCopyPUNCTTYPEperi() {
      return "Period";
    },
    get$grammarCopyREFLEXyes() {
      return "Reflexive";
    },
    get$grammarCopyTENSEimp() {
      return "Imperfect";
    },
    get$grammarCopyVERBFORMsup() {
      return "Supine";
    },
    get$grammarCopyVERBFORMadn() {
      return "Adnominal";
    },
    get$grammarCopyVERBFORMlng() {
      return "Long";
    },
    get$grammarCopyVERBFORMshrt() {
      return "Short";
    },
    get$grammarCopyVERBTYPEcaus() {
      return "Causative Verb";
    },
    get$grammarCopyVOICEcau() {
      return "Causative";
    },
    get$grammarCopyVOICEdir() {
      return "Direct";
    },
    get$grammarCopyVOICEinv() {
      return "Inverse";
    },
    get$grammarCopyVOICErcp() {
      return "Reciprocal";
    },
    get$enterLanguageLevel() {
      return "Please enter a language level";
    },
    get$other() {
      return "Other";
    },
    levelShort$1(level) {
      return "LVL " + level;
    },
    get$clickBestOption() {
      return "Choose the best options to translate your message!";
    },
    get$completeActivitiesToUnlock() {
      return "Complete at least one activity to unlock the translation!";
    },
    get$downloadGroupText() {
      return "Download group text";
    },
    get$notificationsOn() {
      return "Notifications on";
    },
    get$notificationsOff() {
      return "Notifications off";
    },
    get$createChatAndInviteUsers() {
      return "Create chat and invite users";
    },
    get$updatedNewSpaceDescription() {
      return "Courses allow you to consolidate your chats and build private or public communities.";
    },
    get$joinWithCode() {
      return "Join with code";
    },
    get$enterCodeToJoin() {
      return "Enter code to join";
    },
    get$updateNow() {
      return "Update Now";
    },
    get$updateLater() {
      return "Later";
    },
    get$constructUseWaDesc() {
      return "Used without help";
    },
    get$constructUseGaDesc() {
      return "Grammar assistance";
    },
    get$constructUseTaDesc() {
      return "Translation assistance";
    },
    get$constructUseUnkDesc() {
      return "Unknown";
    },
    get$constructUseCorITDesc() {
      return "Correct in translation";
    },
    get$constructUseIgnITDesc() {
      return "Ignored in translation";
    },
    get$constructUseIncITDesc() {
      return "Incorrect in translation";
    },
    get$constructUseIgnIGCDesc() {
      return "Ignored in grammar correction";
    },
    get$constructUseCorIGCDesc() {
      return "Correct in grammar correction";
    },
    get$constructUseIncIGCDesc() {
      return "Incorrect in grammar correction";
    },
    get$constructUseCorPADesc() {
      return "Correct in word meaning activity";
    },
    get$constructUseIgnPADesc() {
      return "Ignored in word meaning activity";
    },
    get$constructUseIncPADesc() {
      return "Incorrect in word meaning activity";
    },
    get$constructUseCorWLDesc() {
      return "Correct in word listening activity";
    },
    get$constructUseIncWLDesc() {
      return "Incorrect in word listening activity";
    },
    get$constructUseIngWLDesc() {
      return "Ignored in word listening activity";
    },
    get$constructUseCorHWLDesc() {
      return "Correct in hidden word activity";
    },
    get$constructUseIncHWLDesc() {
      return "Incorrect in hidden word activity";
    },
    get$constructUseIgnHWLDesc() {
      return "Ignored in hidden word activity";
    },
    get$constructUseCorLDesc() {
      return "Correct in lemma activity";
    },
    get$constructUseIncLDesc() {
      return "Incorrect in lemma activity";
    },
    get$constructUseIgnLDesc() {
      return "Ignored in lemma activity";
    },
    get$constructUseCorMDesc() {
      return "Correct in grammar activity";
    },
    get$constructUseIncMDesc() {
      return "Incorrect in grammar activity";
    },
    get$constructUseIgnMDesc() {
      return "Ignored in grammar activity";
    },
    get$constructUseEmojiDesc() {
      return "Correct in emoji activity";
    },
    get$constructUseCollected() {
      return "Collected in chat";
    },
    get$constructUseNanDesc() {
      return "Not applicable";
    },
    xpIntoLevel$2(currentXP, maxXP) {
      return "" + currentXP + " / " + maxXP + " XP";
    },
    get$enableTTSToolName() {
      return "Enabled text-to-speech";
    },
    get$enableTTSToolDescription() {
      return "Allow the app to generate text-to-speech output for portions of text in your target language.";
    },
    get$createAnAccount() {
      return "Create an account";
    },
    get$signIn() {
      return "Sign in";
    },
    get$signUpWithEmail() {
      return "Sign up with Email";
    },
    get$signUpWithGoogle() {
      return "Sign up with Google";
    },
    get$signUpWithApple() {
      return "Sign up with Apple";
    },
    get$yourUsername() {
      return "Your username";
    },
    get$yourEmail() {
      return "Your email";
    },
    get$signInWithGoogle() {
      return "Sign in with Google";
    },
    get$signInWithApple() {
      return "Sign in with Apple";
    },
    get$chooseYourAvatar() {
      return "Choose your avatar";
    },
    get$iWantToLearn() {
      return "I want to learn";
    },
    get$letsStart() {
      return "Let's start";
    },
    get$pleaseEnterEmail() {
      return "Please enter a valid email address.";
    },
    get$pleaseSelectALanguage() {
      return "Please select a language";
    },
    get$myBaseLanguage() {
      return "My base language";
    },
    get$clickWordsInstructions() {
      return "\ud83d\udd75\ufe0f Click any word for details. \ud83e\uddd0";
    },
    get$meaningSectionHeader() {
      return "Meaning:";
    },
    get$formSectionHeader() {
      return "Forms used in chats:";
    },
    get$writingExercisesTooltip() {
      return "Writing";
    },
    get$listeningExercisesTooltip() {
      return "Listening";
    },
    get$readingExercisesTooltip() {
      return "Reading";
    },
    get$meaningNotFound() {
      return "Meaning could not be found.";
    },
    get$chooseBaseForm() {
      return "Choose the base form";
    },
    get$notTheCodeError() {
      return "Sorry, that's not the code!";
    },
    get$totalXP() {
      return "Total XP";
    },
    get$numLemmas() {
      return "Total number of lemmas";
    },
    get$numLemmasUsedCorrectly() {
      return "Number of lemmas used correctly at least once";
    },
    get$numLemmasUsedIncorrectly() {
      return "Number of lemmas used correctly 0 times";
    },
    get$numLemmasSmallXP() {
      return "Number of lemmas with 0 - 30 XP";
    },
    get$numLemmasMediumXP() {
      return "Number of lemmas with 31 - 200 XP";
    },
    get$numLemmasLargeXP() {
      return "Number of lemmas with > 200 XP";
    },
    get$numGrammarConcepts() {
      return "Number of grammar concepts";
    },
    get$listGrammarConcepts() {
      return "Grammar concepts";
    },
    get$listGrammarConceptsUsedCorrectly() {
      return "Grammar concepts used correctly in original messages at least 80% of the time";
    },
    get$listGrammarConceptsUsedIncorrectly() {
      return "Grammar concepts used correctly in original messages less than 80% of the time";
    },
    get$listGrammarConceptsUseCorrectlySystemGenerated() {
      return "Grammar concepts chosen correctly from system-generated suggestions at least 80% of the time";
    },
    get$listGrammarConceptsUseIncorrectlySystemGenerated() {
      return "Grammar concepts chosen correctly from system-generated suggestions less than 80% of the time";
    },
    get$listGrammarConceptsSmallXP() {
      return "Grammar concepts with 0-50 xp";
    },
    get$listGrammarConceptsMediumXP() {
      return "Grammar concepts with 51-200 xp";
    },
    get$listGrammarConceptsLargeXP() {
      return "Grammar concepts 201-500 xp";
    },
    get$listGrammarConceptsHugeXP() {
      return "Grammar concepts >500 xp";
    },
    get$numMessagesSent() {
      return "Number of messages sent";
    },
    get$numWordsTyped() {
      return "Number of words typed in original messages";
    },
    get$numCorrectChoices() {
      return "Number of correct words chosen from system-generated suggestions";
    },
    get$numIncorrectChoices() {
      return "Number of incorrect words chosen from system-generated suggestions";
    },
    get$commaSeparatedFile() {
      return "CSV";
    },
    get$excelFile() {
      return "Excel";
    },
    get$fileType() {
      return "File type";
    },
    get$download(_) {
      return "Download";
    },
    get$analyticsNotAvailable() {
      return "User analytics not available";
    },
    get$downloading() {
      return "Downloading...";
    },
    get$failedFetchUserAnalytics() {
      return "Failed to download user analytics";
    },
    get$downloadComplete() {
      return "Download complete!";
    },
    whatIsTheMorphTag$2(morphologicalFeature, wordForm) {
      return "What is the " + morphologicalFeature + " of '" + wordForm + "'?";
    },
    get$dataAvailable() {
      return "Data availability";
    },
    get$available(_) {
      return "Available";
    },
    get$pangeaBotIsFallible() {
      return "Pangea Bot makes mistakes too!";
    },
    whatIsMeaning$2(lemma, partOfSpeech) {
      return "What does '" + lemma + "' mean?";
    },
    get$chooseLemmaMeaningInstructionsBody() {
      return "Match meanings with the words in the message!";
    },
    get$doubleClickToEdit() {
      return "Double-click to edit.";
    },
    get$languageOfInstructionsLabel() {
      return "Language of activity instructions";
    },
    get$targetLanguageLabel() {
      return "Target language";
    },
    get$cefrLevelLabel() {
      return "CEFR level";
    },
    get$activityPlannerOverviewInstructionsBody() {
      return "Choose a topic, mode, learning objective and generate an activity for the chat!";
    },
    get$constructUsePvmDesc() {
      return "Produced in voice message";
    },
    get$leaveSpaceDescription() {
      return "By leaving the course, you will leave all of the chats within it. Other users will see that you have left the course.";
    },
    get$constructUseCorMmDesc() {
      return "Correct message meaning";
    },
    get$constructUseIncMmDesc() {
      return "Incorrect message meaning";
    },
    get$constructUseIgnMmDesc() {
      return "Ignored message meaning";
    },
    get$meaning() {
      return "Meaning";
    },
    chatWith$1(displayname) {
      return "Group with " + displayname;
    },
    get$clickOnEmailLink() {
      return "Please click on the link in the email and then proceed. In rare cases, the email can be sent to spam or take up to 5 minutes to arrive.";
    },
    get$dontForgetPassword() {
      return "Don't forget your password!";
    },
    get$enableAutocorrectToolName() {
      return "Enable device autocorrect";
    },
    get$enableAutocorrectDescription() {
      return "If your device supports the language your learning, you can enable device autocorrect to fix common errors as you type.";
    },
    get$ttsDisbledTitle() {
      return "Text-to-speech disabled";
    },
    get$ttsDisabledBody() {
      return "You can enable text-to-speech in your learning settings";
    },
    get$noSpaceDescriptionYet() {
      return "No course description created yet.";
    },
    get$tooLargeToSend() {
      return "This message is too large to send";
    },
    get$exitWithoutSaving() {
      return "Are you sure you want to leave without saving?";
    },
    get$enableAutocorrectWarning() {
      return "Warning! Requires adding your target language keyboard";
    },
    get$displayName(_) {
      return "Display name";
    },
    get$leaveRoomDescription() {
      return "You're about to leave this chat. Other users will see that you have left the chat.";
    },
    get$confirmUserId() {
      return "Please confirm your Pangea Chat username in order to delete your account.";
    },
    paidSubscriptionStarts$1(startDate) {
      return "Starting " + startDate;
    },
    get$cancelInSubscriptionSettings() {
      return "\u2022 Cancel at any time in subscription settings";
    },
    get$autocorrectNotAvailable() {
      return "Unfortunately your platform is not currently supported for this feature. Stay tuned for further development!";
    },
    get$pleaseUpdateApp() {
      return "Please update the app to continue.";
    },
    get$chooseEmojiInstructionsBody() {
      return "Match emojis with the words they best represent. Don't worry! No points off for disagreeing. \ud83d\ude05";
    },
    get$analyticsVocabListBody() {
      return "This is all your vocabulary! As you earn XP for each word, they'll go from seedling to full bloom. Click on any word to see more details.";
    },
    get$morphAnalyticsListBody() {
      return "These are all the grammar concepts in the language you're learning! You'll unlock them as you encounter them while chatting. Click for details.";
    },
    get$knockSpaceSuccess() {
      return "You have requested to join this course! An admin will respond to your request when they receive it \ud83d\ude00";
    },
    get$chooseWordAudioInstructionsBody() {
      return "Listen to the complete message. Then match the audios with the words.";
    },
    get$chooseMorphsInstructionsBody() {
      return "Click the puzzle pieces for grammar questions!";
    },
    get$home() {
      return "Home";
    },
    get$join(_) {
      return "Join";
    },
    get$readingAssistanceOverviewBody() {
      return "Click the buttons below for mini-games on matching emojis, audios, word meanings, and grammar concepts. Or click on any word for details.";
    },
    get$resetInstructionTooltipsTitle() {
      return "Reset instruction tooltips";
    },
    get$resetInstructionTooltipsDesc() {
      return "Click to show instruction tooltips like for a brand new user.";
    },
    get$selectForGrammar() {
      return "Select a grammar icon for activities and details.";
    },
    get$translationProblem() {
      return "Translation problem";
    },
    get$niceJob() {
      return "Nice job!";
    },
    get$askToJoin() {
      return "Ask to join";
    },
    get$emptyChatWarningTitle() {
      return "Chat is empty";
    },
    get$emptyChatWarningDesc() {
      return "You haven't invited anyone to your chat. Go to Chat settings to invite your contacts or the Bot. You can also do this later.";
    },
    get$areYouLikeMe() {
      return "Are you like me?";
    },
    get$tryAgainLater() {
      return "Too many attempts made. Please try again in 5 minutes.";
    },
    get$enterSpaceCode() {
      return "Enter course code";
    },
    get$shareSpaceLink() {
      return "Share link";
    },
    get$byUsingPangeaChat() {
      return "By using Pangea Chat, I agree to the ";
    },
    get$details(_) {
      return "Details";
    },
    get$languageLevelPreA1Desc() {
      return "I have never learned or used the language.";
    },
    get$languageLevelA1Desc() {
      return "I can understand and use some familiar everyday expressions and very basic phrases.";
    },
    get$languageLevelA2Desc() {
      return "I can understand sentences and frequently used expressions related to areas of immediate relevance";
    },
    get$languageLevelB1Desc() {
      return "I can deal with most familiar situations and can produce simple connected text on familiar topics.";
    },
    get$languageLevelB2Desc() {
      return "I can understand the mains ideas of complex texts and interact with a degree of fluency and spontaneity.";
    },
    get$languageLevelC1Desc() {
      return "I can express ideas fluently and spontaneously without much struggle and understand a wide range of demanding texts.";
    },
    get$languageLevelC2Desc() {
      return "I can understand virtually everything heard or read and express myself fluently and precisely.";
    },
    get$newVocab() {
      return "New vocab";
    },
    get$newGrammar() {
      return "New grammar concepts";
    },
    get$choosePracticeMode() {
      return "Click on one of the buttons above to start a practice activity";
    },
    get$ban() {
      return "Ban";
    },
    get$kick() {
      return "Kick";
    },
    get$lemma() {
      return "Lemma";
    },
    get$grammarFeature() {
      return "Grammar feature";
    },
    get$grammarTag() {
      return "Grammar tag";
    },
    get$forms() {
      return "Forms";
    },
    get$exampleMessages() {
      return "Example messages";
    },
    get$timesUsedIndependently() {
      return "Times used independently";
    },
    get$timesUsedWithAssistance() {
      return "Times used with assistance";
    },
    shareInviteCode$1(code) {
      return "Share invite code: " + code;
    },
    welcomeUser$1(user) {
      return "Welcome " + user;
    },
    get$joinSpaceOnboardingDesc() {
      return "Do you have an invite code or link to a public course?";
    },
    get$skipForNow() {
      return "Skip for now";
    },
    get$permissions(_) {
      return "Permissions";
    },
    get$spaceChildPermission() {
      return "Who can add new chats to this course";
    },
    get$addEnvironmentOverride() {
      return "Add environment override";
    },
    get$defaultOption() {
      return "Default";
    },
    get$deleteChatDesc() {
      return "Are you sure you want to delete this chat? It will be deleted for all participants and all messages within the chat will no longer be available for practice or learning analytics.";
    },
    get$deleteSpaceDesc() {
      return "The course and any selected chats will be deleted for all participants and all messages within the chat will no longer be available for practice or learning analytics. This action cannot be undone.";
    },
    get$configureSpace() {
      return "Configure course";
    },
    get$pinMessages() {
      return "Pin messages";
    },
    get$setJoinRules() {
      return "Set join rules";
    },
    get$changeGeneralSettings() {
      return "Change general settings";
    },
    get$inviteOtherUsersToRoom() {
      return "Invite other users";
    },
    get$changeTheNameOfTheSpace() {
      return "Change the name of the course";
    },
    get$changeTheDescription() {
      return "Change the description";
    },
    get$changeThePermissions() {
      return "Change the permissions";
    },
    get$introductions() {
      return "Introductions";
    },
    get$announcements() {
      return "Announcements";
    },
    get$activities() {
      return "Activities";
    },
    get$access() {
      return "Access";
    },
    get$botSettings() {
      return "Bot settings";
    },
    get$howSpaceCanBeFound() {
      return "How this course can be found";
    },
    get$$private() {
      return "Private";
    },
    get$cannotBeFoundInSearch() {
      return "Cannot be found in search";
    },
    get$$public(_) {
      return "Public";
    },
    get$visibleToCommunity() {
      return 'Visible to the broader Pangea Chat community via "Find a course"';
    },
    get$howSpaceCanBeJoined() {
      return "How this course can be joined";
    },
    get$canBeFoundVia() {
      return "Can be found via:";
    },
    get$canBeFoundViaInvitation() {
      return "\u2022 invitation";
    },
    get$canBeFoundViaCodeOrLink() {
      return "\u2022 code or link";
    },
    get$canBeFoundViaKnock() {
      return "\u2022 request to join and admin approval";
    },
    get$youHaveLeveledUp() {
      return "You have leveled up!";
    },
    get$sendActivities() {
      return "Send activities";
    },
    get$getStarted() {
      return "Get Started";
    },
    get$getStartedBotChatDesc() {
      return "Chatting with AI is a great place to start and Pangea reading, writing, listening and speaking tools make it easy!";
    },
    get$getStartedCommunitiesDesc() {
      return "Learning with a community is where Pangea Chat shines!\nYou can join your class, find a course, or even make your own!";
    },
    get$getStartedFriendsDesc() {
      return "Do you have a friend that wants to learn with you?";
    },
    get$getStartedBotChatComplete() {
      return "Well-done! You're chatting with the bot!";
    },
    get$getStartedCommunitiesComplete() {
      return "Great, you have joined a course!";
    },
    get$getStartedComplete() {
      return "You've completed this section!\nKeep exploring our amazing features by chatting with friends!";
    },
    get$getStartedFriendsComplete() {
      return "Woohoo! You've got friends! \ud83d\ude09";
    },
    get$getStartedBotChatButton() {
      return "Start chatting!";
    },
    get$getStartedFriendsButton() {
      return "Chat with a friend";
    },
    get$directMessage() {
      return "Direct Message";
    },
    get$newDirectMessage() {
      return "New direct message";
    },
    get$speakingExercisesTooltip() {
      return "Speaking";
    },
    get$noChatsFoundHereYet() {
      return "No chats found here yet";
    },
    get$transcriptionFailed() {
      return "Failed to transcribe audio";
    },
    get$aUserIsKnocking() {
      return "1 user is requesting to join your course";
    },
    usersAreKnocking$1(users) {
      return "" + users + " users are requesting to join your course";
    },
    get$failedToFetchTranscription() {
      return "Failed to fetch transcription";
    },
    get$deleteEmptySpaceDesc() {
      return "The course will be deleted for all participants. This action cannot be undone.";
    },
    get$failedToPlayVideo() {
      return "Failed to play video";
    },
    get$done() {
      return "Done";
    },
    get$inThisSpace() {
      return "In this course";
    },
    get$myContacts() {
      return "My contacts";
    },
    get$inviteAllInSpace() {
      return "Invite all in this course";
    },
    get$spaceParticipantsHaveBeenInvitedToTheChat() {
      return "All course participants has been invited to the chat";
    },
    numKnocking$1(count) {
      return "" + count + " knocking";
    },
    numInvited$1(count) {
      return "" + count + " invited";
    },
    get$errorFetchingDefinition() {
      return "Failed to fetch definition";
    },
    get$errorProcessAnalytics() {
      return "Failed to process analytics";
    },
    get$errorDownloading() {
      return "Download failed";
    },
    get$errorFetchingLevelSummary() {
      return "Failed to fetch level summary";
    },
    get$errorLoadingSpaceChildren() {
      return "Failed to load chats within this course";
    },
    get$unexpectedError() {
      return "Unexpected error.";
    },
    get$pleaseReload() {
      return "Please reload and try again.";
    },
    get$translationError() {
      return "Translation error";
    },
    get$errorFetchingTranslation() {
      return "Failed to fetch translation";
    },
    get$errorFetchingActivity() {
      return "Failed to fetch activity";
    },
    get$check(_) {
      return "Check";
    },
    get$unableToFindRoom() {
      return "No chat or course found with that code. Please try again.";
    },
    get$numCompletedActivities() {
      return "Number of completed activities";
    },
    viewingAnalytics$2(visible, users) {
      return "Viewing " + visible + "/" + users + " Analytics";
    },
    get$request(_) {
      return "Request";
    },
    get$requestAll(_) {
      return "Request All";
    },
    get$confirmMessageUnpin() {
      return "Are you sure you want to unpin this message?";
    },
    get$pending(_) {
      return "Pending";
    },
    get$openRoleLabel() {
      return "OPEN";
    },
    joinedTheActivity$2(username, role) {
      return "\ud83d\udc4b " + username + " joined as " + role;
    },
    finishedTheActivity$1(username) {
      return "\ud83c\udfaf " + username + " wrapped up this activity";
    },
    get$endActivityTitle() {
      return "I'm done";
    },
    get$activitySummaryError() {
      return "Activity summaries unavailable";
    },
    get$requestSummaries() {
      return "Request summaries";
    },
    get$requestAccessTitle() {
      return "Request to analytics view access?";
    },
    get$requestAccessDesc() {
      return "Would you like to request access to view participant analytics?\n\nIf participants agree, admins of this course will be able to view their:\n    \u2022 total vocabulary\n    \u2022 total grammar concepts\n    \u2022 total activity sessions completed\n    \u2022 the specific grammar concepts used, correctly and incorrectly\n\nThey will not be able to view their:\n    \u2022 messages in chats outside the course\n    \u2022 vocabulary list";
    },
    get$analyticsInactiveTitle() {
      return "Requests to inactive users couldn\u2019t be sent";
    },
    get$analyticsInactiveDesc() {
      return "Inactive users who haven't logged in since this feature was introduced won't see your request.\n\nThe Request button will appear once they return. You can resend the request later by clicking the Request button under their name when it's available.";
    },
    get$accessRequestedTitle() {
      return "Analytics Access Request";
    },
    accessRequestedDesc$1(space) {
      return "The administrators of \u201c" + space + "\u201d are requesting to view your learning analytics.\n\nIf you agree, admins of this course will be able to view your:\n    \u2022 total vocabulary\n    \u2022 total grammar concepts\n    \u2022 total activity sessions completed\n    \u2022 the specific grammar concepts used, correctly and incorrectly\n\nThey will not be able to view your:\n    \u2022 messages in chats outside the course\n    \u2022 vocabulary list";
    },
    get$allowAccess() {
      return "Allow Access";
    },
    get$denyAccess() {
      return "Deny Access";
    },
    get$adminRequestedAccess() {
      return "Admins asked to view your analytics.";
    },
    lastUpdated$1(time) {
      return "Updated\n" + time;
    },
    get$activityFinishedMessage() {
      return "All Finished!";
    },
    get$endForAll() {
      return "End for all";
    },
    get$newCourse() {
      return "New course";
    },
    get$newCourseSubtitle() {
      return "Which course template would you like to use?";
    },
    get$failedToLoadCourses() {
      return "Failed to load courses";
    },
    numModules$1(num) {
      return "" + num + " modules";
    },
    numActivityPlans$1(num) {
      return "" + num + " activity plans";
    },
    get$coursePlan() {
      return "Course Plan";
    },
    get$editCourseLater() {
      return "You can edit template title, descriptions, and course image later.";
    },
    get$newCourseAccess() {
      return "By default, courses are private and require admin approval to join. You can edit these settings at any time.";
    },
    get$createCourse() {
      return "Create course";
    },
    get$stats() {
      return "Stats";
    },
    get$createGroupChat() {
      return "Create group chat";
    },
    get$editCourse() {
      return "Edit course";
    },
    get$inviteDesc() {
      return "By username, by code or link";
    },
    get$editCourseDesc() {
      return "Here you can edit course title, description, etc.";
    },
    get$permissionsDesc() {
      return "Set permissions such as who can invite users, send messages, create chats, etc.";
    },
    get$accessDesc() {
      return "You can make your course open to the world! Or, make your course private and secure.";
    },
    get$createGroupChatDesc() {
      return "Whereas activity sessions start and end, group chats will stay open for routine communication.";
    },
    get$deleteDesc() {
      return "Only admins can delete a course. This is a destructive action which removes all users and deletes all selected chats within the course. Proceed with caution.";
    },
    get$failedToLoadCourseInfo() {
      return "Failed to load course information";
    },
    get$noCourseFound() {
      return "No course information found";
    },
    additionalParticipants$1(num) {
      return "+ " + num + " others";
    },
    get$courseChats() {
      return "Course Chats";
    },
    get$directMessages() {
      return "Direct Messages";
    },
    get$whatNow() {
      return "What now?";
    },
    get$chooseNextActivity() {
      return "Choose your next activity!";
    },
    get$chooseRole() {
      return "Choose a role!";
    },
    get$chooseRoleToParticipate() {
      return "Choose a role to participate!";
    },
    waitingToFillRole$1(num) {
      return "Waiting to fill " + num + " roles...";
    },
    get$pingParticipants() {
      return "Ping course participants";
    },
    get$playWithBot() {
      return "Play with Pangea Bot";
    },
    get$inviteFriends() {
      return "Invite friends";
    },
    get$waitNotDone() {
      return "Wait I\u2019m not done!";
    },
    get$waitingForOthersToFinish() {
      return "Waiting for the rest to finish up...";
    },
    get$saveToCompletedActivities() {
      return "Save to completed activities";
    },
    get$generatingSummary() {
      return "Analyzing chat and generating results";
    },
    get$instructionsLanguage() {
      return "Instructions language";
    },
    get$findCourse() {
      return "Find a course";
    },
    get$activityCompletedDesc() {
      return "Your completed activity was added to analytics where you can review and practice the language you used.";
    },
    pingParticipantsNotification$2(user, room) {
      return user + " is looking for users to join the activity session in " + room;
    },
    get$courseName() {
      return "Course name";
    },
    get$createNewCourse() {
      return "New course";
    },
    get$publicCourses() {
      return "Public courses";
    },
    goToCourse$1(course) {
      return "Go to course: " + course;
    },
    get$activityComplete() {
      return "This activity has been completed. The activity summary should be available below.";
    },
    get$haventChattedMuch() {
      return "It looks like you haven't chatted much, try using some more vocab words! If you feel like you've completed your objective, you can end the activity below.";
    },
    get$haveChatted() {
      return "It looks like you've been chatting for a while! If you feel like you've completed your objective, wrap up to finish the activity and we'll generate you a summary in the chat!";
    },
    userDoneAndWaiting$2(num1, num2) {
      return "" + num1 + "/" + num2 + " participants have wrapped up. Wait for everyone to finish, and we'll generate you a summary in the chat! \n\nIf you'd like to rejoin the conversation, click the continue button in the chat.";
    },
    othersDoneAndWaiting$2(num1, num2) {
      return "" + num1 + "/" + num2 + " are done. Have you completed your objective?";
    },
    get$startNewSession() {
      return "Start new session";
    },
    get$joinOpenSession() {
      return "Join open session";
    },
    get$less() {
      return "less";
    },
    get$activityNotFound() {
      return "Activity not found";
    },
    get$levelUp() {
      return "Level up";
    },
    get$myActivities() {
      return "My activities";
    },
    get$openToJoin() {
      return "Open to join";
    },
    get$results(_) {
      return "Results";
    },
    get$activityDone() {
      return "Activity Done!";
    },
    get$moreLabel() {
      return "more";
    },
    get$promoCodeInfo() {
      return "Promo codes can be entered on the next page";
    },
    remove$1($receiver, arg0) {
      return this.get$remove(this).call$1(arg0);
    }
  };
  var typesOffset = hunkHelpers.updateTypes([]);
  (function inheritance() {
    var _inherit = hunkHelpers.inherit;
    _inherit(A.L10nGa, C.L10n);
  })();
  B._Universe_addRules(init.typeUniverse, JSON.parse('{"L10nGa":{"L10n":[]}}'));
  var string$ = {
    Cuir_c: "Cuir cosc ar an \xfas\xe1ideoir \xe1irithe \xf3n seomra seo"
  };
};
;
((d, h) => {
  d[h] = d.current;
  d.eventLog.push({p: "main.dart.js_212", e: "endPart", h: h});
})($__dart_deferred_initializers__, "1eRh0OwyC1o2ntp2kHs+KYkd+dk=");
;
//# sourceMappingURL=main.dart.js_212.part.js.map
