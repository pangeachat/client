// Generated by dart2js (, trust primitives, omit checks, lax runtime type, csp, intern-composite-values), the Dart to JavaScript compiler version: 3.9.2.
((s, d) => {
  s[d] = s[d] || {};
})(self, "$__dart_deferred_initializers__");
$__dart_deferred_initializers__.current = function(hunkHelpers, init, holdersList, $) {
  var B, C,
  A = {
    L10nId$() {
      return new A.L10nId(B.canonicalizedLocale("id"));
    },
    L10nId: function L10nId(t0) {
      this.localeName = t0;
    }
  };
  B = holdersList[0];
  C = holdersList[54];
  A = hunkHelpers.updateHolder(holdersList[30], A);
  A.L10nId.prototype = {
    get$alwaysUse24HourFormat() {
      return "tidak";
    },
    get$repeatPassword() {
      return "Ulangi kata sandi";
    },
    get$notAnImage() {
      return "Bukan berkas gambar.";
    },
    get$setCustomPermissionLevel() {
      return "Atur tingkat perizinan kustom";
    },
    get$setPermissionsLevelDescription() {
      return "Silakan pilih peran yang sudah ditentukan di bawah atau masukkan tingkat perizinan kustom antara 0 dan 100.";
    },
    get$ignoreUser() {
      return "Abaikan pengguna";
    },
    get$normalUser() {
      return "Pengguna biasa";
    },
    get$remove(_) {
      return "Hapus";
    },
    get$importNow() {
      return "Impor sekarang";
    },
    get$importEmojis() {
      return "Impor Emoji";
    },
    get$importFromZipFile() {
      return "Impor dari berkas .zip";
    },
    get$exportEmotePack() {
      return "Ekspor paket Emote sebagai .zip";
    },
    get$replace(_) {
      return "Ganti";
    },
    aboutHomeserver$1(homeserver) {
      return "Tentang " + homeserver;
    },
    get$accept(_) {
      return "Terima";
    },
    acceptedTheInvitation$1(username) {
      return "\ud83d\udc4d " + username + " menerima undangannya";
    },
    get$account() {
      return "Akun";
    },
    activatedEndToEndEncryption$1(username) {
      return "\ud83d\udd10 " + username + " mengaktifkan enkripsi ujung ke ujung";
    },
    get$addEmail() {
      return "Tambah email";
    },
    supposedMxid$1(mxid) {
      return "Ini seharusnya " + mxid;
    },
    get$admin() {
      return "Admin";
    },
    get$commandHint_roomupgrade() {
      return "Tingkatkan ruangan ini ke versi ruangan yang ditentukan";
    },
    get$commandHint_googly() {
      return "Kirim mata googly";
    },
    get$commandHint_cuddle() {
      return "Kirim berpelukan";
    },
    get$commandHint_hug() {
      return "Kirim pelukan";
    },
    googlyEyesContent$1(senderName) {
      return senderName + " mengirim mata googly";
    },
    cuddleContent$1(senderName) {
      return senderName + " berpelukan dengan kamu";
    },
    hugContent$1(senderName) {
      return senderName + " memeluk kamu";
    },
    answeredTheCall$1(senderName) {
      return senderName + " menjawab panggilan";
    },
    get$anyoneCanJoin() {
      return "Siapa saja dapat bergabung";
    },
    get$archive() {
      return "Arsip";
    },
    get$areYouSure() {
      return "Apakah kamu yakin?";
    },
    get$areYouSureYouWantToLogout() {
      return "Apakah kamu yakin ingin keluar?";
    },
    get$askSSSSSign() {
      return "Untuk dapat menandatangani orang lain, silakan masukkan frasa sandi atau kunci pemulihan penyimpanan aman kamu.";
    },
    askVerificationRequest$1(username) {
      return "Terima permintaan verifikasi dari " + username + "?";
    },
    badServerLoginTypesException$3(serverVersions, supportedVersions, suportedVersions) {
      return "Homeserver ini mendukung tipe masuk ini:\n" + serverVersions + "\nTetapi aplikasi ini mendukung:\n" + supportedVersions;
    },
    get$sendTypingNotifications() {
      return "Kirim notifikasi pengetikan";
    },
    get$swipeRightToLeftToReply() {
      return "Usap dari kanan ke kiri untuk membalas";
    },
    get$sendOnEnter() {
      return "Kirim dengan enter";
    },
    countChatsAndCountParticipants$2(chats, participants) {
      return "" + chats + " chat dan " + participants + " anggota";
    },
    get$banFromChat() {
      return "Cekal dari obrolan";
    },
    get$banned() {
      return "Dicekal";
    },
    bannedUser$2(username, targetName) {
      return username + " mencekal " + targetName;
    },
    get$blockDevice() {
      return "Blokir Perangkat";
    },
    get$blocked() {
      return "Diblokir";
    },
    get$cancel(_) {
      return "Batal";
    },
    cantOpenUri$1(uri) {
      return "Tidak bisa membuka URI ini " + uri;
    },
    get$changeDeviceName() {
      return "Ganti nama perangkat";
    },
    changedTheChatAvatar$1(username) {
      return username + " mengubah avatar obrolan";
    },
    changedTheChatDescriptionTo$2(username, description) {
      return username + " mengubah deskripsi obrolan ke: '" + description + "'";
    },
    changedTheChatNameTo$2(username, chatname) {
      return username + " mengubah nama obrolan ke: '" + chatname + "'";
    },
    changedTheChatPermissions$1(username) {
      return username + " mengubah izin obrolan";
    },
    changedTheDisplaynameTo$2(username, displayname) {
      return username + " mengubah nama tampilan ke: '" + displayname + "'";
    },
    changedTheGuestAccessRules$1(username) {
      return username + " mengubah aturan akses tamu";
    },
    changedTheGuestAccessRulesTo$2(username, rules) {
      return username + " mengubah aturan akses tamu ke: " + rules;
    },
    changedTheHistoryVisibility$1(username) {
      return username + " mengubah visibilitas sejarah";
    },
    changedTheHistoryVisibilityTo$2(username, rules) {
      return username + " mengubah visibilitas sejarah ke: " + rules;
    },
    changedTheJoinRules$1(username) {
      return username + " mengubah aturan bergabung";
    },
    changedTheJoinRulesTo$2(username, joinRules) {
      return username + " mengubah aturan bergabung ke: " + joinRules;
    },
    changedTheProfileAvatar$1(username) {
      return username + " mengubah avatarnya";
    },
    changedTheRoomAliases$1(username) {
      return username + " mengubah alias ruangan";
    },
    changedTheRoomInvitationLink$1(username) {
      return username + " mengubah tautan undangan";
    },
    get$changePassword() {
      return "Ubah kata sandi";
    },
    get$changeTheme() {
      return "Ubah tema";
    },
    get$changeYourAvatar() {
      return "Ubah avatarmu";
    },
    get$channelCorruptedDecryptError() {
      return "Enkripsi telah rusak";
    },
    get$chat() {
      return "Obrolan";
    },
    get$chatDetails() {
      return "Detail obrolan";
    },
    get$chats() {
      return "Obrolan";
    },
    get$chooseAStrongPassword() {
      return "Pilih kata sandi yang kuat";
    },
    get$clearArchive() {
      return "Bersihkan arsip";
    },
    get$close(_) {
      return "Tutup";
    },
    get$commandHint_markasdm() {
      return "Tandai sebagai ruangan pesan langsung untuk ID Matrix yang ditentukan";
    },
    get$commandHint_markasgroup() {
      return "Tandai sebagai grup";
    },
    get$commandHint_ban() {
      return "Cekal pengguna yang dicantumkan dari ruangan ini";
    },
    get$commandHint_clearcache() {
      return "Bersihkan tembolok";
    },
    get$commandHint_create() {
      return "Buat sebuah grup obrolan kosong\nGunakan --no-encryption untuk menonaktifkan enkripsi";
    },
    get$commandHint_discardsession() {
      return "Buang sesi";
    },
    get$commandHint_dm() {
      return "Mulai sebuah obrolan langsung\nGunakan --no-encryption untuk menonaktifkan enkripsi";
    },
    get$commandHint_html() {
      return "Kirim teks yang diformat dengan HTML";
    },
    get$commandHint_invite() {
      return "Undang pengguna yang dicantum ke ruangan ini";
    },
    get$commandHint_join() {
      return "Gabung ke ruangan yang dicantum";
    },
    get$commandHint_kick() {
      return "Keluarkan pengguna yang dicantum dari ruangan ini";
    },
    get$commandHint_leave() {
      return "Tinggalkan ruangan ini";
    },
    get$commandHint_me() {
      return "Jelaskan dirimu";
    },
    get$commandHint_myroomavatar() {
      return "Tetapkan gambarmu untuk ruangan ini (oleh uri-mxc)";
    },
    get$commandHint_myroomnick() {
      return "Tetapkan nama tampilanmu untuk ruangan ini";
    },
    get$commandHint_op() {
      return "Tetapkan tingkat kekuatan pengguna yang dicantum (default: 50)";
    },
    get$commandHint_plain() {
      return "Kirim teks yang tidak diformat";
    },
    get$commandHint_react() {
      return "Kirim balasan sebagai reaksi";
    },
    get$commandHint_send() {
      return "Kirim teks";
    },
    get$commandHint_unban() {
      return "Hilangkan cekalan untuk pengguna yang dicantumkan dari ruangan ini";
    },
    get$compareEmojiMatch() {
      return "Bandingkan emoji";
    },
    get$compareNumbersMatch() {
      return "Bandingkan angka";
    },
    get$configureChat() {
      return "Konfigurasi obrolan";
    },
    get$confirm(_) {
      return "Konfirmasi";
    },
    get$copiedToClipboard() {
      return "Disalin ke papan klip";
    },
    get$copy(_) {
      return "Salin";
    },
    couldNotDecryptMessage$1(error) {
      return "Tidak dapat mendekripsikan pesan: " + error;
    },
    get$checkList() {
      return "Ceklis";
    },
    countParticipants$1(count) {
      return "" + count + " anggota";
    },
    countInvited$1(count) {
      return "" + count + " diundang";
    },
    get$create(_) {
      return "Buat";
    },
    createdTheChat$1(username) {
      return "\ud83d\udcac " + username + " membuat obrolan ini";
    },
    get$createGroup() {
      return "Buat grup";
    },
    get$currentlyActive() {
      return "Aktif";
    },
    get$darkTheme() {
      return "Gelap";
    },
    dateAndTimeOfDay$2(date, timeOfDay) {
      return timeOfDay + ", " + date;
    },
    get$deactivateAccountWarning() {
      return "Ini akan menonaktifkan akun penggunamu. Ini tidak bisa dibatalkan! Apakah kamu yakin?";
    },
    get$defaultPermissionLevel() {
      return "Level izin bawaan untuk pengguna baru";
    },
    get$$delete(_) {
      return "Hapus";
    },
    get$deleteAccount() {
      return "Hapus akun";
    },
    get$deleteMessage() {
      return "Hapus pesan";
    },
    get$devices() {
      return "Perangkat";
    },
    get$displaynameHasBeenChanged() {
      return "Nama tampilan telah diubah";
    },
    get$downloadFile() {
      return "Unduh berkas";
    },
    get$edit() {
      return "Sunting";
    },
    get$editBlockedServers() {
      return "Edit server yang diblokir";
    },
    get$chatPermissions() {
      return "Perizinan obrolan";
    },
    get$editDisplayname() {
      return "Edit nama tampilan";
    },
    get$editRoomAvatar() {
      return "Edit avatar ruangan";
    },
    get$emoteExists() {
      return "Emote sudah ada!";
    },
    get$emoteInvalid() {
      return "Shortcode emote tidak valid!";
    },
    get$emoteKeyboardNoRecents() {
      return "Emote yang telah digunakan akan muncul di sini...";
    },
    get$emotePacks() {
      return "Paket emote untuk ruangan";
    },
    get$customEmojisAndStickers() {
      return "Emoji dan stiker kustom";
    },
    get$emoteShortcode() {
      return "Shortcode emote";
    },
    get$emoteWarnNeedToPick() {
      return "Kamu harus memilih shortcode emote dan gambar!";
    },
    get$emptyChat() {
      return "Chat kosong";
    },
    get$enableEmotesGlobally() {
      return "Aktifkan paket emote secara global";
    },
    get$enableEncryption() {
      return "Aktifkan enkripsi";
    },
    get$encrypted() {
      return "Terenkripsi";
    },
    get$encryptionNotEnabled() {
      return "Enkripsi tidak diaktifkan";
    },
    endedTheCall$1(senderName) {
      return senderName + " mengakhiri panggilan";
    },
    get$enterAnEmailAddress() {
      return "Masukkan alamat email";
    },
    errorObtainingLocation$1(error) {
      return "Gagal mendapat lokasi: " + error;
    },
    get$fontSize(_) {
      return "Ukuran font";
    },
    get$forward(_) {
      return "Teruskan";
    },
    get$fromJoining() {
      return "Dari bergabung";
    },
    get$fromTheInvitation() {
      return "Dari undangan";
    },
    get$guestsAreForbidden() {
      return "Tamu dilarang";
    },
    get$guestsCanJoin() {
      return "Tamu bisa bergabung";
    },
    hasWithdrawnTheInvitationFor$2(username, targetName) {
      return username + " telah mencabut undangan untuk " + targetName;
    },
    get$help() {
      return "Bantuan";
    },
    get$hideRedactedMessages() {
      return "Sembunyikan pesan yang dihapus";
    },
    get$hideRedactedMessagesBody() {
      return "Jika seseorang menghapus pesan, pesannya tidak akan terlihat lagi dalam obrolan.";
    },
    get$hideInvalidOrUnknownMessageFormats() {
      return "Sembunyikan format pesan yang tidak valid atau tidak diketahui";
    },
    get$block() {
      return "Blokir";
    },
    get$blockedUsers() {
      return "Pengguna yang terblokir";
    },
    get$blockListDescription() {
      return "Kamu bisa memblokir pengguna yang sedang menganggumu. Kamu tidak akan mendapatkan pesan atau undangan ruangan dari pengguna dalam daftar blokiran pribadimu.";
    },
    get$blockUsername() {
      return "Abaikan nama pengguna";
    },
    get$iHaveClickedOnLink() {
      return "Saya sudah klik tautannya";
    },
    get$incorrectPassphraseOrKey() {
      return "Frasa sandi atau kunci pemulihan yang salah";
    },
    get$inviteContact() {
      return "Undang kontak";
    },
    get$noChatDescriptionYet() {
      return "Deskripsi obrolan belum dibuat.";
    },
    get$tryAgain() {
      return "Coba ulang";
    },
    get$invited() {
      return "Diundang";
    },
    get$redactMessageDescription() {
      return "Pesan akan dihilangkan untuk semua anggota dalam percakapan ini. Ini tidak dapat diurungkan.";
    },
    get$optionalRedactReason() {
      return "(Opsional) Alasan menghilangkan pesan ini...";
    },
    invitedUser$2(username, targetName) {
      return "\ud83d\udce9 " + username + " mengundang " + targetName;
    },
    get$invitedUsersOnly() {
      return "Pengguna yang diundang saja";
    },
    get$inviteForMe() {
      return "Undangan untuk saya";
    },
    get$isTyping() {
      return "sedang mengetik\u2026";
    },
    joinedTheChat$1(username) {
      return "\ud83d\udc4b " + username + " telah bergabung dengan obrolan";
    },
    kicked$2(username, targetName) {
      return "\ud83d\udc5e " + username + " mengeluarkan " + targetName;
    },
    get$kickFromChat() {
      return "Keluarkan dari obrolan";
    },
    lastActiveAgo$1(localizedTimeShort) {
      return "Terakhir aktif: " + localizedTimeShort;
    },
    get$leave() {
      return "Tinggalkan";
    },
    get$leftTheChat() {
      return "Keluar dari obrolan";
    },
    get$lightTheme() {
      return "Terang";
    },
    get$dehydrate() {
      return "Ekspor sesi dan bersihkan perangkat";
    },
    get$dehydrateWarning() {
      return "Tindakan ini tidak dapat diurungkan. Pastikan kamu telah menyimpan file cadangan dengan aman.";
    },
    get$dehydrateTor() {
      return "Pengguna Tor: Ekspor sesi";
    },
    get$dehydrateTorLong() {
      return "Pengguna Tor disarankan untuk mengekspor sesi sebelum menutup jendela.";
    },
    get$loadingPleaseWait() {
      return "Memuat\u2026 Mohon tunggu.";
    },
    get$loadMore() {
      return "Muat lebih banyak\u2026";
    },
    get$locationDisabledNotice() {
      return "Layanan lokasi dinonaktifkan. Mohon diaktifkan untuk bisa membagikan lokasimu.";
    },
    get$locationPermissionDeniedNotice() {
      return "Izin lokasi ditolak. Mohon memberikan izin untuk bisa membagikan lokasimu.";
    },
    get$login() {
      return "Masuk";
    },
    get$logout() {
      return "Keluar";
    },
    get$mention() {
      return "Sebutkan";
    },
    get$messages() {
      return "Pesan";
    },
    get$messagesStyle() {
      return "Pesan:";
    },
    get$moderator() {
      return "Moderator";
    },
    get$newChat() {
      return "Chat baru";
    },
    get$newVerificationRequest() {
      return "Permintaan verifikasi baru!";
    },
    get$next(_) {
      return "Lanjut";
    },
    get$no() {
      return "Tidak";
    },
    get$noConnectionToTheServer() {
      return "Tidak ada koneksi ke server";
    },
    get$noEmotesFound() {
      return "Tidak ada emote yang ditemukan. \ud83d\ude15";
    },
    get$shareInviteLink() {
      return "Bagikan tautan undangan";
    },
    get$none() {
      return "Tidak Ada";
    },
    get$noPasswordRecoveryDescription() {
      return "Kamu belum menambahkan cara untuk memulihkan kata sandimu.";
    },
    get$noPermission() {
      return "Tidak ada izin";
    },
    get$noRoomsFound() {
      return "Tidak ada ruangan yang ditemukan\u2026";
    },
    get$notifications() {
      return "Notifikasi";
    },
    get$obtainingLocation() {
      return "Mendapatkan lokasi\u2026";
    },
    get$offensive() {
      return "Menyinggung";
    },
    get$ok() {
      return "Ok";
    },
    get$oopsSomethingWentWrong() {
      return "Ups, ada yang salah\u2026";
    },
    get$oneClientLoggedOut() {
      return "Salah satu klienmu telah keluar";
    },
    get$openInMaps() {
      return "Buka di peta";
    },
    get$link() {
      return "Tautan";
    },
    get$serverRequiresEmail() {
      return "Server ini harus memvalidasi alamat email kamu untuk registrasi.";
    },
    get$participant() {
      return "Peserta";
    },
    get$passphraseOrKey() {
      return "frasa sandi atau kunci pemulihan";
    },
    get$password(_) {
      return "Kata sandi";
    },
    get$passwordForgotten() {
      return "Lupa kata sandi";
    },
    get$passwordHasBeenChanged() {
      return "Kata sandi telah diubah";
    },
    get$overview() {
      return "Ikhtisar";
    },
    get$passwordRecoverySettings() {
      return "Pengaturan pemulihan kata sandi";
    },
    get$passwordRecovery() {
      return "Pemulihan kata sandi";
    },
    get$pickImage() {
      return "Pilih gambar";
    },
    get$pin() {
      return "Pin";
    },
    get$pleaseChoose() {
      return "Mohon pilih";
    },
    get$pleaseEnterYourPassword() {
      return "Mohon masukkan kata sandimu";
    },
    get$pleaseEnterYourPin() {
      return "Masukkan pin";
    },
    get$pleaseEnterYourUsername() {
      return "Mohon masukkan nama penggunamu";
    },
    get$pleaseFollowInstructionsOnWeb() {
      return "Mohon ikuti petunjuk di situs web dan tekan lanjut.";
    },
    get$privacy() {
      return "Privasi";
    },
    get$reason(_) {
      return "Alasan";
    },
    redactedBy$1(username) {
      return "Dihilangkan oleh " + username;
    },
    get$directChat() {
      return "Chat langsung";
    },
    redactedByBecause$2(username, reason) {
      return "Dihilangkan oleh " + username + ' karena: "' + reason + '"';
    },
    redactedAnEvent$1(username) {
      return username + " menghapus sebuah peristiwa";
    },
    get$redactMessage() {
      return "Hapus pesan";
    },
    get$reject() {
      return "Tolak";
    },
    rejectedTheInvitation$1(username) {
      return username + " menolak undangannya";
    },
    get$removeAllOtherDevices() {
      return "Hapus semua perangkat lain";
    },
    get$unbanFromChat() {
      return "Hilangkan cekalan dari obrolan";
    },
    get$removeYourAvatar() {
      return "Hapus avatarmu";
    },
    get$replaceRoomWithNewerVersion() {
      return "Menggantikan ruangan dengan versi baru";
    },
    get$reply(_) {
      return "Balas";
    },
    get$reportMessage() {
      return "Laporkan pesan";
    },
    get$roomHasBeenUpgraded() {
      return "Ruangan telah ditingkatkan";
    },
    get$search(_) {
      return "Cari";
    },
    get$security() {
      return "Keamanan";
    },
    get$send(_) {
      return "Kirim";
    },
    get$sendAMessage() {
      return "Kirim pesan";
    },
    get$sendAudio() {
      return "Kirim suara";
    },
    get$sendFile() {
      return "Kirim file";
    },
    get$sendImage() {
      return "Kirim gambar";
    },
    sendImages$1(count) {
      return "Kirim " + count + " gambar";
    },
    get$sendMessages() {
      return "Kirim pesan";
    },
    get$sendVideo() {
      return "Kirim video";
    },
    sentAFile$1(username) {
      return "\ud83d\udcc1 " + username + " mengirim file";
    },
    sentAnAudio$1(username) {
      return "\ud83c\udfa4 " + username + " mengirim suara";
    },
    sentAPicture$1(username) {
      return "\ud83d\uddbc\ufe0f " + username + " mengirim gambar";
    },
    sentASticker$1(username) {
      return "\ud83d\ude0a " + username + " mengirim stiker";
    },
    sentAVideo$1(username) {
      return "\ud83c\udfa5 " + username + " mengirim video";
    },
    sentCallInformations$1(senderName) {
      return senderName + " mengirim informasi panggilan";
    },
    get$separateChatTypes() {
      return "Pisahkan Pesan Langsung dan Grup";
    },
    get$setChatDescription() {
      return "Lihat deskripsi obrolan";
    },
    get$setStatus() {
      return "Tetapkan status";
    },
    get$settings() {
      return "Pengaturan";
    },
    get$share(_) {
      return "Bagikan";
    },
    sharedTheLocation$1(username) {
      return username + " membagikan lokasinya";
    },
    get$shareLocation() {
      return "Bagikan lokasi";
    },
    get$presencesToggle() {
      return "Tampilkan pesan status dari pengguna lain";
    },
    get$skip(_) {
      return "Lewat";
    },
    get$sourceCode() {
      return "Kode sumber";
    },
    startedACall$1(senderName) {
      return senderName + " memulai panggilan";
    },
    get$status(_) {
      return "Status";
    },
    get$statusExampleMessage() {
      return "Apa kabar hari ini?";
    },
    get$submit(_) {
      return "Kirim";
    },
    get$synchronizingPleaseWait() {
      return "Menyinkronkan... Mohon tunggu.";
    },
    synchronizingPleaseWaitCounter$1(percentage) {
      return " Sinkronisasi\u2026 (" + percentage + "%)";
    },
    get$systemTheme() {
      return "Sistem";
    },
    get$theyDontMatch() {
      return "Tidak Cocok";
    },
    get$theyMatch() {
      return "Cocok";
    },
    get$tooManyRequestsWarning() {
      return "Terlalu banyak permintaan. Coba lagi nanti!";
    },
    get$tryToSendAgain() {
      return "Coba kirim lagi";
    },
    get$unavailable() {
      return "Tidak tersedia";
    },
    unbannedUser$2(username, targetName) {
      return username + " menghilangkan cekalan " + targetName;
    },
    get$unblockDevice() {
      return "Hilangkan Pemblokiran Perangkat";
    },
    get$unknownDevice() {
      return "Perangkat tidak dikenal";
    },
    get$unknownEncryptionAlgorithm() {
      return "Algoritma enkripsi tidak dikenal";
    },
    unknownEvent$1(type) {
      return "Peristiwa tidak dikenal '" + type + "'";
    },
    get$unpin() {
      return "Lepaskan pin";
    },
    userAndOthersAreTyping$2(username, count) {
      return username + " dan " + count + " lainnya sedang mengetik\u2026";
    },
    userAndUserAreTyping$2(username, username2) {
      return username + " dan " + username2 + " sedang mengetik\u2026";
    },
    userIsTyping$1(username) {
      return username + " sedang mengetik\u2026";
    },
    userLeftTheChat$1(username) {
      return "\ud83d\udeaa " + username + " keluar dari obrolan";
    },
    get$username(_) {
      return "Nama Pengguna";
    },
    userSentUnknownEvent$2(username, type) {
      return username + " mengirim peristiwa " + type;
    },
    get$unverified() {
      return "Tidak terverifikasi";
    },
    get$verified() {
      return "Terverifikasi";
    },
    get$verifyStart() {
      return "Mulai Verifikasi";
    },
    get$verifySuccess() {
      return "Kamu berhasil memverifikasi!";
    },
    get$verifyTitle() {
      return "Memverifikasi akun lain";
    },
    get$visibleForAllParticipants() {
      return "Terlihat untuk semua anggota";
    },
    get$visibleForEveryone() {
      return "Terlihat untuk semua orang";
    },
    get$voiceMessage() {
      return "Pesan suara";
    },
    get$waitingPartnerAcceptRequest() {
      return "Menunggu pengguna untuk menerima permintaan\u2026";
    },
    get$waitingPartnerEmoji() {
      return "Menunggu pengguna untuk menerima emoji\u2026";
    },
    get$waitingPartnerNumbers() {
      return "Menunggu pengguna untuk menerima angka\u2026";
    },
    get$warning() {
      return "Peringatan!";
    },
    get$weSentYouAnEmail() {
      return "Kami mengirim kamu sebuah email";
    },
    get$whyDoYouWantToReportThis() {
      return "Kenapa kamu ingin melaporkannya?";
    },
    get$withTheseAddressesRecoveryDescription() {
      return "Dengan alamat ini kamu bisa memulihkan kata sandimu.";
    },
    get$writeAMessage() {
      return "Tulis pesan\u2026";
    },
    get$yes() {
      return "Ya";
    },
    get$you() {
      return "Kamu";
    },
    get$youAreNoLongerParticipatingInThisChat() {
      return "Kamu tidak berpartisipasi lagi di obrolan ini";
    },
    get$youHaveBeenBannedFromThisChat() {
      return "Kamu telah dicekal dari obrolan ini";
    },
    get$yourPublicKey() {
      return "Kunci publikmu";
    },
    get$messageInfo() {
      return "Informasi pesan";
    },
    get$time(_) {
      return "Waktu";
    },
    get$sender() {
      return "Pengirim";
    },
    get$openGallery() {
      return "Buka galeri";
    },
    get$start(_) {
      return "Mulai";
    },
    get$markAsRead() {
      return "Tandai sebagai dibaca";
    },
    reactedWith$2(sender, reaction) {
      return sender + " bereaksi dengan " + reaction;
    },
    get$pinMessage() {
      return "Sematkan ke ruangan";
    },
    get$emojis() {
      return "Emoji";
    },
    get$youRejectedTheInvitation() {
      return "Kamu menolak undangannya";
    },
    get$youJoinedTheChat() {
      return "Kamu bergabung ke obrolan";
    },
    get$youAcceptedTheInvitation() {
      return "\ud83d\udc4d Kamu menerima undangannya";
    },
    youBannedUser$1(user) {
      return "Kamu mencekal " + user;
    },
    youHaveWithdrawnTheInvitationFor$1(user) {
      return "Kamu telah membatalkan undangan untuk " + user;
    },
    youInvitedBy$1(user) {
      return "\ud83d\udce9 Kamu telah diundang oleh " + user;
    },
    youInvitedUser$1(user) {
      return "\ud83d\udce9 Kamu mengundang " + user;
    },
    youKicked$1(user) {
      return "\ud83d\udc5e Kamu mengeluarkan " + user;
    },
    youUnbannedUser$1(user) {
      return "Kamu membatalkan cekalan " + user;
    },
    hasKnocked$1(user) {
      return "\ud83d\udeaa " + user + " telah dikeluarkan";
    },
    get$users() {
      return "Pengguna";
    },
    countFiles$1(count) {
      return "" + count + " file";
    },
    get$user() {
      return "Pengguna";
    },
    get$custom() {
      return "Kustom";
    },
    get$noKeyForThisMessage() {
      return "Hal ini bisa terjadi jika pesan dikirim sebelum kamu masuk ke akunmu di perangkat ini.\n\nMungkin juga pengirim telah memblokir perangkatmu atau ada yang tidak beres dengan koneksi internet.\n\nApakah kamu bisa membaca pesan pada sesi lain? Maka kamu bisa mentransfer pesan dari sesi tersebut! Buka Pengaturan > Perangkat dan pastikan bahwa perangkat Anda telah ditandatangani secara silang. Ketika kamu membuka ruangan di lain waktu dan kedua sesi berada di latar depan, kunci akan ditransmisikan secara otomatis.\n\nApakah kamu tidak mau kehilangan kunci saat keluar atau berpindah perangkat? Pastikan bahwa kamu telah mengaktifkan cadangan obrolan dalam pengaturan.";
    },
    wasDirectChatDisplayName$1(oldDisplayName) {
      return "Obrolan kosong (sebelumnya " + oldDisplayName + ")";
    },
    get$reopenChat() {
      return "Buka obrolan lagi";
    },
    get$noOtherDevicesFound() {
      return "Tidak ada perangkat lain yang ditemukan";
    },
    fileIsTooBigForServer$1(max) {
      return "Tidak dapat mengirim! Server hanya mendukung lampiran sampai dengan " + max + ".";
    },
    get$jumpToLastReadMessage() {
      return "Pergi ke pesan terakhir dibaca";
    },
    get$readUpToHere() {
      return "Baca sampai sini";
    },
    get$jump() {
      return "Lompat";
    },
    get$openLinkInBrowser() {
      return "Buka tautan dalam peramban";
    },
    get$setColorTheme() {
      return "Atur tema warna:";
    },
    get$invite() {
      return "Undang";
    },
    get$invalidInput() {
      return "Masukan tidak valid!";
    },
    wrongPinEntered$1(seconds) {
      return "PIN yang dimasukkan salah! Coba lagi dalam " + seconds + " detik...";
    },
    get$pleaseEnterANumber() {
      return "Silakan masukkan angka lebih dari 0";
    },
    get$removeDevicesDescription() {
      return "Kamu akan dikeluarkan dari perangkat ini dan tidak akan dapat menerima pesan lagi.";
    },
    get$banUserDescription() {
      return "Pengguna akan dicekal dari percakapan dan tidak akan dapat memasuki percakapan lagi sampai dibatalkan cekalannya.";
    },
    get$unbanUserDescription() {
      return "Pengguna akan dapat memasuki percakapannya lagi jika dicoba.";
    },
    get$kickUserDescription() {
      return "Pengguna ini dikeluarkan dari percakapan tetapi tidak dicekal. Dalam percakapan publik, penggunanya dapat bergabung ulang kapan pun.";
    },
    get$makeAdminDescription() {
      return "Setelah kamu membuat pengguna ini admin, kamu tidak akan dapat mengurungkan ini karena penggunanya akan memiliki perizinan yang sama seperti kamu.";
    },
    get$yourGlobalUserIdIs() {
      return "ID pengguna globalmu adalah: ";
    },
    noUsersFoundWithQuery$1(query) {
      return 'Sayangnya tidak ada pengguna yang dapat ditemukan dengan "' + query + '". Silakan periksa jika ada tipo.';
    },
    get$knocking() {
      return "Mengetuk";
    },
    get$nothingFound() {
      return "Tidak ada yang ditemukan...";
    },
    get$groupName() {
      return "Nama grup";
    },
    get$wrongRecoveryKey() {
      return "Maaf... ini sepertinya bukan kunci pemulihan yang benar.";
    },
    get$startConversation() {
      return "Mulai percakapan";
    },
    get$commandHint_sendraw() {
      return "Kirim JSON mentah";
    },
    get$leaveEmptyToClearStatus() {
      return "Tinggalkan kosong untuk menghapus statusmu.";
    },
    get$searchForUsers() {
      return "Cari @pengguna...";
    },
    get$pleaseEnterYourCurrentPassword() {
      return "Silakan masukkan kata sandimu saat ini";
    },
    get$newPassword() {
      return "Kata sandi baru";
    },
    get$pleaseChooseAStrongPassword() {
      return "Silakan pilih kata sandi yang kuat";
    },
    get$passwordsDoNotMatch() {
      return "Kata sandi tidak cocok";
    },
    get$passwordIsWrong() {
      return "Kata sandi yang kamu masukkan salah";
    },
    get$decline() {
      return "Tolak";
    },
    get$thisDevice() {
      return "Perangkat ini:";
    },
    get$initAppError() {
      return "Terjadi kesalahan saat init aplikasi";
    },
    searchIn$1(chat) {
      return 'Cari dalam obrolan "' + chat + '"...';
    },
    get$searchMore() {
      return "Cari lebih banyak...";
    },
    get$gallery() {
      return "Galeri";
    },
    get$files(_) {
      return "Berkas";
    },
    sessionLostBody$2(url, error) {
      return "Sesimu hilang. Silakan laporkan kesalahan ini kepada pengembang di " + url + ". Pesan kesalahannya adalah: " + error;
    },
    restoreSessionBody$2(url, error) {
      return "Aplikasi sekarang mencoba memulihkan sesimu dari cadangan. Silakan laporkan kesalahan ini kepada pengembang di " + url + ". Pesan kesalahannya adalah: " + error;
    },
    get$sendReadReceipts() {
      return "Kirim laporan dibaca";
    },
    get$sendTypingNotificationsDescription() {
      return "Anggota lain dalam percakapan dapat melihat ketika kamu sedang mengetik sebuah pesan baru.";
    },
    get$sendReadReceiptsDescription() {
      return "Anggota lain dalam percakapan dapat melihat ketika kamu membaca sebuah pesan.";
    },
    get$verifyOtherDevice() {
      return "\ud83d\udd10 Verifikasi perangkat lain";
    },
    get$verifyOtherDeviceDescription() {
      return "Saat kamu memverifikasi perangkat lain, perangkat tersebut dapat bertukar kunci, sehingga meningkatkan keamananmu secara keseluruhan. \ud83d\udcaa Saat Anda memulai verifikasi, sebuah pemberitahuan akan muncul di aplikasi pada kedua perangkat. Di situ kemudian akan melihat serangkaian emoji atau angka yang harus dibandingkan satu sama lain. Sebaiknya siapkan kedua perangkat sebelum kamu memulai verifikasi. \ud83e\udd33";
    },
    acceptedKeyVerification$1(sender) {
      return sender + " menerima verifikasi kunci";
    },
    canceledKeyVerification$1(sender) {
      return sender + " membatalkan verifikasi kunci";
    },
    completedKeyVerification$1(sender) {
      return sender + " menyelesaikan verifikasi kunci";
    },
    isReadyForKeyVerification$1(sender) {
      return sender + " siap untuk verifikasi kunci";
    },
    requestedKeyVerification$1(sender) {
      return sender + " meminta verifikasi kunci";
    },
    startedKeyVerification$1(sender) {
      return sender + " memulai verifikasi kunci";
    },
    get$stickers() {
      return "Stiker";
    },
    get$commandHint_ignore() {
      return "Abaikan ID Matrix yang diberikan";
    },
    get$commandHint_unignore() {
      return "Batalkan pengabaian ID Matrix yang diberikan";
    },
    thereAreCountUsersBlocked$1(count) {
      return "Saat ini ada " + count + " pengguna yang diblokir.";
    },
    get$restricted() {
      return "Dibatasi";
    },
    get$markAsUnread() {
      return "Tandai sebagai belum dibaca";
    },
    userLevel$1(level) {
      return "" + level + " - Pengguna";
    },
    moderatorLevel$1(level) {
      return "" + level + " - Moderator";
    },
    adminLevel$1(level) {
      return "" + level + " - Admin";
    },
    get$changeTheVisibilityOfChatHistory() {
      return "Ubah keterlihatan riwayat chat";
    },
    get$changeTheCanonicalRoomAlias() {
      return "Ubah alamat chat publik utama";
    },
    get$sendRoomNotifications() {
      return "Kirim notifikasi @room";
    },
    get$chatPermissionsDescription() {
      return "Tentukan tingkat kekuasaan yang diperlukan untuk tindakan tertentu dalam chat ini. Tingkat kekuasaan 0, 50 dan 100 biasanya mewakili pengguna, moderator dan admin, tetapi gradasi apa pun dimungkinkan.";
    },
    updateInstalled$1(version) {
      return "\ud83c\udf89 Pembaruan " + version + " terpasang!";
    },
    get$sendCanceled() {
      return "Pengiriman dibatalkan";
    },
    get$doesNotSeemToBeAValidHomeserver() {
      return "Sepertinya bukan homeserver yang kompatibel. URL salah?";
    },
    get$calculatingFileSize() {
      return "Menghitung ukuran berkas...";
    },
    get$prepareSendingAttachment() {
      return "Menyiapkan pengiriman lampiran...";
    },
    get$sendingAttachment() {
      return "Mengirim lampiran...";
    },
    sendingAttachmentCountOfCount$2(index, $length) {
      return "Mengirim lampiran " + index + " dari " + $length + "...";
    },
    serverLimitReached$1(seconds) {
      return "Batasan server tercapai! Menunggu " + seconds + " detik...";
    },
    get$noticeChatBackupDeviceVerification() {
      return "Catatan: Ketika Anda menghubungkan semua perangkat Anda ke cadangan chat, mereka akan diverifikasi secara otomatis.";
    },
    get$continueText() {
      return "Lanjutkan";
    },
    get$blur(_) {
      return "Buram:";
    },
    get$opacity(_) {
      return "Opasitas:";
    },
    get$setWallpaper() {
      return "Atur later belakang";
    },
    get$noContactInformationProvided() {
      return "Server tidak menyediakan informasi kontak valid apa pun";
    },
    get$contactServerAdmin() {
      return "Hubungi admin server";
    },
    get$contactServerSecurity() {
      return "Hubungi keamanan server";
    },
    get$supportPage() {
      return "Laman dukungan";
    },
    get$serverInformation() {
      return "Informasi server:";
    },
    get$name(_) {
      return "Nama";
    },
    get$version(_) {
      return "Versi";
    },
    get$compress() {
      return "Kompres";
    },
    get$boldText() {
      return "Teks tebal";
    },
    get$italicText() {
      return "Teks miring";
    },
    get$strikeThrough() {
      return "Coret";
    },
    get$pleaseFillOut() {
      return "Silakan isi";
    },
    get$invalidUrl() {
      return "URL tidak valid";
    },
    get$addLink() {
      return "Tambahkan tautan";
    },
    get$unableToJoinChat() {
      return "Tidak dapat bergabung dalam chat. Mungkin pihak lain telah menutup percakapan.";
    },
    get$previous() {
      return "Sebelumnya";
    },
    get$otherPartyNotLoggedIn() {
      return "Pihak lain belum masuk dan tidak dapat menerima pesan!";
    },
    get$open(_) {
      return "Buka";
    },
    get$waitingForServer() {
      return "Menunggu server...";
    },
    get$newChatRequest() {
      return "\ud83d\udce9 Permintaan pesan baru";
    },
    get$contentNotificationSettings() {
      return "Pengaturan notifikasi konten";
    },
    get$generalNotificationSettings() {
      return "Pengaturan notifikasi umum";
    },
    get$roomNotificationSettings() {
      return "Pengaturan notifikasi ruangan";
    },
    get$userSpecificNotificationSettings() {
      return "Pengaturan notifikasi spesifik pengguna";
    },
    get$otherNotificationSettings() {
      return "Pengaturan notifikasi lainnya";
    },
    get$notificationRuleContainsUserName() {
      return "Berisi Nama Pengguna";
    },
    get$notificationRuleContainsUserNameDescription() {
      return "Memberi tahu pengguna ketika pesan memiliki nama penggunanya.";
    },
    get$notificationRuleMaster() {
      return "Bisukan semua notifikasi";
    },
    get$notificationRuleMasterDescription() {
      return "Menimpa peraturan lainnya dan menonaktifkan semua notifikasi.";
    },
    get$notificationRuleSuppressNotices() {
      return "Dimakan Pesan Terautomasi";
    },
    get$notificationRuleSuppressNoticesDescription() {
      return "Mendiamkan notifikasi dari klien terautomasi seperti bot.";
    },
    get$notificationRuleInviteForMe() {
      return "Undang untuk Aku";
    },
    get$notificationRuleInviteForMeDescription() {
      return "Memberi tahu pengguna ketika diundang ke ruangan.";
    },
    get$notificationRuleMemberEvent() {
      return "Peristiwa Anggota";
    },
    get$notificationRuleMemberEventDescription() {
      return "Mendiamkan notifikasi peristiwa keanggotaan.";
    },
    get$notificationRuleIsUserMention() {
      return "Sebutan Pengguna";
    },
    get$notificationRuleIsUserMentionDescription() {
      return "Memberi tahu pengguna ketika disebut secara langsung dalam pesan.";
    },
    get$notificationRuleContainsDisplayName() {
      return "Berisi Nama Tampilan";
    },
    get$notificationRuleContainsDisplayNameDescription() {
      return "Memberi tahu pengguna ketika pesan berisi nama tampilannya.";
    },
    get$notificationRuleIsRoomMention() {
      return "Sebutan Ruangan";
    },
    get$notificationRuleIsRoomMentionDescription() {
      return "Memberi tahu pengguna ketika ada sebutan ruangan.";
    },
    get$notificationRuleRoomnotif() {
      return "Notifikasi Ruangan";
    },
    get$notificationRuleRoomnotifDescription() {
      return "Memberi tahu pengguna ketika pesan berisi '@room'.";
    },
    get$notificationRuleTombstone() {
      return "Nisan";
    },
    get$notificationRuleTombstoneDescription() {
      return "Memberi tahu pengguna tentang pesan deaktivasi ruangan.";
    },
    get$notificationRuleReaction() {
      return "Reaksi";
    },
    get$notificationRuleReactionDescription() {
      return "Mendiamkan notifikasi reaksi.";
    },
    get$notificationRuleRoomServerAcl() {
      return "ACL Server Ruangan";
    },
    get$notificationRuleRoomServerAclDescription() {
      return "Mendiamkan notifikasi daftar kontrol akses server ruangan (ACL).";
    },
    get$notificationRuleSuppressEdits() {
      return "Diamkan Penyuntingan";
    },
    get$notificationRuleSuppressEditsDescription() {
      return "Mendiamkan notifikasi pesan tersunting.";
    },
    get$notificationRuleCall() {
      return "Panggilan";
    },
    get$notificationRuleCallDescription() {
      return "Memberi tahu pengguna tentang panggilan.";
    },
    get$notificationRuleEncryptedRoomOneToOne() {
      return "Ruangan Terenkripsi Satu ke Satu";
    },
    get$notificationRuleEncryptedRoomOneToOneDescription() {
      return string$.Member;
    },
    get$notificationRuleRoomOneToOne() {
      return "Ruangan Satu ke Satu";
    },
    get$notificationRuleRoomOneToOneDescription() {
      return string$.Member;
    },
    get$notificationRuleMessage() {
      return "Pesan";
    },
    get$notificationRuleMessageDescription() {
      return "Memberi tahu pengguna tentang pesan umum.";
    },
    get$notificationRuleEncrypted() {
      return "Terenkripsi";
    },
    get$notificationRuleEncryptedDescription() {
      return "Memberi tahu pengguna tentang pesan dalam ruangan terenkripsi.";
    },
    get$notificationRuleJitsi() {
      return "Jitsi";
    },
    get$notificationRuleJitsiDescription() {
      return "Memberi tahu pengguna tentang peristiwa widget Jitsi.";
    },
    get$notificationRuleServerAcl() {
      return "Diamkan Peristiwa ACL Server";
    },
    get$notificationRuleServerAclDescription() {
      return "Mendiamkan notifikasi peristiwa ACL server.";
    },
    unknownPushRule$1(rule) {
      return "Aturan dorongan '" + rule + "' tidak diketahui";
    },
    sentVoiceMessage$2(sender, duration) {
      return "\ud83c\udf99\ufe0f " + duration + " - Pesan suara dari " + sender;
    },
    get$deletePushRuleCanNotBeUndone() {
      return "Jika kamu menghapus pengaturan notifikasi ini, maka tidak dapat diurungkan.";
    },
    get$more() {
      return "Tambahan";
    },
    get$shareKeysWith() {
      return "Bagikan kunci dengan...";
    },
    get$shareKeysWithDescription() {
      return "Perangkat apa saja yang dipercayai supaya mereka bisa membaca bersama dengan pesanmu dalam obrolan terenkripsi?";
    },
    get$allDevices() {
      return "Semua perangkat";
    },
    get$crossVerifiedDevicesIfEnabled() {
      return "Verifikasi silang perangkat jika diaktifkan";
    },
    get$crossVerifiedDevices() {
      return "Perangkat terverifikasi silang";
    },
    get$verifiedDevicesOnly() {
      return "Perangkat terverifikasi saja";
    },
    get$optionalMessage() {
      return "Pesan (opsional)...";
    },
    get$notSupportedOnThisDevice() {
      return "Tidak didukung pada perangkat ini";
    },
    get$enterNewChat() {
      return "Masuk ke obrolan baru";
    },
    get$approve() {
      return "Terima";
    },
    get$commandHint_logout() {
      return "Keluar dari perangkatmu saat ini";
    },
    get$commandHint_logoutall() {
      return "Keluarkan semua perangkat aktif";
    },
    get$customReaction() {
      return "Custom reaction";
    },
    writeAMessageLangCodes$2(l1, l2) {
      return "Type in " + l1 + " or " + l2 + "...";
    },
    get$holdForInfo() {
      return "Click and hold for word info.";
    },
    get$greenFeedback() {
      return "That's what I would put!";
    },
    get$yellowFeedback() {
      return "Hm, you can try that and see if it works! To use this word, just click it again.";
    },
    get$redFeedback() {
      return "I don't think that's right...";
    },
    get$itInstructionsTitle() {
      return "I can help you translate!";
    },
    get$itInstructionsBody() {
      return "You can click and hold choices for word info.";
    },
    get$gaTooltip() {
      return "L2 use with grammar assistance";
    },
    get$taTooltip() {
      return "L2 use with translation assistance";
    },
    get$interactiveTranslatorSliderHeader() {
      return "Interactive Translator";
    },
    get$interactiveGrammarSliderHeader() {
      return "Interactive Grammar Checker";
    },
    get$waTooltip() {
      return "L2 use without assistance";
    },
    get$noIdenticalLanguages() {
      return "Please choose different base and target languages";
    },
    get$joinWithClassCode() {
      return "Join course";
    },
    get$joinWithClassCodeHint() {
      return "Enter invite code";
    },
    get$languageLevelPreA1() {
      return "True Beginner (Pre A1)";
    },
    get$languageLevelA1() {
      return "Beginner (A1)";
    },
    get$languageLevelA2() {
      return "Elementary (A2)";
    },
    get$languageLevelB1() {
      return "Intermediate (B1)";
    },
    get$languageLevelB2() {
      return "Upper Intermediate (B2)";
    },
    get$languageLevelC1() {
      return "Advanced (C1)";
    },
    get$languageLevelC2() {
      return "Mastery (C2)";
    },
    get$changeTheNameOfTheClass() {
      return "Change the name";
    },
    get$changeTheNameOfTheChat() {
      return "Change the name of the chat";
    },
    get$sorryNoResults() {
      return "Sorry, no results.";
    },
    get$ignoreInThisText() {
      return "Ignore";
    },
    needsItMessage$1(targetLanguage) {
      return "Wait, that's not " + targetLanguage + "! Do you need help translating?";
    },
    get$countryInformation() {
      return "My country";
    },
    get$targetLanguage() {
      return "Target Language";
    },
    get$updateLanguage() {
      return "My languages";
    },
    get$whatLanguageYouWantToLearn() {
      return "What language do you want to learn?";
    },
    get$whatIsYourBaseLanguage() {
      return "What is your base language?";
    },
    get$saveChanges() {
      return "Save changes";
    },
    get$publicProfileTitle() {
      return "Allow my profile to be found in search";
    },
    get$publicProfileDesc() {
      return "By turning on, you enable other users to find your profile in the global search bar and send requests to chat. At this point, you can choose to accept or deny the request.";
    },
    get$errorDisableIT() {
      return "Translation assistance is turned off.";
    },
    get$errorDisableIGC() {
      return "Grammar assistance is turned off.";
    },
    get$errorDisableLanguageAssistance() {
      return "Translation assistance and grammar assistance are turned off.";
    },
    get$errorDisableITUserDesc() {
      return "Click here to update translation assistance settings";
    },
    get$errorDisableIGCUserDesc() {
      return "Click here to update grammar assistance settings";
    },
    get$errorDisableLanguageAssistanceUserDesc() {
      return "Click here to update translation assistance and grammar assistance settings";
    },
    get$errorDisableITClassDesc() {
      return "Translation assistance is turned off for the course that this chat is in.";
    },
    get$errorDisableIGCClassDesc() {
      return "Grammar assistance is turned off for the course that this chat is in.";
    },
    get$error405Title() {
      return "Languages not set";
    },
    get$error405Desc() {
      return "Please set your languages in Main Menu > Learning Settings.";
    },
    get$termsAndConditions() {
      return "Terms and Conditions";
    },
    get$andCertifyIAmAtLeast13YearsOfAge() {
      return " and certify I am at least 16 years of age.";
    },
    get$error502504Title() {
      return "Wow, there are a lot of students online!";
    },
    get$error502504Desc() {
      return "Translation and grammar tools may be slow or unavailable while the Pangea bots catch up.";
    },
    get$error404Title() {
      return "Translation error!";
    },
    get$error404Desc() {
      return "Pangea Bot isn't sure how to translate that...";
    },
    get$errorPleaseRefresh() {
      return "We're looking into it! Please reload and try again.";
    },
    get$connectedToStaging() {
      return "Connected to Staging";
    },
    get$learningSettings() {
      return "Learning settings";
    },
    get$participants() {
      return "Participants";
    },
    get$clickMessageTitle() {
      return "Need help?";
    },
    get$clickMessageBody() {
      return "Click a message for language tools like translation, play back and more!";
    },
    get$allDone() {
      return "All done!";
    },
    get$vocab() {
      return "Vocab";
    },
    get$subscribe(_) {
      return "Subscribe";
    },
    get$getAccess() {
      return "Subscribe now!";
    },
    get$subscriptionDesc() {
      return "Messaging is free! Subscribe to unlock interactive translation, grammar checking and learning analytics.";
    },
    get$subscriptionManagement() {
      return "Subscription Management";
    },
    get$currentSubscription() {
      return "Current Subscription";
    },
    get$cancelSubscription() {
      return "Cancel your subscription";
    },
    get$selectYourPlan() {
      return "Select Your Plan";
    },
    get$subsciptionPlatformTooltip() {
      return "Please login to your original device to manage your subscription plan";
    },
    get$subscriptionManagementUnavailable() {
      return "Subscription management not available";
    },
    get$paymentMethod() {
      return "Payment Method";
    },
    get$paymentHistory() {
      return "Payment History";
    },
    get$emptyChatDownloadWarning() {
      return "Cannot download empty chat";
    },
    get$toggleImmersionMode() {
      return "Immersion Mode";
    },
    get$toggleImmersionModeDesc() {
      return "When enabled, all messages are displayed in your target language. This setting is most useful in language exchanges.";
    },
    get$itToggleDescription() {
      return "This language learning tool will identify words in your base language and help you translate them to your target language. Though rare, the AI can make translation errors.";
    },
    get$igcToggleDescription() {
      return "This language learning tool will identify common spelling, grammar and punctuation errors in your message and suggest corrections. Though rare, the AI can make correction errors.";
    },
    get$originalMessage() {
      return "Original Message";
    },
    get$sentMessage() {
      return "Sent Message";
    },
    get$useType() {
      return "Use Type";
    },
    get$notAvailable() {
      return "Not Available";
    },
    get$taAndGaTooltip() {
      return "L2 use with translation assistance and grammar assistance";
    },
    get$definitionsToolName() {
      return "Word Definitions";
    },
    get$definitionsToolDescription() {
      return "When enabled, words underlined in blue can be clicked for definitions. Click messages to access definitions.";
    },
    get$welcomeBack() {
      return "Welcome back! If you were part of the 2023-2024 pilot, please contact us for your special pilot subscription. If you are a teacher who has (or whose institution has) purchased licenses for your class, contact us for your teacher subscription.";
    },
    get$downloadTxtFile() {
      return "Download Text File";
    },
    get$downloadCSVFile() {
      return "Download CSV File";
    },
    get$promotionalSubscriptionDesc() {
      return "You currently have a lifetime promotional subscription. Message support@pangea.chat for help changing your subscription.";
    },
    originalSubscriptionPlatform$1(purchasePlatform) {
      return "Subscription purchased through " + purchasePlatform;
    },
    get$oneWeekTrial() {
      return "One Week Trial";
    },
    get$downloadXLSXFile() {
      return "Download Excel File";
    },
    get$unkDisplayName() {
      return "Unknown";
    },
    get$wwCountryDisplayName() {
      return "World Wide";
    },
    get$afCountryDisplayName() {
      return "Afghanistan";
    },
    get$axCountryDisplayName() {
      return "Aland Islands";
    },
    get$alCountryDisplayName() {
      return "Albania";
    },
    get$dzCountryDisplayName() {
      return "Algeria";
    },
    get$asCountryDisplayName() {
      return "American Samoa";
    },
    get$adCountryDisplayName() {
      return "Andorra";
    },
    get$aoCountryDisplayName() {
      return "Angola";
    },
    get$aiCountryDisplayName() {
      return "Anguilla";
    },
    get$agCountryDisplayName() {
      return "Antigua and Barbuda";
    },
    get$arCountryDisplayName() {
      return "Argentina";
    },
    get$amCountryDisplayName() {
      return "Armenia";
    },
    get$awCountryDisplayName() {
      return "Aruba";
    },
    get$acCountryDisplayName() {
      return "Ascension Island";
    },
    get$auCountryDisplayName() {
      return "Australia";
    },
    get$atCountryDisplayName() {
      return "Austria";
    },
    get$azCountryDisplayName() {
      return "Azerbaijan";
    },
    get$bsCountryDisplayName() {
      return "Bahamas";
    },
    get$bhCountryDisplayName() {
      return "Bahrain";
    },
    get$bdCountryDisplayName() {
      return "Bangladesh";
    },
    get$bbCountryDisplayName() {
      return "Barbados";
    },
    get$byCountryDisplayName() {
      return "Belarus";
    },
    get$beCountryDisplayName() {
      return "Belgium";
    },
    get$bzCountryDisplayName() {
      return "Belize";
    },
    get$bjCountryDisplayName() {
      return "Benin";
    },
    get$bmCountryDisplayName() {
      return "Bermuda";
    },
    get$btCountryDisplayName() {
      return "Bhutan";
    },
    get$boCountryDisplayName() {
      return "Bolivia";
    },
    get$baCountryDisplayName() {
      return "Bosnia and Herzegovina";
    },
    get$bwCountryDisplayName() {
      return "Botswana";
    },
    get$brCountryDisplayName() {
      return "Brazil";
    },
    get$ioCountryDisplayName() {
      return "British Indian Ocean Territory";
    },
    get$vgCountryDisplayName() {
      return "British Virgin Islands";
    },
    get$bnCountryDisplayName() {
      return "Brunei";
    },
    get$bgCountryDisplayName() {
      return "Bulgaria";
    },
    get$bfCountryDisplayName() {
      return "Burkina Faso";
    },
    get$biCountryDisplayName() {
      return "Burundi";
    },
    get$khCountryDisplayName() {
      return "Cambodia";
    },
    get$cmCountryDisplayName() {
      return "Cameroon";
    },
    get$caCountryDisplayName() {
      return "Canada";
    },
    get$cvCountryDisplayName() {
      return "Cape Verde";
    },
    get$bqCountryDisplayName() {
      return "Caribbean Netherlands";
    },
    get$kyCountryDisplayName() {
      return "Cayman Islands";
    },
    get$cfCountryDisplayName() {
      return "Central African Republic";
    },
    get$tdCountryDisplayName() {
      return "Chad";
    },
    get$clCountryDisplayName() {
      return "Chile";
    },
    get$cnCountryDisplayName() {
      return "China";
    },
    get$cxCountryDisplayName() {
      return "Christmas Island";
    },
    get$ccCountryDisplayName() {
      return "Cocos [Keeling] Islands";
    },
    get$coCountryDisplayName() {
      return "Colombia";
    },
    get$kmCountryDisplayName() {
      return "Comoros";
    },
    get$cdCountryDisplayName() {
      return "Democratic Republic Congo";
    },
    get$cgCountryDisplayName() {
      return "Republic of Congo";
    },
    get$ckCountryDisplayName() {
      return "Cook Islands";
    },
    get$crCountryDisplayName() {
      return "Costa Rica";
    },
    get$ciCountryDisplayName() {
      return "C\xf4te d'Ivoire";
    },
    get$hrCountryDisplayName() {
      return "Croatia";
    },
    get$cuCountryDisplayName() {
      return "Cuba";
    },
    get$cwCountryDisplayName() {
      return "Cura\xe7ao";
    },
    get$cyCountryDisplayName() {
      return "Cyprus";
    },
    get$czCountryDisplayName() {
      return "Czech Republic";
    },
    get$dkCountryDisplayName() {
      return "Denmark";
    },
    get$djCountryDisplayName() {
      return "Djibouti";
    },
    get$dmCountryDisplayName() {
      return "Dominica";
    },
    get$doCountryDisplayName() {
      return "Dominican Republic";
    },
    get$tlCountryDisplayName() {
      return "East Timor";
    },
    get$ecCountryDisplayName() {
      return "Ecuador";
    },
    get$egCountryDisplayName() {
      return "Egypt";
    },
    get$svCountryDisplayName() {
      return "El Salvador";
    },
    get$gqCountryDisplayName() {
      return "Equatorial Guinea";
    },
    get$erCountryDisplayName() {
      return "Eritrea";
    },
    get$eeCountryDisplayName() {
      return "Estonia";
    },
    get$szCountryDisplayName() {
      return "Eswatini";
    },
    get$etCountryDisplayName() {
      return "Ethiopia";
    },
    get$fkCountryDisplayName() {
      return "Falkland Islands";
    },
    get$foCountryDisplayName() {
      return "Faroe Islands";
    },
    get$fjCountryDisplayName() {
      return "Fiji";
    },
    get$fiCountryDisplayName() {
      return "Finland";
    },
    get$frCountryDisplayName() {
      return "France";
    },
    get$gfCountryDisplayName() {
      return "French Guiana";
    },
    get$pfCountryDisplayName() {
      return "French Polynesia";
    },
    get$gaCountryDisplayName() {
      return "Gabon";
    },
    get$gmCountryDisplayName() {
      return "Gambia";
    },
    get$geCountryDisplayName() {
      return "Georgia";
    },
    get$deCountryDisplayName() {
      return "Germany";
    },
    get$ghCountryDisplayName() {
      return "Ghana";
    },
    get$giCountryDisplayName() {
      return "Gibraltar";
    },
    get$grCountryDisplayName() {
      return "Greece";
    },
    get$glCountryDisplayName() {
      return "Greenland";
    },
    get$gdCountryDisplayName() {
      return "Grenada";
    },
    get$gpCountryDisplayName() {
      return "Guadeloupe";
    },
    get$guCountryDisplayName() {
      return "Guam";
    },
    get$gtCountryDisplayName() {
      return "Guatemala";
    },
    get$ggCountryDisplayName() {
      return "Guernsey";
    },
    get$gnCountryDisplayName() {
      return "Guinea Conakry";
    },
    get$gwCountryDisplayName() {
      return "Guinea-Bissau";
    },
    get$gyCountryDisplayName() {
      return "Guyana";
    },
    get$htCountryDisplayName() {
      return "Haiti";
    },
    get$hmCountryDisplayName() {
      return "Heard Island and McDonald Islands";
    },
    get$hnCountryDisplayName() {
      return "Honduras";
    },
    get$hkCountryDisplayName() {
      return "Hong Kong";
    },
    get$huCountryDisplayName() {
      return "Hungary";
    },
    get$isCountryDisplayName() {
      return "Iceland";
    },
    get$inCountryDisplayName() {
      return "India";
    },
    get$idCountryDisplayName() {
      return "Indonesia";
    },
    get$irCountryDisplayName() {
      return "Iran";
    },
    get$iqCountryDisplayName() {
      return "Iraq";
    },
    get$ieCountryDisplayName() {
      return "Ireland";
    },
    get$imCountryDisplayName() {
      return "Isle of Man";
    },
    get$ilCountryDisplayName() {
      return "Israel";
    },
    get$itCountryDisplayName() {
      return "Italy";
    },
    get$jmCountryDisplayName() {
      return "Jamaica";
    },
    get$jpCountryDisplayName() {
      return "Japan";
    },
    get$jeCountryDisplayName() {
      return "Jersey";
    },
    get$joCountryDisplayName() {
      return "Jordan";
    },
    get$kzCountryDisplayName() {
      return "Kazakhstan";
    },
    get$keCountryDisplayName() {
      return "Kenya";
    },
    get$kiCountryDisplayName() {
      return "Kiribati";
    },
    get$xkCountryDisplayName() {
      return "Kosovo";
    },
    get$kwCountryDisplayName() {
      return "Kuwait";
    },
    get$kgCountryDisplayName() {
      return "Kyrgyzstan";
    },
    get$laCountryDisplayName() {
      return "Laos";
    },
    get$lvCountryDisplayName() {
      return "Latvia";
    },
    get$lbCountryDisplayName() {
      return "Lebanon";
    },
    get$lsCountryDisplayName() {
      return "Lesotho";
    },
    get$lrCountryDisplayName() {
      return "Liberia";
    },
    get$lyCountryDisplayName() {
      return "Libya";
    },
    get$liCountryDisplayName() {
      return "Liechtenstein";
    },
    get$ltCountryDisplayName() {
      return "Lithuania";
    },
    get$luCountryDisplayName() {
      return "Luxembourg";
    },
    get$moCountryDisplayName() {
      return "Macau";
    },
    get$mkCountryDisplayName() {
      return "Macedonia";
    },
    get$mgCountryDisplayName() {
      return "Madagascar";
    },
    get$mwCountryDisplayName() {
      return "Malawi";
    },
    get$myCountryDisplayName() {
      return "Malaysia";
    },
    get$mvCountryDisplayName() {
      return "Maldives";
    },
    get$mlCountryDisplayName() {
      return "Mali";
    },
    get$mtCountryDisplayName() {
      return "Malta";
    },
    get$mhCountryDisplayName() {
      return "Marshall Islands";
    },
    get$mqCountryDisplayName() {
      return "Martinique";
    },
    get$mrCountryDisplayName() {
      return "Mauritania";
    },
    get$muCountryDisplayName() {
      return "Mauritius";
    },
    get$ytCountryDisplayName() {
      return "Mayotte";
    },
    get$mxCountryDisplayName() {
      return "Mexico";
    },
    get$fmCountryDisplayName() {
      return "Micronesia";
    },
    get$mdCountryDisplayName() {
      return "Moldova";
    },
    get$mcCountryDisplayName() {
      return "Monaco";
    },
    get$mnCountryDisplayName() {
      return "Mongolia";
    },
    get$meCountryDisplayName() {
      return "Montenegro";
    },
    get$msCountryDisplayName() {
      return "Montserrat";
    },
    get$maCountryDisplayName() {
      return "Morocco";
    },
    get$mzCountryDisplayName() {
      return "Mozambique";
    },
    get$mmCountryDisplayName() {
      return "Myanmar (Burma)";
    },
    get$naCountryDisplayName() {
      return "Namibia";
    },
    get$nrCountryDisplayName() {
      return "Nauru";
    },
    get$npCountryDisplayName() {
      return "Nepal";
    },
    get$nlCountryDisplayName() {
      return "Netherlands";
    },
    get$ncCountryDisplayName() {
      return "New Caledonia";
    },
    get$nzCountryDisplayName() {
      return "New Zealand";
    },
    get$niCountryDisplayName() {
      return "Nicaragua";
    },
    get$neCountryDisplayName() {
      return "Niger";
    },
    get$ngCountryDisplayName() {
      return "Nigeria";
    },
    get$nuCountryDisplayName() {
      return "Niue";
    },
    get$nfCountryDisplayName() {
      return "Norfolk Island";
    },
    get$kpCountryDisplayName() {
      return "North Korea";
    },
    get$mpCountryDisplayName() {
      return "Northern Mariana Islands";
    },
    get$noCountryDisplayName() {
      return "Norway";
    },
    get$omCountryDisplayName() {
      return "Oman";
    },
    get$pkCountryDisplayName() {
      return "Pakistan";
    },
    get$pwCountryDisplayName() {
      return "Palau";
    },
    get$psCountryDisplayName() {
      return "Palestinian Territories";
    },
    get$paCountryDisplayName() {
      return "Panama";
    },
    get$pgCountryDisplayName() {
      return "Papua New Guinea";
    },
    get$pyCountryDisplayName() {
      return "Paraguay";
    },
    get$peCountryDisplayName() {
      return "Peru";
    },
    get$phCountryDisplayName() {
      return "Philippines";
    },
    get$plCountryDisplayName() {
      return "Poland";
    },
    get$ptCountryDisplayName() {
      return "Portugal";
    },
    get$prCountryDisplayName() {
      return "Puerto Rico";
    },
    get$qaCountryDisplayName() {
      return "Qatar";
    },
    get$reCountryDisplayName() {
      return "R\xe9union";
    },
    get$roCountryDisplayName() {
      return "Romania";
    },
    get$ruCountryDisplayName() {
      return "Russia";
    },
    get$rwCountryDisplayName() {
      return "Rwanda";
    },
    get$blCountryDisplayName() {
      return "Saint Barth\xe9lemy";
    },
    get$shCountryDisplayName() {
      return "Saint Helena";
    },
    get$knCountryDisplayName() {
      return "St. Kitts";
    },
    get$lcCountryDisplayName() {
      return "St. Lucia";
    },
    get$mfCountryDisplayName() {
      return "Saint Martin";
    },
    get$pmCountryDisplayName() {
      return "Saint Pierre and Miquelon";
    },
    get$vcCountryDisplayName() {
      return "St. Vincent";
    },
    get$wsCountryDisplayName() {
      return "Samoa";
    },
    get$smCountryDisplayName() {
      return "San Marino";
    },
    get$stCountryDisplayName() {
      return "S\xe3o Tom\xe9 and Pr\xedncipe";
    },
    get$saCountryDisplayName() {
      return "Saudi Arabia";
    },
    get$snCountryDisplayName() {
      return "Senegal";
    },
    get$rsCountryDisplayName() {
      return "Serbia";
    },
    get$scCountryDisplayName() {
      return "Seychelles";
    },
    get$slCountryDisplayName() {
      return "Sierra Leone";
    },
    get$sgCountryDisplayName() {
      return "Singapore";
    },
    get$sxCountryDisplayName() {
      return "Sint Maarten";
    },
    get$skCountryDisplayName() {
      return "Slovakia";
    },
    get$siCountryDisplayName() {
      return "Slovenia";
    },
    get$sbCountryDisplayName() {
      return "Solomon Islands";
    },
    get$soCountryDisplayName() {
      return "Somalia";
    },
    get$zaCountryDisplayName() {
      return "South Africa";
    },
    get$gsCountryDisplayName() {
      return "South Georgia and the South Sandwich Islands";
    },
    get$krCountryDisplayName() {
      return "South Korea";
    },
    get$ssCountryDisplayName() {
      return "South Sudan";
    },
    get$esCountryDisplayName() {
      return "Spain";
    },
    get$lkCountryDisplayName() {
      return "Sri Lanka";
    },
    get$sdCountryDisplayName() {
      return "Sudan";
    },
    get$srCountryDisplayName() {
      return "Suriname";
    },
    get$sjCountryDisplayName() {
      return "Svalbard and Jan Mayen";
    },
    get$seCountryDisplayName() {
      return "Sweden";
    },
    get$chCountryDisplayName() {
      return "Switzerland";
    },
    get$syCountryDisplayName() {
      return "Syria";
    },
    get$twCountryDisplayName() {
      return "Taiwan";
    },
    get$tjCountryDisplayName() {
      return "Tajikistan";
    },
    get$tzCountryDisplayName() {
      return "Tanzania";
    },
    get$thCountryDisplayName() {
      return "Thailand";
    },
    get$tgCountryDisplayName() {
      return "Togo";
    },
    get$tkCountryDisplayName() {
      return "Tokelau";
    },
    get$toCountryDisplayName() {
      return "Tonga";
    },
    get$ttCountryDisplayName() {
      return "Trinidad/Tobago";
    },
    get$tnCountryDisplayName() {
      return "Tunisia";
    },
    get$trCountryDisplayName() {
      return "Turkey";
    },
    get$tmCountryDisplayName() {
      return "Turkmenistan";
    },
    get$tcCountryDisplayName() {
      return "Turks and Caicos Islands";
    },
    get$tvCountryDisplayName() {
      return "Tuvalu";
    },
    get$viCountryDisplayName() {
      return "U.S. Virgin Islands";
    },
    get$ugCountryDisplayName() {
      return "Uganda";
    },
    get$uaCountryDisplayName() {
      return "Ukraine";
    },
    get$aeCountryDisplayName() {
      return "United Arab Emirates";
    },
    get$gbCountryDisplayName() {
      return "United Kingdom";
    },
    get$usCountryDisplayName() {
      return "United States";
    },
    get$uyCountryDisplayName() {
      return "Uruguay";
    },
    get$uzCountryDisplayName() {
      return "Uzbekistan";
    },
    get$vuCountryDisplayName() {
      return "Vanuatu";
    },
    get$vaCountryDisplayName() {
      return "Vatican City";
    },
    get$veCountryDisplayName() {
      return "Venezuela";
    },
    get$vnCountryDisplayName() {
      return "Vietnam";
    },
    get$wfCountryDisplayName() {
      return "Wallis and Futuna";
    },
    get$ehCountryDisplayName() {
      return "Western Sahara";
    },
    get$yeCountryDisplayName() {
      return "Yemen";
    },
    get$zmCountryDisplayName() {
      return "Zambia";
    },
    get$zwCountryDisplayName() {
      return "Zimbabwe";
    },
    get$pay() {
      return "Pay";
    },
    invitedToSpace$2(space, user) {
      return user + " has invited you to join a course: " + space + "! Do you wish to accept?";
    },
    get$youreInvited() {
      return "\ud83d\udce9 You're invited!";
    },
    invitedToChat$2($name, user) {
      return user + " has invited you to join a chat: " + $name + "! Do you wish to accept?";
    },
    get$monthlySubscription() {
      return "Monthly";
    },
    get$yearlySubscription() {
      return "Yearly";
    },
    get$defaultSubscription() {
      return "Pangea Chat Subscription";
    },
    get$freeTrial() {
      return "Free Trial";
    },
    get$noDataFound() {
      return "No data found";
    },
    get$blurMeansTranslateTitle() {
      return "Why is the message blurred?";
    },
    get$blurMeansTranslateBody() {
      return "While Immersion Mode is on, messages that are sent in your base language will be blurred while Pangea Bot translates them to your target language. Immersion Mode can be toggled in individual and course settings.";
    },
    get$bestCorrectionFeedback() {
      return "That's correct!";
    },
    get$distractorFeedback() {
      return "That's not quite right.";
    },
    get$bestAnswerFeedback() {
      return "That's correct!";
    },
    get$definitionDefaultPrompt() {
      return "What does this word mean?";
    },
    get$practiceDefaultPrompt() {
      return "What is the best answer?";
    },
    get$correctionDefaultPrompt() {
      return "What is the best replacement?";
    },
    get$reportToTeacher() {
      return "Who do you want to report this message to?";
    },
    reportMessageTitle$3(reportingUserId, reportedUserId, roomName) {
      return reportingUserId + " has reported a message from " + reportedUserId + " in the chat " + roomName;
    },
    reportMessageBody$2(reportedMessage, reason) {
      return "Message: " + reportedMessage + "\nReason: " + reason;
    },
    get$noTeachersFound() {
      return "No teachers found to report to";
    },
    trialExpiration$1(expiration) {
      return "Your free trial expires on " + expiration;
    },
    get$freeTrialDesc() {
      return "New users recieve a one week free trial of Pangea Chat";
    },
    get$activateTrial() {
      return "Free 7-Day Trial";
    },
    get$successfullySubscribed() {
      return "You have successfully subscribed!";
    },
    get$clickToManageSubscription() {
      return "Click here to manage your subscription.";
    },
    pleaseChooseAtLeastChars$1(min) {
      return "Please choose at least " + min + " characters.";
    },
    get$pleaseEnterValidEmail() {
      return "Please enter a valid email address.";
    },
    get$pleaseChooseAUsername() {
      return "Please choose a username";
    },
    get$listen() {
      return "Listen";
    },
    get$trialPeriodExpired() {
      return "Your trial period has expired";
    },
    get$subscribedToUnlockTools() {
      return "Subscribe to unlock interactive translation and grammar checking, audio playback, personalized practice activities, and learning analytics!";
    },
    get$translationTooltip() {
      return "Translate";
    },
    get$speechToTextTooltip() {
      return "Transcript";
    },
    get$kickBotWarning() {
      return "Kicking Pangea Bot will remove the conversation bot from this chat.";
    },
    get$refresh(_) {
      return "Refresh";
    },
    get$botConfig() {
      return "Bot and activity settings";
    },
    get$botConfigNoPermissionTitle() {
      return "No permission";
    },
    get$botConfigNoPermissionMessage() {
      return "Contact room admin to change bot configuration";
    },
    get$conversationBotStatus() {
      return "Invite bot";
    },
    get$updatePhoneOS() {
      return "You may need to update your device's OS version.";
    },
    get$autoIGCToolName() {
      return "Run Pangea writing assistance automatically";
    },
    get$autoIGCToolDescription() {
      return "Automatically run Pangea Chat grammar and translation writing assistance before sending my message.";
    },
    get$tooltipInstructionsTitle() {
      return "Not sure what that does?";
    },
    get$tooltipInstructionsBrowserBody() {
      return "Hover over items to view tooltips.";
    },
    get$chatCapacity() {
      return "Chat capacity";
    },
    get$roomFull() {
      return "This room is already at capacity.";
    },
    get$chatCapacityHasBeenChanged() {
      return "Chat capacity changed";
    },
    chatCapacitySetTooLow$1(count) {
      return "Chat capacity must be at least " + count + ".";
    },
    get$chatCapacityExplanation() {
      return "Chat capacity limits the number of members allowed in a chat.";
    },
    get$enterNumber() {
      return "Please enter a whole number value.";
    },
    get$buildTranslation() {
      return "Build your translation from the choices above";
    },
    get$practice() {
      return "Practice";
    },
    get$noLanguagesSet() {
      return "No languages set";
    },
    get$speechToTextBody() {
      return "For voice messages, you can see a transcript as well as the speaker's Words Per Minute score.";
    },
    get$versionNotFound() {
      return "Version Not Found";
    },
    get$fetchingVersion() {
      return "Fetching version...";
    },
    get$versionFetchError() {
      return "Error fetching version";
    },
    versionText$2(version, buildNumber) {
      return "Version: " + version + "+" + buildNumber;
    },
    get$l1TranslationBody() {
      return "Messages in your base language will not be translated.";
    },
    get$deleteSubscriptionWarningTitle() {
      return "You have an active subscription";
    },
    get$deleteSubscriptionWarningBody() {
      return "Deleting your account will not automatically cancel your subscription.";
    },
    get$manageSubscription() {
      return "Manage Subscription";
    },
    get$error520Title() {
      return "Please try again.";
    },
    get$error520Desc() {
      return "Sorry, we could not understand your message...";
    },
    get$level(_) {
      return "Level";
    },
    get$translationChoicesBody() {
      return "Click and hold an option for a hint.";
    },
    get$grammar() {
      return "Grammar";
    },
    get$contactHasBeenInvitedToTheChat() {
      return "Contact has been invited to the chat";
    },
    get$inviteChat() {
      return "\ud83d\udce8 Invite chat";
    },
    get$chatName() {
      return "Chat name";
    },
    get$clickTheWordAgainToDeselect() {
      return "Click the selected word to deselect it.";
    },
    get$l2SupportNa() {
      return "Not Available";
    },
    get$l2SupportAlpha() {
      return "Alpha";
    },
    get$l2SupportBeta() {
      return "Beta";
    },
    get$l2SupportFull() {
      return "Full";
    },
    get$missingVoiceTitle() {
      return "Missing voice";
    },
    get$voiceNotAvailable() {
      return "You don't have a voice installed for this language.";
    },
    get$playAudio() {
      return "Play";
    },
    get$stop(_) {
      return "Stop";
    },
    get$grammarCopyPOSsconj() {
      return "Subordinating Conjunction";
    },
    get$grammarCopyPOSnum() {
      return "Number";
    },
    get$grammarCopyPOSverb() {
      return "Verb";
    },
    get$grammarCopyPOSaffix() {
      return "Affix";
    },
    get$grammarCopyPOSpart() {
      return "Particle";
    },
    get$grammarCopyPOSadj() {
      return "Adjective";
    },
    get$grammarCopyPOScconj() {
      return "Coordinating Conjunction";
    },
    get$grammarCopyPOSpunct() {
      return "Punctuation";
    },
    get$grammarCopyPOSadv() {
      return "Adverb";
    },
    get$grammarCopyPOSaux() {
      return "Auxiliary";
    },
    get$grammarCopyPOSspace() {
      return "Space";
    },
    get$grammarCopyPOSsym() {
      return "Symbol";
    },
    get$grammarCopyPOSdet() {
      return "Determiner";
    },
    get$grammarCopyPOSpron() {
      return "Pronoun";
    },
    get$grammarCopyPOSadp() {
      return "Adposition";
    },
    get$grammarCopyPOSpropn() {
      return "Proper Noun";
    },
    get$grammarCopyPOSnoun() {
      return "Noun";
    },
    get$grammarCopyPOSintj() {
      return "Interjection";
    },
    get$grammarCopyPOSx() {
      return "Other";
    },
    get$grammarCopyGENDERfem() {
      return "Feminine";
    },
    get$grammarCopyPERSON2() {
      return "Second Person";
    },
    get$grammarCopyMOODimp() {
      return "Imperative";
    },
    get$grammarCopyPUNCTTYPEqest() {
      return "Question";
    },
    get$grammarCopyASPECTperf() {
      return "Perfect";
    },
    get$grammarCopyCASEaccnom() {
      return "Accusative, Nominative";
    },
    get$grammarCopyCASEobl() {
      return "Oblique";
    },
    get$grammarCopyVOICEact() {
      return "Active";
    },
    get$grammarCopyPUNCTTYPEbrck() {
      return "Bracket";
    },
    get$grammarCopyNOUNTYPEart() {
      return "Article";
    },
    get$grammarCopyNUMBERsing() {
      return "Singular";
    },
    get$grammarCopyGENDERmasc() {
      return "Masculine";
    },
    get$grammarCopyVERBTYPEmod() {
      return "Modal";
    },
    get$grammarCopyADVTYPEadverbial() {
      return "Adverbial";
    },
    get$grammarCopyTENSEperi() {
      return "Periphrastic";
    },
    get$grammarCopyNUMFORMdigit() {
      return "Digit";
    },
    get$grammarCopyNOUNTYPEnot_proper() {
      return "Not Proper";
    },
    get$grammarCopyNUMTYPEcard() {
      return "Cardinal";
    },
    get$grammarCopyNOUNTYPEprop() {
      return "Proper";
    },
    get$grammarCopyPUNCTTYPEdash() {
      return "Dash";
    },
    get$grammarCopyPUNCTTYPEyes() {
      return "Yes";
    },
    get$grammarCopyPUNCTTYPEsemi() {
      return "Semicolon";
    },
    get$grammarCopyPUNCTTYPEcomm() {
      return "Comma";
    },
    get$grammarCopyMOODcnd() {
      return "Conditional";
    },
    get$grammarCopyCASEacc() {
      return "Accusative";
    },
    get$grammarCopyPARTTYPEpart() {
      return "Partitive";
    },
    get$grammarCopyTENSEpast() {
      return "Past";
    },
    get$grammarCopyDEGREEsup() {
      return "Superlative";
    },
    get$grammarCopyPUNCTTYPEcolo() {
      return "Colon";
    },
    get$grammarCopyPERSON3() {
      return "Third Person";
    },
    get$grammarCopyNUMBERplur() {
      return "Plural";
    },
    get$grammarCopyPRONTYPEnpr() {
      return "Proper Noun";
    },
    get$grammarCopyPRONTYPEinterrogative() {
      return "Interrogative";
    },
    get$grammarCopyPOLITEinfm() {
      return "Informal";
    },
    get$grammarCopyADVTYPEtim() {
      return "Time";
    },
    get$grammarCopyPOLARITYneg() {
      return "Negative";
    },
    get$grammarCopyNUMTYPEtot() {
      return "Total";
    },
    get$grammarCopyADVTYPEadnomial() {
      return "Adnominal";
    },
    get$grammarCopyASPECTprog() {
      return "Progressive";
    },
    get$grammarCopyMOODsub() {
      return "Subjunctive";
    },
    get$grammarCopyVERBFORMcomplementive() {
      return "Complementive";
    },
    get$grammarCopyCASEnom() {
      return "Nominative";
    },
    get$grammarCopyTENSEfut() {
      return "Future";
    },
    get$grammarCopyCASEdat() {
      return "Dative";
    },
    get$grammarCopyTENSEpres() {
      return "Present";
    },
    get$grammarCopyGENDERneut() {
      return "Neuter";
    },
    get$grammarCopyPRONTYPErel() {
      return "Relative";
    },
    get$grammarCopyVERBFORMfinalEnding() {
      return "Final Ending";
    },
    get$grammarCopyPRONTYPEdem() {
      return "Demonstrative";
    },
    get$grammarCopyPREPCASEpre() {
      return "Prepositional";
    },
    get$grammarCopyVERBFORMfin() {
      return "Finite";
    },
    get$grammarCopyDEGREEpos() {
      return "Positive";
    },
    get$grammarCopyPUNCTTYPEquot() {
      return "Quotation";
    },
    get$grammarCopyVERBFORMger() {
      return "Gerund";
    },
    get$grammarCopyVOICEpass() {
      return "Passive";
    },
    get$grammarCopyCASEgen() {
      return "Genitive";
    },
    get$grammarCopyTENSEprs() {
      return "Present";
    },
    get$grammarCopyDEFINITEdef() {
      return "Definite";
    },
    get$grammarCopyNUMTYPEord() {
      return "Ordinal";
    },
    get$grammarCopyCASEins() {
      return "Instrumental";
    },
    get$grammarCopyVERBFORMinf() {
      return "Infinitive";
    },
    get$grammarCopyVERBFORMaux() {
      return "Auxiliary";
    },
    get$grammarCopyNUMFORMlong() {
      return "Long";
    },
    get$grammarCopyCASEloc() {
      return "Locative";
    },
    get$grammarCopyMOODind() {
      return "Indicative";
    },
    get$grammarCopyDEGREEcmp() {
      return "Comparative";
    },
    get$grammarCopyCASErelativeCase() {
      return "Relative";
    },
    get$grammarCopyPUNCTTYPEexcl() {
      return "Exclamative";
    },
    get$grammarCopyPERSON1() {
      return "First Person";
    },
    get$grammarCopyPUNCTSIDEini() {
      return "Initial";
    },
    get$grammarCopyGENDERperson() {
      return "Person";
    },
    get$grammarCopyFOREIGNyes() {
      return "Foreign";
    },
    get$grammarCopyVOICEvoice() {
      return "Voice";
    },
    get$grammarCopyVERBTYPEverbType() {
      return "Verb";
    },
    get$grammarCopyPOSSpass() {
      return "Possessive";
    },
    get$grammarCopyPREPCASEprepCase() {
      return "Prepositional";
    },
    get$grammarCopyNUMTYPEnumType() {
      return "Numeral";
    },
    get$grammarCopyNOUNTYPEnounType() {
      return "Noun";
    },
    get$grammarCopyREFLEXreflex() {
      return "Reflexive";
    },
    get$grammarCopyPRONTYPEpronType() {
      return "Pronoun";
    },
    get$grammarCopyPUNCTSIDEpunctSide() {
      return "Punctuation Side";
    },
    get$grammarCopyVERBFORMverbForm() {
      return "Verb";
    },
    get$grammarCopyGENDERgender() {
      return "Gender";
    },
    get$grammarCopyMOODmood() {
      return "Mood";
    },
    get$grammarCopyASPECTaspect() {
      return "Aspect";
    },
    get$grammarCopyPUNCTTYPEpunctType() {
      return "Punctuation";
    },
    get$grammarCopyTENSEtense() {
      return "Tense";
    },
    get$grammarCopyDEGREEdegree() {
      return "Degree";
    },
    get$grammarCopyPOLITEpolite() {
      return "Politeness";
    },
    get$grammarCopyADVTYPEadvType() {
      return "Adverb";
    },
    get$grammarCopyNUMFORMnumber() {
      return "Number";
    },
    get$grammarCopyCONJTYPEconjType() {
      return "Conjunction";
    },
    get$grammarCopyPOLARITYpolarity() {
      return "Polarity";
    },
    get$grammarCopyCASEcase() {
      return "Case";
    },
    get$grammarCopyDEFINITEdefinite() {
      return "Definiteness";
    },
    get$grammarCopyNUMFORMnumForm() {
      return "Numeral";
    },
    get$grammarCopyPRONTYPEadn() {
      return "Adnominal";
    },
    get$grammarCopyVOCvoc() {
      return "Vocative";
    },
    get$grammarCopyCMPLcmpl() {
      return "Complementizer";
    },
    get$grammarCopyADVadv() {
      return "Adverbial";
    },
    get$grammarCopyMOODjus() {
      return "Jussive";
    },
    get$grammarCopyGENDERcom() {
      return "Common";
    },
    get$grammarCopyREFLEXrflx() {
      return "Reflexive";
    },
    get$grammarCopyPARTTYPEpar() {
      return "Partitive";
    },
    get$grammarCopySPCspc() {
      return "Specific";
    },
    get$grammarCopyTENSEpqp() {
      return "Pluperfect";
    },
    get$grammarCopyREFLEXref() {
      return "Reflexive";
    },
    get$grammarCopyPUNCTTYPEnshrt() {
      return "Short";
    },
    get$grammarCopyNUMBERdual() {
      return "Dual";
    },
    get$grammarCopyNUMFORMlng() {
      return "Long";
    },
    get$grammarCopyVOICEmid() {
      return "Middle";
    },
    get$grammarCopyINTRELintRel() {
      return "Interrogative, Relative";
    },
    get$grammarCopyINTint() {
      return "Interrogative";
    },
    get$grammarCopyVOICEcaus() {
      return "Causative";
    },
    get$grammarCopyUnknown() {
      return "Unknown";
    },
    get$grammarCopyEVIDENTevident() {
      return "Evidentiality";
    },
    get$grammarCopyNUMFORMnumberPsor() {
      return "Possessor's Number";
    },
    get$grammarCopyASPECThab() {
      return "Habitual";
    },
    get$grammarCopyCASEabl() {
      return "Ablative";
    },
    get$grammarCopyCASEall() {
      return "Allative";
    },
    get$grammarCopyCASEess() {
      return "Essive";
    },
    get$grammarCopyCASEtra() {
      return "Translative";
    },
    get$grammarCopyCASEequ() {
      return "Equative";
    },
    get$grammarCopyCASEdis() {
      return "Distributive";
    },
    get$grammarCopyCASEabs() {
      return "Absolutive";
    },
    get$grammarCopyCASEerg() {
      return "Ergative";
    },
    get$grammarCopyCASEcau() {
      return "Causal";
    },
    get$grammarCopyCASEben() {
      return "Benefactive";
    },
    get$grammarCopyCASEtem() {
      return "Temporal";
    },
    get$grammarCopyCONJTYPEcoord() {
      return "Coordinating";
    },
    get$grammarCopyDEFINITEcons() {
      return "Construct State";
    },
    get$grammarCopyDEGREEabs() {
      return "Absolute Degree";
    },
    get$grammarCopyEVIDENTfh() {
      return "Factual Evidentiality";
    },
    get$grammarCopyEVIDENTnfh() {
      return "Non-factual Evidentiality";
    },
    get$grammarCopyMOODopt() {
      return "Optative";
    },
    get$grammarCopyMOODadm() {
      return "Admirative";
    },
    get$grammarCopyMOODdes() {
      return "Desiderative";
    },
    get$grammarCopyMOODnec() {
      return "Necessitative";
    },
    get$grammarCopyMOODpot() {
      return "Potential";
    },
    get$grammarCopyMOODprp() {
      return "Propositive";
    },
    get$grammarCopyMOODqot() {
      return "Quotative";
    },
    get$grammarCopyNUMFORMword() {
      return "Word Form";
    },
    get$grammarCopyNUMFORMroman() {
      return "Roman Numeral";
    },
    get$grammarCopyNUMFORMletter() {
      return "Letter Form";
    },
    get$grammarCopyNUMTYPEmult() {
      return "Multiplicative";
    },
    get$grammarCopyNUMTYPEfrac() {
      return "Fractional";
    },
    get$grammarCopyNUMTYPEsets() {
      return "Set";
    },
    get$grammarCopyNUMTYPErange() {
      return "Range";
    },
    get$grammarCopyNUMTYPEdist() {
      return "Distributive";
    },
    get$grammarCopyNUMBERtri() {
      return "Trial";
    },
    get$grammarCopyNUMBERpauc() {
      return "Paucal";
    },
    get$grammarCopyNUMBERgrpa() {
      return "Greater Paucal";
    },
    get$grammarCopyNUMBERgrpl() {
      return "Greater Plural";
    },
    get$grammarCopyNUMBERinv() {
      return "Inverse";
    },
    get$grammarCopyPERSON0() {
      return "Zero";
    },
    get$grammarCopyPERSON4() {
      return "Fourth";
    },
    get$grammarCopyPOLITEform() {
      return "Formal";
    },
    get$grammarCopyPOLITEelev() {
      return "Elevated";
    },
    get$grammarCopyPOLITEhumb() {
      return "Humble";
    },
    get$grammarCopyPRONTYPEemp() {
      return "Emphatic";
    },
    get$grammarCopyPRONTYPEexc() {
      return "Exclamative";
    },
    get$grammarCopyPRONTYPErcp() {
      return "Reciprocal";
    },
    get$grammarCopyPRONTYPEintRelPronType() {
      return "Interrogative-Relative";
    },
    get$grammarCopyTENSEaor() {
      return "Aorist";
    },
    get$grammarCopyTENSEeps() {
      return "Epistemic";
    },
    get$grammarCopyTENSEprosp() {
      return "Prospective";
    },
    get$grammarCopyVERBFORMpart() {
      return "Participle";
    },
    get$grammarCopyVERBFORMconv() {
      return "Converb";
    },
    get$grammarCopyVERBFORMvnoun() {
      return "Verbal Noun";
    },
    get$grammarCopyVOICEantip() {
      return "Antipassive";
    },
    get$grammarCopyVOICEcauVoice() {
      return "Causative";
    },
    get$grammarCopyVOICedir() {
      return "Direct";
    },
    get$grammarCopyVOICEinvVoice() {
      return "Inverse";
    },
    get$grammarCopyVOICErcpVoice() {
      return "Reciprocal";
    },
    get$grammarCopyPOS() {
      return "Part of Speech";
    },
    get$grammarCopyGENDER() {
      return "Gender";
    },
    get$grammarCopyPERSON() {
      return "Person";
    },
    get$grammarCopyMOOD() {
      return "Mood";
    },
    get$grammarCopyPUNCTTYPE() {
      return "Punctuation Type";
    },
    get$grammarCopyASPECT() {
      return "Aspect";
    },
    get$grammarCopyCASE() {
      return "Case";
    },
    get$grammarCopyVOICE() {
      return "Voice";
    },
    get$grammarCopyNOUNTYPE() {
      return "Noun Type";
    },
    get$grammarCopyVERBTYPE() {
      return "Verb Type";
    },
    get$grammarCopyADVTYPE() {
      return "Adverb Type";
    },
    get$grammarCopyNUMFORM() {
      return "Numeral Form";
    },
    get$grammarCopyNUMTYPE() {
      return "Numeral Type";
    },
    get$grammarCopyNUMBER() {
      return "Number";
    },
    get$grammarCopyDEFINITE() {
      return "Definiteness";
    },
    get$grammarCopyDEGREE() {
      return "Degree";
    },
    get$grammarCopyEVIDENT() {
      return "Evidentiality";
    },
    get$grammarCopyFOREIGN() {
      return "Foreign";
    },
    get$grammarCopyPOLARITY() {
      return "Polarity";
    },
    get$grammarCopyPOLITE() {
      return "Politeness";
    },
    get$grammarCopyPREPCASE() {
      return "Prepositional Case";
    },
    get$grammarCopyPRONTYPE() {
      return "Pronoun Type";
    },
    get$grammarCopyPUNCTSIDE() {
      return "Punctuation Side";
    },
    get$grammarCopyREFLEX() {
      return "Reflexive";
    },
    get$grammarCopyTENSE() {
      return "Tense";
    },
    get$grammarCopyVERBFORM() {
      return "Verb Form";
    },
    get$grammarCopyCONJTYPE() {
      return "Conjunction Type";
    },
    get$grammarCopyUNKNOWN() {
      return "Unknown";
    },
    get$grammarCopyNUMBERPSOR() {
      return "Possessor's Number";
    },
    get$grammarCopyPOSS() {
      return "Possessive";
    },
    get$grammarCopyASPECTimp() {
      return "Imperfective Aspect";
    },
    get$grammarCopyCASEvoc() {
      return "Vocative";
    },
    get$grammarCopyCASEcom() {
      return "Comitative";
    },
    get$grammarCopyCASEpar() {
      return "Partitive";
    },
    get$grammarCopyCASEadv() {
      return "Adverbial";
    },
    get$grammarCopyCASEref() {
      return "Referential";
    },
    get$grammarCopyCASErel() {
      return "Relative";
    },
    get$grammarCopyCASEsub() {
      return "Subessive";
    },
    get$grammarCopyCASEsup() {
      return "Superessive";
    },
    get$grammarCopyCASEaccdat() {
      return "Accusative-Dative";
    },
    get$grammarCopyCASEpre() {
      return "Prepositional";
    },
    get$grammarCopyCONJTYPEsub() {
      return "Subordinating";
    },
    get$grammarCopyCONJTYPEcmp() {
      return "Comparative";
    },
    get$grammarCopyDEFINITEind() {
      return "Indefinite";
    },
    get$grammarCopyMOODint() {
      return "Interrogative Mood";
    },
    get$grammarCopyNOUNTYPEcomm() {
      return "Common Noun";
    },
    get$grammarCopyNUMBERPSORsing() {
      return "Possessor's Singular";
    },
    get$grammarCopyNUMBERPSORplur() {
      return "Possessor's Plural";
    },
    get$grammarCopyNUMBERPSORdual() {
      return "Possessor's Dual";
    },
    get$grammarCopyPOLARITYpos() {
      return "Positive Polarity";
    },
    get$grammarCopyPOSSyes() {
      return "Possessive";
    },
    get$grammarCopyPREPCASEnpr() {
      return "Non-prepositional";
    },
    get$grammarCopyPRONTYPEprs() {
      return "Personal";
    },
    get$grammarCopyPRONTYPEint() {
      return "Interrogative";
    },
    get$grammarCopyPRONTYPEtot() {
      return "Total";
    },
    get$grammarCopyPRONTYPEneg() {
      return "Negative";
    },
    get$grammarCopyPRONTYPEart() {
      return "Article";
    },
    get$grammarCopyPRONTYPEind() {
      return "Indefinite";
    },
    get$grammarCopyPRONTYPEintrel() {
      return "Interrogative-Relative";
    },
    get$grammarCopyPUNCTSIDEfin() {
      return "Final Punctuation";
    },
    get$grammarCopyPUNCTTYPEperi() {
      return "Period";
    },
    get$grammarCopyREFLEXyes() {
      return "Reflexive";
    },
    get$grammarCopyTENSEimp() {
      return "Imperfect";
    },
    get$grammarCopyVERBFORMsup() {
      return "Supine";
    },
    get$grammarCopyVERBFORMadn() {
      return "Adnominal";
    },
    get$grammarCopyVERBFORMlng() {
      return "Long";
    },
    get$grammarCopyVERBFORMshrt() {
      return "Short";
    },
    get$grammarCopyVERBTYPEcaus() {
      return "Causative Verb";
    },
    get$grammarCopyVOICEcau() {
      return "Causative";
    },
    get$grammarCopyVOICEdir() {
      return "Direct";
    },
    get$grammarCopyVOICEinv() {
      return "Inverse";
    },
    get$grammarCopyVOICErcp() {
      return "Reciprocal";
    },
    get$enterLanguageLevel() {
      return "Please enter a language level";
    },
    get$other() {
      return "Other";
    },
    levelShort$1(level) {
      return "LVL " + level;
    },
    get$clickBestOption() {
      return "Choose the best options to translate your message!";
    },
    get$completeActivitiesToUnlock() {
      return "Complete at least one activity to unlock the translation!";
    },
    get$downloadGroupText() {
      return "Download group text";
    },
    get$notificationsOn() {
      return "Notifications on";
    },
    get$notificationsOff() {
      return "Notifications off";
    },
    get$createChatAndInviteUsers() {
      return "Create chat and invite users";
    },
    get$updatedNewSpaceDescription() {
      return "Courses allow you to consolidate your chats and build private or public communities.";
    },
    get$joinWithCode() {
      return "Join with code";
    },
    get$updateNow() {
      return "Update Now";
    },
    get$updateLater() {
      return "Later";
    },
    get$constructUseWaDesc() {
      return "Used without help";
    },
    get$constructUseGaDesc() {
      return "Grammar assistance";
    },
    get$constructUseTaDesc() {
      return "Translation assistance";
    },
    get$constructUseUnkDesc() {
      return "Unknown";
    },
    get$constructUseCorITDesc() {
      return "Correct in translation";
    },
    get$constructUseIgnITDesc() {
      return "Ignored in translation";
    },
    get$constructUseIncITDesc() {
      return "Incorrect in translation";
    },
    get$constructUseIgnIGCDesc() {
      return "Ignored in grammar correction";
    },
    get$constructUseCorIGCDesc() {
      return "Correct in grammar correction";
    },
    get$constructUseIncIGCDesc() {
      return "Incorrect in grammar correction";
    },
    get$constructUseCorPADesc() {
      return "Correct in word meaning activity";
    },
    get$constructUseIgnPADesc() {
      return "Ignored in word meaning activity";
    },
    get$constructUseIncPADesc() {
      return "Incorrect in word meaning activity";
    },
    get$constructUseCorWLDesc() {
      return "Correct in word listening activity";
    },
    get$constructUseIncWLDesc() {
      return "Incorrect in word listening activity";
    },
    get$constructUseIngWLDesc() {
      return "Ignored in word listening activity";
    },
    get$constructUseCorHWLDesc() {
      return "Correct in hidden word activity";
    },
    get$constructUseIncHWLDesc() {
      return "Incorrect in hidden word activity";
    },
    get$constructUseIgnHWLDesc() {
      return "Ignored in hidden word activity";
    },
    get$constructUseCorLDesc() {
      return "Correct in lemma activity";
    },
    get$constructUseIncLDesc() {
      return "Incorrect in lemma activity";
    },
    get$constructUseIgnLDesc() {
      return "Ignored in lemma activity";
    },
    get$constructUseCorMDesc() {
      return "Correct in grammar activity";
    },
    get$constructUseIncMDesc() {
      return "Incorrect in grammar activity";
    },
    get$constructUseIgnMDesc() {
      return "Ignored in grammar activity";
    },
    get$constructUseEmojiDesc() {
      return "Correct in emoji activity";
    },
    get$constructUseCollected() {
      return "Collected in chat";
    },
    get$constructUseNanDesc() {
      return "Not applicable";
    },
    xpIntoLevel$2(currentXP, maxXP) {
      return "" + currentXP + " / " + maxXP + " XP";
    },
    get$enableTTSToolName() {
      return "Enabled text-to-speech";
    },
    get$enableTTSToolDescription() {
      return "Allow the app to generate text-to-speech output for portions of text in your target language.";
    },
    get$yourUsername() {
      return "Your username";
    },
    get$yourEmail() {
      return "Your email";
    },
    get$iWantToLearn() {
      return "I want to learn";
    },
    get$pleaseEnterEmail() {
      return "Please enter a valid email address.";
    },
    get$myBaseLanguage() {
      return "My base language";
    },
    get$clickWordsInstructions() {
      return "\ud83d\udd75\ufe0f Click any word for details. \ud83e\uddd0";
    },
    get$meaningSectionHeader() {
      return "Meaning:";
    },
    get$formSectionHeader() {
      return "Forms used in chats:";
    },
    get$writingExercisesTooltip() {
      return "Writing";
    },
    get$listeningExercisesTooltip() {
      return "Listening";
    },
    get$readingExercisesTooltip() {
      return "Reading";
    },
    get$meaningNotFound() {
      return "Meaning could not be found.";
    },
    get$chooseBaseForm() {
      return "Choose the base form";
    },
    get$notTheCodeError() {
      return "Sorry, that's not the code!";
    },
    get$totalXP() {
      return "Total XP";
    },
    get$numLemmas() {
      return "Total number of lemmas";
    },
    get$numLemmasUsedCorrectly() {
      return "Number of lemmas used correctly at least once";
    },
    get$numLemmasUsedIncorrectly() {
      return "Number of lemmas used correctly 0 times";
    },
    get$numLemmasSmallXP() {
      return "Number of lemmas with 0 - 30 XP";
    },
    get$numLemmasMediumXP() {
      return "Number of lemmas with 31 - 200 XP";
    },
    get$numLemmasLargeXP() {
      return "Number of lemmas with > 200 XP";
    },
    get$numGrammarConcepts() {
      return "Number of grammar concepts";
    },
    get$listGrammarConcepts() {
      return "Grammar concepts";
    },
    get$listGrammarConceptsUsedCorrectly() {
      return "Grammar concepts used correctly in original messages at least 80% of the time";
    },
    get$listGrammarConceptsUsedIncorrectly() {
      return "Grammar concepts used correctly in original messages less than 80% of the time";
    },
    get$listGrammarConceptsUseCorrectlySystemGenerated() {
      return "Grammar concepts chosen correctly from system-generated suggestions at least 80% of the time";
    },
    get$listGrammarConceptsUseIncorrectlySystemGenerated() {
      return "Grammar concepts chosen correctly from system-generated suggestions less than 80% of the time";
    },
    get$listGrammarConceptsSmallXP() {
      return "Grammar concepts with 0-50 xp";
    },
    get$listGrammarConceptsMediumXP() {
      return "Grammar concepts with 51-200 xp";
    },
    get$listGrammarConceptsLargeXP() {
      return "Grammar concepts 201-500 xp";
    },
    get$listGrammarConceptsHugeXP() {
      return "Grammar concepts >500 xp";
    },
    get$numMessagesSent() {
      return "Number of messages sent";
    },
    get$numWordsTyped() {
      return "Number of words typed in original messages";
    },
    get$numCorrectChoices() {
      return "Number of correct words chosen from system-generated suggestions";
    },
    get$numIncorrectChoices() {
      return "Number of incorrect words chosen from system-generated suggestions";
    },
    get$commaSeparatedFile() {
      return "CSV";
    },
    get$excelFile() {
      return "Excel";
    },
    get$fileType() {
      return "File type";
    },
    get$download(_) {
      return "Download";
    },
    get$analyticsNotAvailable() {
      return "User analytics not available";
    },
    get$downloading() {
      return "Downloading...";
    },
    get$failedFetchUserAnalytics() {
      return "Failed to download user analytics";
    },
    get$downloadComplete() {
      return "Download complete!";
    },
    whatIsTheMorphTag$2(morphologicalFeature, wordForm) {
      return "What is the " + morphologicalFeature + " of '" + wordForm + "'?";
    },
    get$dataAvailable() {
      return "Data availability";
    },
    get$available(_) {
      return "Available";
    },
    get$pangeaBotIsFallible() {
      return "Pangea Bot makes mistakes too!";
    },
    whatIsMeaning$2(lemma, partOfSpeech) {
      return "What does '" + lemma + "' mean?";
    },
    get$chooseLemmaMeaningInstructionsBody() {
      return "Match meanings with the words in the message!";
    },
    get$doubleClickToEdit() {
      return "Double-click to edit.";
    },
    get$languageOfInstructionsLabel() {
      return "Language of activity instructions";
    },
    get$targetLanguageLabel() {
      return "Target language";
    },
    get$cefrLevelLabel() {
      return "CEFR level";
    },
    get$image(_) {
      return "Image";
    },
    get$activityPlannerOverviewInstructionsBody() {
      return "Choose a topic, mode, learning objective and generate an activity for the chat!";
    },
    get$constructUsePvmDesc() {
      return "Produced in voice message";
    },
    get$leaveSpaceDescription() {
      return "By leaving the course, you will leave all of the chats within it. Other users will see that you have left the course.";
    },
    get$constructUseCorMmDesc() {
      return "Correct message meaning";
    },
    get$constructUseIncMmDesc() {
      return "Incorrect message meaning";
    },
    get$constructUseIgnMmDesc() {
      return "Ignored message meaning";
    },
    get$meaning() {
      return "Meaning";
    },
    chatWith$1(displayname) {
      return "Group with " + displayname;
    },
    get$clickOnEmailLink() {
      return "Please click on the link in the email and then proceed.\n\nCheck your spam folder if the email hasn't arrived.";
    },
    get$dontForgetPassword() {
      return "Don't forget your password!";
    },
    get$enableAutocorrectToolName() {
      return "Enable device autocorrect";
    },
    get$enableAutocorrectDescription() {
      return "If your device supports the language you're learning, you can enable device autocorrect to fix common errors as you type.";
    },
    get$ttsDisbledTitle() {
      return "Text-to-speech disabled";
    },
    get$ttsDisabledBody() {
      return "You can enable text-to-speech in your learning settings";
    },
    get$noSpaceDescriptionYet() {
      return "No course description created yet.";
    },
    get$tooLargeToSend() {
      return "This message is too large to send";
    },
    get$exitWithoutSaving() {
      return "Are you sure you want to leave without saving?";
    },
    get$enableAutocorrectWarning() {
      return "Warning! Requires adding your target language keyboard";
    },
    get$leaveRoomDescription() {
      return "You're about to leave this chat. Other users will see that you have left the chat.";
    },
    get$confirmUserId() {
      return "Please confirm your Pangea Chat username in order to delete your account.";
    },
    paidSubscriptionStarts$1(startDate) {
      return "Starting " + startDate;
    },
    get$cancelInSubscriptionSettings() {
      return "\u2022 Cancel at any time in subscription settings";
    },
    get$autocorrectNotAvailable() {
      return "Unfortunately your platform is not currently supported for this feature. Stay tuned for further development!";
    },
    get$pleaseUpdateApp() {
      return "Please update the app to continue.";
    },
    get$chooseEmojiInstructionsBody() {
      return "Match emojis with the words they best represent. Don't worry! No points off for disagreeing. \ud83d\ude05";
    },
    get$analyticsVocabListBody() {
      return "This is all your vocabulary! As you earn XP for each word, they'll go from seedling to full bloom. Click on any word to see more details.";
    },
    get$morphAnalyticsListBody() {
      return "These are all the grammar concepts in the language you're learning! You'll unlock them as you encounter them while chatting. Click for details.";
    },
    get$knockSpaceSuccess() {
      return "You have requested to join this course! An admin will respond to your request when they receive it \ud83d\ude00";
    },
    get$chooseWordAudioInstructionsBody() {
      return "Listen to the complete message. Then match the audios with the words.";
    },
    get$chooseMorphsInstructionsBody() {
      return "Click the puzzle pieces for grammar questions!";
    },
    get$home() {
      return "Home";
    },
    get$join(_) {
      return "Join";
    },
    get$readingAssistanceOverviewBody() {
      return "Click the buttons below for mini-games on matching emojis, audios, word meanings, and grammar concepts. Or click on any word for details.";
    },
    get$resetInstructionTooltipsTitle() {
      return "Reset instruction tooltips";
    },
    get$resetInstructionTooltipsDesc() {
      return "Click to show instruction tooltips like for a brand new user.";
    },
    get$selectForGrammar() {
      return "Select a grammar icon for activities and details.";
    },
    get$translationProblem() {
      return "Translation problem";
    },
    get$niceJob() {
      return "Nice job!";
    },
    get$askToJoin() {
      return "Ask to join";
    },
    get$emptyChatWarningTitle() {
      return "Chat is empty";
    },
    get$emptyChatWarningDesc() {
      return "You haven't invited anyone to your chat. Go to Chat settings to invite your contacts or the Bot. You can also do this later.";
    },
    get$areYouLikeMe() {
      return "Are you like me?";
    },
    get$tryAgainLater() {
      return "Too many attempts made. Please try again in 5 minutes.";
    },
    get$enterSpaceCode() {
      return "Enter course code";
    },
    get$shareSpaceLink() {
      return "Share link";
    },
    get$byUsingPangeaChat() {
      return "By using Pangea Chat, I agree to the ";
    },
    get$details(_) {
      return "Details";
    },
    get$languageLevelPreA1Desc() {
      return "I have never learned or used the language.";
    },
    get$languageLevelA1Desc() {
      return "I can understand and use some familiar everyday expressions and very basic phrases.";
    },
    get$languageLevelA2Desc() {
      return "I can understand sentences and frequently used expressions related to areas of immediate relevance.";
    },
    get$languageLevelB1Desc() {
      return "I can deal with most familiar situations and can produce simple connected text on familiar topics.";
    },
    get$languageLevelB2Desc() {
      return "I can understand the mains ideas of complex texts and interact with a degree of fluency and spontaneity.";
    },
    get$languageLevelC1Desc() {
      return "I can express ideas fluently and spontaneously without much struggle and understand a wide range of demanding texts.";
    },
    get$languageLevelC2Desc() {
      return "I can understand virtually everything heard or read and express myself fluently and precisely.";
    },
    get$newVocab() {
      return "New vocab";
    },
    get$newGrammar() {
      return "New grammar concepts";
    },
    get$choosePracticeMode() {
      return "Click on one of the buttons above to start a practice activity";
    },
    get$ban() {
      return "Ban";
    },
    get$kick() {
      return "Kick";
    },
    get$lemma() {
      return "Lemma";
    },
    get$grammarFeature() {
      return "Grammar feature";
    },
    get$grammarTag() {
      return "Grammar tag";
    },
    get$forms() {
      return "Forms";
    },
    get$exampleMessages() {
      return "Example messages";
    },
    get$timesUsedIndependently() {
      return "Times used independently";
    },
    get$timesUsedWithAssistance() {
      return "Times used with assistance";
    },
    shareInviteCode$1(code) {
      return "Share invite code: " + code;
    },
    get$permissions(_) {
      return "Permissions";
    },
    get$spaceChildPermission() {
      return "Who can add new chats to this course";
    },
    get$addEnvironmentOverride() {
      return "Add environment override";
    },
    get$defaultOption() {
      return "Default";
    },
    get$deleteChatDesc() {
      return "Are you sure you want to delete this chat? It will be deleted for all participants and all messages within the chat will no longer be available for practice or learning analytics.";
    },
    get$deleteSpaceDesc() {
      return "The course and any selected chats will be deleted for all participants and all messages within the chat will no longer be available for practice or learning analytics. This action cannot be undone.";
    },
    get$configureSpace() {
      return "Configure course";
    },
    get$pinMessages() {
      return "Pin messages";
    },
    get$setJoinRules() {
      return "Set join rules";
    },
    get$changeGeneralSettings() {
      return "Change general settings";
    },
    get$inviteOtherUsersToRoom() {
      return "Invite other users";
    },
    get$changeTheNameOfTheSpace() {
      return "Change the name of the course";
    },
    get$changeTheDescription() {
      return "Change the description";
    },
    get$changeThePermissions() {
      return "Change the permissions";
    },
    get$introductions() {
      return "Introductions";
    },
    get$announcements() {
      return "Announcements";
    },
    get$activities() {
      return "Activities";
    },
    get$access() {
      return "Access";
    },
    get$botSettings() {
      return "Bot settings";
    },
    get$howSpaceCanBeFound() {
      return "How this course can be found";
    },
    get$$private() {
      return "Private";
    },
    get$cannotBeFoundInSearch() {
      return "Cannot be found in search";
    },
    get$$public(_) {
      return "Public";
    },
    get$visibleToCommunity() {
      return 'Visible to the broader Pangea Chat community via "Find a course"';
    },
    get$howSpaceCanBeJoined() {
      return "How this course can be joined";
    },
    get$canBeFoundVia() {
      return "Can be found via:";
    },
    get$canBeFoundViaInvitation() {
      return "\u2022 invitation";
    },
    get$canBeFoundViaCodeOrLink() {
      return "\u2022 code or link";
    },
    get$canBeFoundViaKnock() {
      return "\u2022 request to join and admin approval";
    },
    get$youHaveLeveledUp() {
      return "You have leveled up!";
    },
    get$sendActivities() {
      return "Send activities";
    },
    get$directMessage() {
      return "Direct Message";
    },
    get$newDirectMessage() {
      return "New direct message";
    },
    get$speakingExercisesTooltip() {
      return "Speaking";
    },
    get$transcriptionFailed() {
      return "Failed to transcribe audio";
    },
    get$aUserIsKnocking() {
      return "1 user is requesting to join your course";
    },
    usersAreKnocking$1(users) {
      return "" + users + " users are requesting to join your course";
    },
    get$failedToFetchTranscription() {
      return "Failed to fetch transcription";
    },
    get$deleteEmptySpaceDesc() {
      return "The course will be deleted for all participants. This action cannot be undone.";
    },
    get$failedToPlayVideo() {
      return "Failed to play video";
    },
    get$done() {
      return "Done";
    },
    get$inThisSpace() {
      return "In this course";
    },
    get$myContacts() {
      return "My contacts";
    },
    get$inviteAllInSpace() {
      return "Invite all in this course";
    },
    get$spaceParticipantsHaveBeenInvitedToTheChat() {
      return "All course participants has been invited to the chat";
    },
    numKnocking$1(count) {
      return "" + count + " knocking";
    },
    numInvited$1(count) {
      return "" + count + " invited";
    },
    get$errorFetchingDefinition() {
      return "Failed to fetch definition";
    },
    get$errorProcessAnalytics() {
      return "Failed to process analytics";
    },
    get$errorDownloading() {
      return "Download failed";
    },
    get$errorFetchingLevelSummary() {
      return "Failed to fetch level summary";
    },
    get$errorLoadingSpaceChildren() {
      return "Failed to load chats within this course";
    },
    get$unexpectedError() {
      return "Unexpected error.";
    },
    get$pleaseReload() {
      return "Please reload and try again.";
    },
    get$translationError() {
      return "Translation error";
    },
    get$errorFetchingTranslation() {
      return "Failed to fetch translation";
    },
    get$errorFetchingActivity() {
      return "Failed to fetch activity";
    },
    get$check(_) {
      return "Check";
    },
    get$unableToFindRoom() {
      return "No chat or course found with that code. Please try again.";
    },
    get$numCompletedActivities() {
      return "Number of completed activities";
    },
    viewingAnalytics$2(visible, users) {
      return "Viewing " + visible + "/" + users + " Analytics";
    },
    get$request(_) {
      return "Request";
    },
    get$requestAll(_) {
      return "Request All";
    },
    get$confirmMessageUnpin() {
      return "Are you sure you want to unpin this message?";
    },
    get$pending(_) {
      return "Pending";
    },
    get$openRoleLabel() {
      return "OPEN";
    },
    joinedTheActivity$2(username, role) {
      return "\ud83d\udc4b " + username + " joined as " + role;
    },
    finishedTheActivity$1(username) {
      return "\ud83c\udfaf " + username + " wrapped up this activity";
    },
    get$endActivityTitle() {
      return "I'm done";
    },
    get$activitySummaryError() {
      return "Activity summaries unavailable";
    },
    get$requestSummaries() {
      return "Request summaries";
    },
    get$requestAccessTitle() {
      return "Request to analytics view access?";
    },
    get$requestAccessDesc() {
      return "Would you like to request access to view participant analytics?\n\nIf participants agree, admins of this course will be able to view their:\n    \u2022 total vocabulary\n    \u2022 total grammar concepts\n    \u2022 total activity sessions completed\n    \u2022 the specific grammar concepts used, correctly and incorrectly\n\nThey will not be able to view their:\n    \u2022 messages in chats outside the course\n    \u2022 vocabulary list";
    },
    get$analyticsInactiveTitle() {
      return "Requests to inactive users couldn\u2019t be sent";
    },
    get$analyticsInactiveDesc() {
      return "Inactive users who haven't logged in since this feature was introduced won't see your request.\n\nThe Request button will appear once they return. You can resend the request later by clicking the Request button under their name when it's available.";
    },
    get$accessRequestedTitle() {
      return "Analytics Access Request";
    },
    accessRequestedDesc$1(space) {
      return "The administrators of \u201c" + space + "\u201d are requesting to view your learning analytics.\n\nIf you agree, admins of this course will be able to view your:\n    \u2022 total vocabulary\n    \u2022 total grammar concepts\n    \u2022 total activity sessions completed\n    \u2022 the specific grammar concepts used, correctly and incorrectly\n\nThey will not be able to view your:\n    \u2022 messages in chats outside the course\n    \u2022 vocabulary list";
    },
    get$allowAccess() {
      return "Allow Access";
    },
    get$denyAccess() {
      return "Deny Access";
    },
    get$adminRequestedAccess() {
      return "Admins asked to view your analytics.";
    },
    lastUpdated$1(time) {
      return "Updated\n" + time;
    },
    get$activityFinishedMessage() {
      return "All Finished!";
    },
    get$endForAll() {
      return "End for all";
    },
    get$newCourse() {
      return "New course";
    },
    get$newCourseSubtitle() {
      return "Which course plan plan would you like to use?";
    },
    get$failedToLoadCourses() {
      return "Failed to load courses";
    },
    numModules$1(num) {
      return "" + num + " modules";
    },
    numActivityPlans$1(num) {
      return "" + num + " activity plans";
    },
    get$coursePlan() {
      return "Course Plan";
    },
    get$editCourseLater() {
      return "You can edit template title, descriptions, and course image later.";
    },
    get$newCourseAccess() {
      return "By default, courses are private and require admin approval to join. You can edit these settings at any time.";
    },
    get$createCourse() {
      return "Create course";
    },
    get$stats() {
      return "Stats";
    },
    get$createGroupChat() {
      return "Create group chat";
    },
    get$editCourse() {
      return "Edit course";
    },
    get$inviteDesc() {
      return "By username, by code or link";
    },
    get$editCourseDesc() {
      return "Here you can edit course title, description, etc.";
    },
    get$permissionsDesc() {
      return "Set permissions such as who can invite users, send messages, create chats, etc.";
    },
    get$accessDesc() {
      return "You can make your course open to the world! Or, make your course private and secure.";
    },
    get$createGroupChatDesc() {
      return "Whereas activity sessions start and end, group chats will stay open for routine communication.";
    },
    get$deleteDesc() {
      return "Only admins can delete a course. This is a destructive action which removes all users and deletes all selected chats within the course. Proceed with caution.";
    },
    get$noCourseFound() {
      return "Oh, this course needs a plan!\n\nCourse plans are a sequence of topics and conversation activities.";
    },
    additionalParticipants$1(num) {
      return "+ " + num + " others";
    },
    get$directMessages() {
      return "Direct Messages";
    },
    get$whatNow() {
      return "What now?";
    },
    get$chooseNextActivity() {
      return "Choose your next activity!";
    },
    get$letsGo() {
      return "Let's go";
    },
    get$chooseRole() {
      return "Choose a role!";
    },
    get$chooseRoleToParticipate() {
      return "Choose a role to participate!";
    },
    waitingToFillRole$1(num) {
      return "Waiting to fill " + num + " roles...";
    },
    get$pingParticipants() {
      return "Ping course participants";
    },
    get$playWithBot() {
      return "Play with Pangea Bot";
    },
    get$inviteFriends() {
      return "Invite friends";
    },
    get$waitNotDone() {
      return "Wait I\u2019m not done!";
    },
    get$waitingForOthersToFinish() {
      return "Waiting for the rest to finish up...";
    },
    get$saveToCompletedActivities() {
      return "Save to completed activities";
    },
    get$generatingSummary() {
      return "Analyzing chat and generating results";
    },
    get$findCourse() {
      return "Find a course";
    },
    get$activityCompletedDesc() {
      return "Your completed activity was added to analytics where you can review and practice the language you used.";
    },
    pingParticipantsNotification$2(user, room) {
      return user + " is looking for users to join the activity session in " + room;
    },
    get$courseName() {
      return "Course name";
    },
    get$createNewCourse() {
      return "New course";
    },
    get$publicCourses() {
      return "Public courses";
    },
    goToCourse$1(course) {
      return "Go to course: " + course;
    },
    get$activityComplete() {
      return "This activity has been completed. The activity summary should be available below.";
    },
    get$haventChattedMuch() {
      return "It looks like you haven't chatted much, try using some more vocab words! If you feel like you've completed your objective, you can end the activity below.";
    },
    get$haveChatted() {
      return "It looks like you've been chatting for a while! If you feel like you've completed your objective, wrap up to finish the activity and we'll generate you a summary in the chat!";
    },
    userDoneAndWaiting$2(num1, num2) {
      return "" + num1 + "/" + num2 + " participants have wrapped up. Wait for everyone to finish, and we'll generate you a summary in the chat! \n\nIf you'd like to rejoin the conversation, click the continue button in the chat.";
    },
    othersDoneAndWaiting$2(num1, num2) {
      return "" + num1 + "/" + num2 + " are done. Have you completed your objective?";
    },
    get$startNewSession() {
      return "Start new session";
    },
    get$joinOpenSession() {
      return "Join open session";
    },
    get$activityNotFound() {
      return "Activity not found";
    },
    get$levelUp() {
      return "Level up";
    },
    get$myActivities() {
      return "My activities";
    },
    get$openToJoin() {
      return "Open to join";
    },
    get$activityDone() {
      return "Activity Done!";
    },
    get$promoCodeInfo() {
      return "Promo codes can be entered on the next page";
    },
    get$editsComingSoon() {
      return "The ability to edit cities and activities is coming soon.";
    },
    get$editing() {
      return "Editing";
    },
    get$activityNeedsOneMember() {
      return "Uh oh! This activity needs 1 more person.";
    },
    activityNeedsMembers$1(num) {
      return "Uh oh! This activity needs " + num + " more people.";
    },
    get$inviteFriendsToCourse() {
      return "Invite friends to my course";
    },
    get$subscribeToUnlockActivitySummaries() {
      return "Subscribe to unlock activity summaries";
    },
    get$subscribeToUnlockDefinitions() {
      return "Subscribe to unlock definitions";
    },
    get$subscribeToUnlockTranscriptions() {
      return "Subscribe to unlock transcriptions";
    },
    get$pingSent() {
      return "\ud83d\udd14 Course ping sent! \ud83d\udd14";
    },
    get$courseTitle() {
      return "Course title";
    },
    get$courseDesc() {
      return "Course description";
    },
    get$courseSavedSuccessfully() {
      return "Course saved successfully";
    },
    get$addCoursePlan() {
      return "Add a course plan";
    },
    get$activityStatsButtonInstruction() {
      return "Click here to view your activity stats and to close the activity when finished";
    },
    get$readingAnalyticsDesc() {
      return "Click practice on each message for reading activities.";
    },
    get$speakingAnalyticsDesc() {
      return "Record voice messages for speaking practice.";
    },
    get$audioAnalyticsDesc() {
      return "Click practice on each message for listening activities.";
    },
    get$loginToAccount() {
      return "Login to my account";
    },
    get$appDescription() {
      return "Learn a language\nwhile texting your friends.";
    },
    get$languages(_) {
      return "Languages";
    },
    get$chooseLanguage() {
      return "Choose a language.";
    },
    get$planTrip() {
      return "Plan your trip";
    },
    get$howAreYouTraveling() {
      return "How are you traveling?";
    },
    get$unlockPrivateTrip() {
      return "Unlock a private trip";
    },
    get$joinPublicTrip() {
      return "Join a public trip";
    },
    get$startOwnTrip() {
      return "Start my own";
    },
    get$tripPlanDesc() {
      return "Trips are courses. Each has 8-10 sequenced topics with a range of task-based language learning activities.";
    },
    get$unlockPrivateTripTitle() {
      return "Unlock private trip";
    },
    get$browsePublicTrips() {
      return "Browse public trips";
    },
    get$startOwnTripTitle() {
      return "Start my own trip";
    },
    get$courseCode() {
      return "What\u2019s the secret password?";
    },
    get$courseCodeHint() {
      return "Trip code or link";
    },
    get$unlockMyTrip() {
      return "Unlock my trip";
    },
    get$signupOption() {
      return "How do you want to sign up?";
    },
    get$withApple() {
      return "With Apple";
    },
    get$withGoogle() {
      return "With Google";
    },
    get$withEmail() {
      return "With Email";
    },
    get$createAccount() {
      return "Create account";
    },
    get$noCoursesFound() {
      return "No courses found";
    },
    get$loginWithEmail() {
      return "Login with email";
    },
    get$usernameOrEmail() {
      return "Username or email";
    },
    get$email() {
      return "Email";
    },
    get$forgotPassword() {
      return "Forgot password?";
    },
    get$writingAnalyticsDesc() {
      return "Send messages to practice writing.";
    },
    get$endActivity() {
      return "End activity";
    },
    get$allLanguages() {
      return "All languages";
    },
    get$allCefrLevels() {
      return "All CEFR levels";
    },
    get$chatListTooltip() {
      return "Here you\u2019ll find your direct messages! Click on any user\u2019s avatar and \u201cstart conversation\u201d to send a DM.";
    },
    get$directMessageBotTitle() {
      return "Direct message Pangea Bot";
    },
    get$directMessageBotDesc() {
      return "Talking to humans is more fun but... AI is always ready!";
    },
    remove$1($receiver, arg0) {
      return this.get$remove(this).call$1(arg0);
    }
  };
  var typesOffset = hunkHelpers.updateTypes([]);
  (function inheritance() {
    var _inherit = hunkHelpers.inherit;
    _inherit(A.L10nId, C.L10n);
  })();
  B._Universe_addRules(init.typeUniverse, JSON.parse('{"L10nId":{"L10n":[]}}'));
  var string$ = {
    Member: "Memberi tahu pengguna tentang pesan dalam ruangan satu ke satu."
  };
};
;
(d => {
  d["GCX8yM3MoSKAblcrBhpeBHrmULE="] = d.current;
})($__dart_deferred_initializers__);
;
//# sourceMappingURL=main.dart.js_231.part.js.map
