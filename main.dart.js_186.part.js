// Generated by dart2js (, trust primitives, omit checks, lax runtime type, csp, intern-composite-values), the Dart to JavaScript compiler version: 3.9.2.
((s, d) => {
  s[d] = s[d] || {};
})(self, "$__dart_deferred_initializers__");
$__dart_deferred_initializers__.current = function(hunkHelpers, init, holdersList, $) {
  var B,
  A = {
    L10nDe$() {
      return new A.L10nDe(B.canonicalizedLocale("de"));
    },
    L10nDe: function L10nDe(t0) {
      this.localeName = t0;
    }
  },
  C;
  B = holdersList[0];
  A = hunkHelpers.updateHolder(holdersList[12], A);
  C = holdersList[54];
  A.L10nDe.prototype = {
    get$alwaysUse24HourFormat() {
      return "true";
    },
    get$repeatPassword() {
      return "Passwort wiederholen";
    },
    get$notAnImage() {
      return "Keine Bilddatei.";
    },
    get$setCustomPermissionLevel() {
      return "Benutzerdefinierte Berechtigungsstufe festlegen";
    },
    get$setPermissionsLevelDescription() {
      return "Bitte w\xe4hlen Sie unten eine vordefinierte Rolle aus oder geben Sie eine benutzerdefinierte Berechtigungsstufe zwischen 0 und 100 ein.";
    },
    get$ignoreUser() {
      return "Nutzer ignorieren";
    },
    get$normalUser() {
      return "Normaler Benutzer";
    },
    get$remove(_) {
      return "Entfernen";
    },
    get$importNow() {
      return "Jetzt importieren";
    },
    get$importEmojis() {
      return "Emojis importieren";
    },
    get$importFromZipFile() {
      return "Aus ZIP-Datei importieren";
    },
    get$exportEmotePack() {
      return "Emote-Paket als ZIP-Datei exportieren";
    },
    get$replace(_) {
      return "Ersetzen";
    },
    aboutHomeserver$1(homeserver) {
      return "\xdcber " + homeserver;
    },
    get$accept(_) {
      return "Annehmen";
    },
    acceptedTheInvitation$1(username) {
      return "\ud83d\udc4d " + username + " hat die Einladung angenommen";
    },
    get$account() {
      return "Konto";
    },
    activatedEndToEndEncryption$1(username) {
      return "\ud83d\udd10 " + username + " hat Ende-zu-Ende Verschl\xfcsselung aktiviert";
    },
    get$addEmail() {
      return "E-Mail hinzuf\xfcgen";
    },
    supposedMxid$1(mxid) {
      return "das sollte sein " + mxid;
    },
    get$admin() {
      return "Admin";
    },
    get$commandHint_roomupgrade() {
      return "Aktualisieren Sie diesen Raum auf die angegebene Raumversion";
    },
    get$commandHint_googly() {
      return "Glupschaugen senden";
    },
    get$commandHint_cuddle() {
      return "Umarmung senden";
    },
    get$commandHint_hug() {
      return "Umarmung senden";
    },
    googlyEyesContent$1(senderName) {
      return senderName + " hat dir Googly Eyes gesendet";
    },
    cuddleContent$1(senderName) {
      return senderName + " knuddelt dich";
    },
    hugContent$1(senderName) {
      return senderName + " umarmt dich";
    },
    answeredTheCall$1(senderName) {
      return senderName + " hat den Anruf angenommen";
    },
    get$anyoneCanJoin() {
      return "Jeder darf beitreten";
    },
    get$archive() {
      return "Archiv";
    },
    get$areYouSure() {
      return "Bist du sicher?";
    },
    get$areYouSureYouWantToLogout() {
      return "Willst du dich wirklich abmelden?";
    },
    get$askSSSSSign() {
      return "Bitte gib, um die andere Person signieren zu k\xf6nnen, dein Sicherheitsschl\xfcssel oder Wiederherstellungsschl\xfcssel ein.";
    },
    askVerificationRequest$1(username) {
      return "Diese Best\xe4tigungsanfrage von " + username + " annehmen?";
    },
    badServerLoginTypesException$3(serverVersions, supportedVersions, suportedVersions) {
      return "Der Homeserver unterst\xfctzt diese Anmelde-Typen:\n" + serverVersions + "\nAber diese App unterst\xfctzt nur:\n" + supportedVersions;
    },
    get$sendTypingNotifications() {
      return "Tippbenachrichtigungen senden";
    },
    get$swipeRightToLeftToReply() {
      return "Wische von rechts nach links zum Antworten";
    },
    get$sendOnEnter() {
      return "Senden mit Enter";
    },
    countChatsAndCountParticipants$2(chats, participants) {
      return "" + chats + " Chats und " + participants + " Teilnehmer";
    },
    get$banFromChat() {
      return "Aus dem Chat verbannen";
    },
    get$banned() {
      return "Verbannt";
    },
    bannedUser$2(username, targetName) {
      return username + " hat " + targetName + " verbannt";
    },
    get$blockDevice() {
      return "Blockiere Ger\xe4t";
    },
    get$blocked() {
      return "Blockiert";
    },
    get$cancel(_) {
      return "Abbrechen";
    },
    cantOpenUri$1(uri) {
      return "Die URI " + uri + " kann nicht ge\xf6ffnet werden";
    },
    get$changeDeviceName() {
      return "Ger\xe4tenamen \xe4ndern";
    },
    changedTheChatAvatar$1(username) {
      return username + " hat den Chat-Avatar ge\xe4ndert";
    },
    changedTheChatDescriptionTo$2(username, description) {
      return username + " hat die Chatbeschreibung ge\xe4ndert in: '" + description + "'";
    },
    changedTheChatNameTo$2(username, chatname) {
      return username + " hat den Chatnamen ge\xe4ndert in: '" + chatname + "'";
    },
    changedTheChatPermissions$1(username) {
      return username + " hat die Chat-Berechtigungen ge\xe4ndert";
    },
    changedTheDisplaynameTo$2(username, displayname) {
      return username + " hat den Spitznamen ge\xe4ndert in: '" + displayname + "'";
    },
    changedTheGuestAccessRules$1(username) {
      return username + " hat die Zugangsregeln f\xfcr G\xe4ste ge\xe4ndert";
    },
    changedTheGuestAccessRulesTo$2(username, rules) {
      return username + " hat die Zugangsregeln f\xfcr G\xe4ste ge\xe4ndert zu: " + rules;
    },
    changedTheHistoryVisibility$1(username) {
      return username + " hat die Sichtbarkeit des Chat-Verlaufs ge\xe4ndert";
    },
    changedTheHistoryVisibilityTo$2(username, rules) {
      return username + " hat die Sichtbarkeit des Chat-Verlaufs ge\xe4ndert zu: " + rules;
    },
    changedTheJoinRules$1(username) {
      return username + " hat die Zugangsregeln ge\xe4ndert";
    },
    changedTheJoinRulesTo$2(username, joinRules) {
      return username + " hat die Zugangsregeln ge\xe4ndert zu: " + joinRules;
    },
    changedTheProfileAvatar$1(username) {
      return username + " hat das Profilbild ge\xe4ndert";
    },
    changedTheRoomAliases$1(username) {
      return username + " hat die Raum-Aliasse ge\xe4ndert";
    },
    changedTheRoomInvitationLink$1(username) {
      return username + " hat den Einladungslink ge\xe4ndert";
    },
    get$changePassword() {
      return "Passwort \xe4ndern";
    },
    get$changeTheme() {
      return "\xc4ndere Deinen Style";
    },
    get$changeYourAvatar() {
      return "Deinen Avatar \xe4ndern";
    },
    get$channelCorruptedDecryptError() {
      return "Die Verschl\xfcsselung wurde korrumpiert";
    },
    get$chat() {
      return "Chat";
    },
    get$chatDetails() {
      return "Chatdetails";
    },
    get$chats() {
      return "Chats";
    },
    get$chooseAStrongPassword() {
      return "W\xe4hle ein sicheres Passwort";
    },
    get$clearArchive() {
      return "Archiv leeren";
    },
    get$close(_) {
      return "Schlie\xdfen";
    },
    get$commandHint_markasdm() {
      return "Als Direktnachrichtenraum f\xfcr die angegebene Matrix-ID markieren";
    },
    get$commandHint_markasgroup() {
      return "Als Gruppe markieren";
    },
    get$commandHint_ban() {
      return "Banne ausgew\xe4hlten Benutzer aus diesen Raum";
    },
    get$commandHint_clearcache() {
      return "Zwischenspeicher l\xf6schen";
    },
    get$commandHint_create() {
      return "Erstelle ein leeren Gruppenchat\nBenutze --no-encryption, um die Verschl\xfcsselung auszuschalten";
    },
    get$commandHint_discardsession() {
      return "Sitzung verwerfen";
    },
    get$commandHint_dm() {
      return "Starte einen direkten Chat\nBenutze --no-encryption, um die Verschl\xfcsselung auszuschalten";
    },
    get$commandHint_html() {
      return "Sende HTML-formatierten Text";
    },
    get$commandHint_invite() {
      return "Lade den Benutzer in diesen Raum ein";
    },
    get$commandHint_join() {
      return "Betritt den ausgew\xe4hlten Raum";
    },
    get$commandHint_kick() {
      return "Entferne den \xfcbergebenen Benutzer aus diesem Raum";
    },
    get$commandHint_leave() {
      return "Diesen Raum verlassen";
    },
    get$commandHint_me() {
      return "Beschreibe dich selbst";
    },
    get$commandHint_myroomavatar() {
      return "Setze dein Profilbild nur f\xfcr diesen Raum (MXC-Uri)";
    },
    get$commandHint_myroomnick() {
      return "Setze deinen Anzeigenamen nur f\xfcr diesen Raum";
    },
    get$commandHint_op() {
      return "Setze den \xfcbergeben Powerlevel des Benutzers (Standard: 50)";
    },
    get$commandHint_plain() {
      return "Sende unformatierten Text";
    },
    get$commandHint_react() {
      return "Sende die Antwort als Reaction";
    },
    get$commandHint_send() {
      return "Text senden";
    },
    get$commandHint_unban() {
      return "Hebe die Verbannung dieses Benutzers in diesem Raum auf";
    },
    get$compareEmojiMatch() {
      return "Bitte vergleiche die Emojis";
    },
    get$compareNumbersMatch() {
      return "Bitte vergleiche die Zahlen";
    },
    get$configureChat() {
      return "Chat konfigurieren";
    },
    get$confirm(_) {
      return "Best\xe4tigen";
    },
    get$copiedToClipboard() {
      return "Wurde in die Zwischenablage kopiert";
    },
    get$copy(_) {
      return "Kopieren";
    },
    couldNotDecryptMessage$1(error) {
      return "Nachricht konnte nicht entschl\xfcsselt werden: " + error;
    },
    get$checkList() {
      return "Checkliste";
    },
    countParticipants$1(count) {
      return "" + count + " Mitglieder";
    },
    countInvited$1(count) {
      return "" + count + " invited";
    },
    get$create(_) {
      return "Erstellen";
    },
    createdTheChat$1(username) {
      return "\ud83d\udcac " + username + " hat den Chat erstellt";
    },
    get$createGroup() {
      return "Gruppe erstellen";
    },
    get$currentlyActive() {
      return "Jetzt gerade online";
    },
    get$darkTheme() {
      return "Dunkel";
    },
    dateAndTimeOfDay$2(date, timeOfDay) {
      return date + ", " + timeOfDay;
    },
    get$deactivateAccountWarning() {
      return "Dies deaktiviert dein Konto. Es kann nicht r\xfcckg\xe4ngig gemacht werden! Bist du sicher?";
    },
    get$defaultPermissionLevel() {
      return "Standardberechtigungsstufe f\xfcr neue Benutzer";
    },
    get$$delete(_) {
      return "L\xf6schen";
    },
    get$deleteAccount() {
      return "Konto l\xf6schen";
    },
    get$deleteMessage() {
      return "Nachricht l\xf6schen";
    },
    get$devices() {
      return "Ger\xe4te";
    },
    get$displaynameHasBeenChanged() {
      return "Anzeigename wurde ge\xe4ndert";
    },
    get$downloadFile() {
      return "Datei herunterladen";
    },
    get$edit() {
      return "Bearbeiten";
    },
    get$editBlockedServers() {
      return "Blockierte Server einstellen";
    },
    get$chatPermissions() {
      return "Chatberechtigungen";
    },
    get$editDisplayname() {
      return "Anzeigename \xe4ndern";
    },
    get$editRoomAvatar() {
      return "Raumavatar bearbeiten";
    },
    get$emoteExists() {
      return "Emoticon existiert bereits!";
    },
    get$emoteInvalid() {
      return "Ung\xfcltiges Emoticon-K\xfcrzel!";
    },
    get$emoteKeyboardNoRecents() {
      return "K\xfcrzlich verwendete Emotes werden hier angezeigt ...";
    },
    get$emotePacks() {
      return "Emoticon-B\xfcndel f\xfcr Raum";
    },
    get$customEmojisAndStickers() {
      return "Eigene Emojis und Sticker";
    },
    get$emoteShortcode() {
      return "Emoticon-K\xfcrzel";
    },
    get$emoteWarnNeedToPick() {
      return "W\xe4hle ein Emoticon-K\xfcrzel und ein Bild!";
    },
    get$emptyChat() {
      return "Leerer Chat";
    },
    get$enableEmotesGlobally() {
      return "Aktiviere Emoticon-B\xfcndel global";
    },
    get$enableEncryption() {
      return "Verschl\xfcsselung anschalten";
    },
    get$encrypted() {
      return "Verschl\xfcsselt";
    },
    get$encryptionNotEnabled() {
      return "Verschl\xfcsselung ist nicht aktiviert";
    },
    endedTheCall$1(senderName) {
      return senderName + " hat den Anruf beendet";
    },
    get$enterAnEmailAddress() {
      return "Gib eine E-Mail-Adresse ein";
    },
    errorObtainingLocation$1(error) {
      return "Fehler beim Suchen des Standortes: " + error;
    },
    get$fontSize(_) {
      return "Schriftgr\xf6\xdfe";
    },
    get$forward(_) {
      return "Weiterleiten";
    },
    get$fromJoining() {
      return "Ab dem Beitritt";
    },
    get$fromTheInvitation() {
      return "Ab der Einladung";
    },
    get$guestsAreForbidden() {
      return "G\xe4ste sind verboten";
    },
    get$guestsCanJoin() {
      return "G\xe4ste d\xfcrfen beitreten";
    },
    hasWithdrawnTheInvitationFor$2(username, targetName) {
      return username + " hat die Einladung f\xfcr " + targetName + " zur\xfcckgezogen";
    },
    get$help() {
      return "Hilfe";
    },
    get$hideRedactedMessages() {
      return "Geschw\xe4rzte Nachrichten verstecken";
    },
    get$hideRedactedMessagesBody() {
      return "Wenn jemand eine Nachricht schw\xe4rzt/l\xf6scht, dann wird diese Nachricht im Chat nicht mehr sichtbar sein.";
    },
    get$hideInvalidOrUnknownMessageFormats() {
      return "Ung\xfcltige und unbekannte Nachrichten-Formate ausblenden";
    },
    get$block() {
      return "Blockieren";
    },
    get$blockedUsers() {
      return "Blockierte Benutzer";
    },
    get$blockListDescription() {
      return "Du kannst Benutzer blockieren, die dich st\xf6ren. Von Benutzern auf deiner pers\xf6nlichen Blocklierliste kannst du keine Nachrichten oder Raumeinladungen mehr erhalten.";
    },
    get$blockUsername() {
      return "Blockiere Benutzername";
    },
    get$iHaveClickedOnLink() {
      return "Ich habe den Link angeklickt";
    },
    get$incorrectPassphraseOrKey() {
      return "Falsches Passwort oder Wiederherstellungsschl\xfcssel";
    },
    get$inviteContact() {
      return "Kontakt einladen";
    },
    get$noChatDescriptionYet() {
      return "Noch keine Chatbeschreibung vorhanden.";
    },
    get$tryAgain() {
      return "Neuer Versuch";
    },
    get$invited() {
      return "Eingeladen";
    },
    get$redactMessageDescription() {
      return "Die Nachricht wird f\xfcr alle Teilnehmer dieses Gespr\xe4chs gel\xf6scht. Dies kann nicht r\xfcckg\xe4ngig gemacht werden.";
    },
    get$optionalRedactReason() {
      return "(Optional) Grund f\xfcr die L\xf6schung dieser Nachricht...";
    },
    invitedUser$2(username, targetName) {
      return "\ud83d\udce9 " + username + " hat " + targetName + " eingeladen";
    },
    get$invitedUsersOnly() {
      return "Nur eingeladene Mitglieder";
    },
    get$inviteForMe() {
      return "Einladung f\xfcr mich";
    },
    get$isTyping() {
      return "schreibt \u2026";
    },
    joinedTheChat$1(username) {
      return "\ud83d\udc4b " + username + " ist dem Chat beigetreten";
    },
    kicked$2(username, targetName) {
      return "\ud83d\udc5e " + username + " hat " + targetName + " hinausgeworfen";
    },
    get$kickFromChat() {
      return "Aus dem Chat hinauswerfen";
    },
    lastActiveAgo$1(localizedTimeShort) {
      return "Zuletzt aktiv: " + localizedTimeShort;
    },
    get$leave() {
      return "Verlassen";
    },
    get$leftTheChat() {
      return "Hat den Chat verlassen";
    },
    get$lightTheme() {
      return "Hell";
    },
    get$dehydrate() {
      return "Sitzung exportieren und Ger\xe4t l\xf6schen";
    },
    get$dehydrateWarning() {
      return "Diese Aktion kann nicht r\xfcckg\xe4ngig gemacht werden. Stelle sicher, dass du die Sicherungsdatei sicher aufbewahrst.";
    },
    get$dehydrateTor() {
      return "TOR-Benutzer: Sitzung exportieren";
    },
    get$dehydrateTorLong() {
      return "F\xfcr TOR-Benutzer wird empfohlen, die Sitzung zu exportieren, bevor das Fenster geschlossen wird.";
    },
    get$loadingPleaseWait() {
      return "Lade \u2026 Bitte warten.";
    },
    get$loadMore() {
      return "Mehr laden \u2026";
    },
    get$locationDisabledNotice() {
      return "Standort ist deaktiviert. Bitte aktivieren, um den Standort teilen zu k\xf6nnen.";
    },
    get$locationPermissionDeniedNotice() {
      return "Standort-Berechtigung wurde abgelehnt. Bitte akzeptieren, um den Standort teilen zu k\xf6nnen.";
    },
    get$login() {
      return "Anmelden";
    },
    get$logout() {
      return "Abmelden";
    },
    get$mention() {
      return "Erw\xe4hnen";
    },
    get$messages() {
      return "Nachrichten";
    },
    get$messagesStyle() {
      return "Nachrichten:";
    },
    get$moderator() {
      return "Moderator";
    },
    get$newChat() {
      return "Neuer Chat";
    },
    get$newVerificationRequest() {
      return "Neue Verifikationsanfrage!";
    },
    get$next(_) {
      return "Weiter";
    },
    get$no() {
      return "Nein";
    },
    get$noConnectionToTheServer() {
      return "Keine Verbindung zum Server";
    },
    get$noEmotesFound() {
      return "Keine Emoticons gefunden. \ud83d\ude15";
    },
    get$shareInviteLink() {
      return "Einladungslink teilen";
    },
    get$none() {
      return "Keiner";
    },
    get$noPasswordRecoveryDescription() {
      return "Du hast bisher keine M\xf6glichkeit hinzugef\xfcgt, um dein Passwort zur\xfcckzusetzen.";
    },
    get$noPermission() {
      return "Keine Berechtigung";
    },
    get$noRoomsFound() {
      return "Keine R\xe4ume gefunden \u2026";
    },
    get$notifications() {
      return "Benachrichtigungen";
    },
    get$obtainingLocation() {
      return "Standort wird ermittelt \u2026";
    },
    get$offensive() {
      return "Beleidigend";
    },
    get$ok() {
      return "Ok";
    },
    get$oopsSomethingWentWrong() {
      return "Hoppla, da ist etwas schiefgelaufen\u2026";
    },
    get$oneClientLoggedOut() {
      return "Einer deiner Clients wurde abgemeldet";
    },
    get$openInMaps() {
      return "In Maps \xf6ffnen";
    },
    get$link() {
      return "Link";
    },
    get$serverRequiresEmail() {
      return "Dieser Server muss deine E-Mail-Adresse f\xfcr die Registrierung \xfcberpr\xfcfen.";
    },
    get$participant() {
      return "Mitglied";
    },
    get$passphraseOrKey() {
      return "Passwort oder Wiederherstellungsschl\xfcssel";
    },
    get$password(_) {
      return "Passwort";
    },
    get$passwordForgotten() {
      return "Passwort vergessen";
    },
    get$passwordHasBeenChanged() {
      return "Passwort wurde ge\xe4ndert";
    },
    get$overview() {
      return "\xdcbersicht";
    },
    get$passwordRecoverySettings() {
      return "Passwort-Wiederherstellungs-Einstellungen";
    },
    get$passwordRecovery() {
      return "Passwort wiederherstellen";
    },
    get$pickImage() {
      return "Bild w\xe4hlen";
    },
    get$pin() {
      return "Anpinnen";
    },
    get$pleaseChoose() {
      return "Bitte w\xe4hlen";
    },
    get$pleaseEnterYourPassword() {
      return "Bitte dein Passwort eingeben";
    },
    get$pleaseEnterYourPin() {
      return "Bitte gib deine Pin ein";
    },
    get$pleaseEnterYourUsername() {
      return "Bitte deinen Benutzernamen eingeben";
    },
    get$pleaseFollowInstructionsOnWeb() {
      return "Bitte folge den Anweisungen auf der Website und tippe auf Weiter.";
    },
    get$privacy() {
      return "Privatsph\xe4re";
    },
    get$reason(_) {
      return "Grund";
    },
    redactedBy$1(username) {
      return "Gel\xf6scht von " + username;
    },
    get$directChat() {
      return "Privater Chat";
    },
    redactedByBecause$2(username, reason) {
      return "Gel\xf6scht von " + username + ' weil: "' + reason + '"';
    },
    redactedAnEvent$1(username) {
      return username + " hat ein Ereignis gel\xf6scht";
    },
    get$redactMessage() {
      return "Nachricht l\xf6schen";
    },
    get$reject() {
      return "Ablehnen";
    },
    rejectedTheInvitation$1(username) {
      return username + " hat die Einladung abgelehnt";
    },
    get$removeAllOtherDevices() {
      return "Alle anderen Ger\xe4te entfernen";
    },
    get$unbanFromChat() {
      return "Verbannung aufheben";
    },
    get$removeYourAvatar() {
      return "Deinen Avatar l\xf6schen";
    },
    get$replaceRoomWithNewerVersion() {
      return "Raum mit neuer Version ersetzen";
    },
    get$reply(_) {
      return "Antworten";
    },
    get$reportMessage() {
      return "Nachricht melden";
    },
    get$roomHasBeenUpgraded() {
      return "Der Raum wurde ge-upgraded";
    },
    get$search(_) {
      return "Suchen";
    },
    get$security() {
      return "Sicherheit";
    },
    get$send(_) {
      return "Senden";
    },
    get$sendAMessage() {
      return "Nachricht schreiben";
    },
    get$sendAudio() {
      return "Sende Audiodatei";
    },
    get$sendFile() {
      return "Datei senden";
    },
    get$sendImage() {
      return "Bild senden";
    },
    sendImages$1(count) {
      return "Sende " + count + " Bilder";
    },
    get$sendMessages() {
      return "Nachrichten senden";
    },
    get$sendVideo() {
      return "Sende Video";
    },
    sentAFile$1(username) {
      return "\ud83d\udcc1 " + username + " hat eine Datei gesendet";
    },
    sentAnAudio$1(username) {
      return "\ud83c\udfa4 " + username + " hat eine Audio-Datei gesendet";
    },
    sentAPicture$1(username) {
      return "\ud83d\uddbc\ufe0f " + username + " hat ein Bild gesendet";
    },
    sentASticker$1(username) {
      return "\ud83d\ude0a " + username + " hat einen Sticker gesendet";
    },
    sentAVideo$1(username) {
      return "\ud83c\udfa5 " + username + " hat ein Video gesendet";
    },
    sentCallInformations$1(senderName) {
      return senderName + " hat Anrufinformationen geschickt";
    },
    get$separateChatTypes() {
      return "Separate Direktchats und Gruppen";
    },
    get$setChatDescription() {
      return "Chatbeschreibung festlegen";
    },
    get$setStatus() {
      return "Status \xe4ndern";
    },
    get$settings() {
      return "Einstellungen";
    },
    get$share(_) {
      return "Teilen";
    },
    sharedTheLocation$1(username) {
      return username + " hat den Standort geteilt";
    },
    get$shareLocation() {
      return "Standort teilen";
    },
    get$presencesToggle() {
      return "Status-Nachrichten anderer Benutzer anzeigen";
    },
    get$skip(_) {
      return "\xdcberspringe";
    },
    get$sourceCode() {
      return "Quellcode";
    },
    startedACall$1(senderName) {
      return senderName + " hat einen Anruf get\xe4tigt";
    },
    get$status(_) {
      return "Status";
    },
    get$statusExampleMessage() {
      return "Wie geht es dir heute?";
    },
    get$submit(_) {
      return "Absenden";
    },
    get$synchronizingPleaseWait() {
      return "Synchronisiere... Bitte warten.";
    },
    synchronizingPleaseWaitCounter$1(percentage) {
      return " Synchronisierung\u2026 (" + percentage + "%)";
    },
    get$systemTheme() {
      return "System";
    },
    get$theyDontMatch() {
      return "Stimmen nicht \xfcberein";
    },
    get$theyMatch() {
      return "Stimmen \xfcberein";
    },
    get$tooManyRequestsWarning() {
      return "Zu viele Anfragen. Bitte versuche es sp\xe4ter noch einmal!";
    },
    get$tryToSendAgain() {
      return "Noch mal versuchen zu senden";
    },
    get$unavailable() {
      return "Nicht verf\xfcgbar";
    },
    unbannedUser$2(username, targetName) {
      return username + " hat die Verbannung von " + targetName + " aufgehoben";
    },
    get$unblockDevice() {
      return "Ger\xe4teblockierung aufheben";
    },
    get$unknownDevice() {
      return "Unbekanntes Ger\xe4t";
    },
    get$unknownEncryptionAlgorithm() {
      return "Unbekannter Verschl\xfcsselungsalgorithmus";
    },
    unknownEvent$1(type) {
      return "Unbekanntes Ereignis '" + type + "'";
    },
    get$unpin() {
      return "Nicht mehr anpinnen";
    },
    userAndOthersAreTyping$2(username, count) {
      return username + " und " + count + " andere schreiben \u2026";
    },
    userAndUserAreTyping$2(username, username2) {
      return username + " und " + username2 + " schreiben \u2026";
    },
    userIsTyping$1(username) {
      return username + " schreibt\xa0\u2026";
    },
    userLeftTheChat$1(username) {
      return "\ud83d\udeaa " + username + " hat den Chat verlassen";
    },
    get$username(_) {
      return "Benutzername";
    },
    userSentUnknownEvent$2(username, type) {
      return username + " hat ein " + type + "-Ereignis gesendet";
    },
    get$unverified() {
      return "Unverifiziert";
    },
    get$verified() {
      return "Verifiziert";
    },
    get$verifyStart() {
      return "Starte Verifikation";
    },
    get$verifySuccess() {
      return "Erfolgreich verifiziert!";
    },
    get$verifyTitle() {
      return "Anderes Konto wird verifiziert";
    },
    get$visibleForAllParticipants() {
      return "Sichtbar f\xfcr alle Mitglieder";
    },
    get$visibleForEveryone() {
      return "F\xfcr jeden sichtbar";
    },
    get$voiceMessage() {
      return "Sprachnachricht";
    },
    get$waitingPartnerAcceptRequest() {
      return "Warte darauf, dass der Partner die Anfrage annimmt\xa0\u2026";
    },
    get$waitingPartnerEmoji() {
      return "Warte darauf, dass der Partner die Emoji annimmt\xa0\u2026";
    },
    get$waitingPartnerNumbers() {
      return "Warten, dass der Partner die Zahlen annimmt\xa0\u2026";
    },
    get$warning() {
      return "Achtung!";
    },
    get$weSentYouAnEmail() {
      return "Wir haben dir eine E-Mail gesendet";
    },
    get$whyDoYouWantToReportThis() {
      return "Warum willst du dies melden?";
    },
    get$withTheseAddressesRecoveryDescription() {
      return "Mit diesen Adressen kannst du dein Passwort wiederherstellen, wenn du es vergessen hast.";
    },
    get$writeAMessage() {
      return "Schreibe eine Nachricht \u2026";
    },
    get$yes() {
      return "Ja";
    },
    get$you() {
      return "Du";
    },
    get$youAreNoLongerParticipatingInThisChat() {
      return "Du bist kein Mitglied mehr in diesem Chat";
    },
    get$youHaveBeenBannedFromThisChat() {
      return "Du wurdest aus dem Chat verbannt";
    },
    get$yourPublicKey() {
      return "Dein \xf6ffentlicher Schl\xfcssel";
    },
    get$messageInfo() {
      return "Nachrichten-Info";
    },
    get$time(_) {
      return "Zeit";
    },
    get$sender() {
      return "Absender:in";
    },
    get$openGallery() {
      return "Galerie \xf6ffnen";
    },
    get$start(_) {
      return "Start";
    },
    get$markAsRead() {
      return "Als gelesen markiert";
    },
    reactedWith$2(sender, reaction) {
      return sender + " reagierte mit " + reaction;
    },
    get$pinMessage() {
      return "An Raum anheften";
    },
    get$emojis() {
      return "Emojis";
    },
    get$youRejectedTheInvitation() {
      return "Du hast die Einladung abgelehnt";
    },
    get$youJoinedTheChat() {
      return "Du bist dem Chat beigetreten";
    },
    get$youAcceptedTheInvitation() {
      return "\ud83d\udc4d Du hast die Einladung angenommen";
    },
    youBannedUser$1(user) {
      return "Du hast den " + user + " verbannt";
    },
    youHaveWithdrawnTheInvitationFor$1(user) {
      return "Du hast die Einladung f\xfcr " + user + " zur\xfcckgezogen";
    },
    youInvitedBy$1(user) {
      return "\ud83d\udce9 Du wurdest von " + user + " eingeladen";
    },
    youInvitedUser$1(user) {
      return "\ud83d\udce9 Du hast " + user + " eingeladen";
    },
    youKicked$1(user) {
      return "\ud83d\udc5e Du hast " + user + " rausgeworfen";
    },
    youUnbannedUser$1(user) {
      return "Du hast die Verbannung von " + user + " r\xfcckg\xe4ngig gemacht";
    },
    hasKnocked$1(user) {
      return "\ud83d\udeaa " + user + " hat angeklopft";
    },
    get$users() {
      return "Benutzer";
    },
    countFiles$1(count) {
      return "" + count + " Dateien";
    },
    get$user() {
      return "Benutzer";
    },
    get$custom() {
      return "Benutzerdefiniert";
    },
    get$noKeyForThisMessage() {
      return "Dies kann passieren, wenn die Nachricht gesendet wurde, bevor du dich auf diesem Ger\xe4t bei deinem Konto angemeldet hast.\n\nEs ist auch m\xf6glich, dass der Absender dein Ger\xe4t blockiert hat oder etwas mit der Internetverbindung schief gelaufen ist.\n\nKannst du die Nachricht in einer anderen Sitzung lesen? Dann kannst du die Nachricht davon \xfcbertragen! Gehe zu den Einstellungen > Ger\xe4te und vergewissere dich, dass sich deine Ger\xe4te gegenseitig verifiziert haben. Wenn du den Raum das n\xe4chste Mal \xf6ffnest und beide Sitzungen im Vordergrund sind, werden die Schl\xfcssel automatisch \xfcbertragen.\n\nDu m\xf6chtest die Schl\xfcssel beim Abmelden oder Ger\xe4tewechsel nicht verlieren? Stelle sicher, dass du das Chat-Backup in den Einstellungen aktiviert hast.";
    },
    wasDirectChatDisplayName$1(oldDisplayName) {
      return "Leerer Chat (war " + oldDisplayName + ")";
    },
    get$reopenChat() {
      return "Chat wieder er\xf6ffnen";
    },
    get$noOtherDevicesFound() {
      return "Keine anderen Ger\xe4te anwesend";
    },
    fileIsTooBigForServer$1(max) {
      return "Kann nicht gesendet werden! Der Server unterst\xfctzt nur Anh\xe4nge bis h\xf6chstens " + max + ".";
    },
    get$jumpToLastReadMessage() {
      return "Zur letzten ungelesenen Nachricht";
    },
    get$readUpToHere() {
      return "Bis hier gelesen";
    },
    get$jump() {
      return "Springen";
    },
    get$openLinkInBrowser() {
      return "Link im Browser \xf6ffnen";
    },
    get$setColorTheme() {
      return "Farbdesign einstellen:";
    },
    get$invite() {
      return "Einladen";
    },
    get$invalidInput() {
      return "Ung\xfcltige Eingabe!";
    },
    wrongPinEntered$1(seconds) {
      return "Falsche PIN eingegeben! Bitte in " + seconds + " Sekunden erneut versuchen ...";
    },
    get$pleaseEnterANumber() {
      return "Bitte eine Zahl gr\xf6\xdfer 0 eingeben";
    },
    get$removeDevicesDescription() {
      return "Du wirst von diesem Ger\xe4t abgemeldet und kannst dann dort keine Nachrichten mehr empfangen.";
    },
    get$banUserDescription() {
      return "Der Benutzer wird aus dem Chat gebannt und kann den Chat erst wieder betreten, wenn die Verbannung aufgehoben wird.";
    },
    get$unbanUserDescription() {
      return "Der Benutzer kann den Chat dann wieder betreten, wenn er es versucht.";
    },
    get$kickUserDescription() {
      return "Der Benutzer wird aus dem Chat geworfen, aber nicht gebannt. In \xf6ffentlichen Chats kann der Benutzer jederzeit wieder beitreten.";
    },
    get$makeAdminDescription() {
      return "Sobald du diesen Benutzer zum Administrator gemacht hast, kannst du das m\xf6glicherweise nicht mehr r\xfcckg\xe4ngig machen, da er dann \xfcber dieselben Berechtigungen wie du verf\xfcgt.";
    },
    get$yourGlobalUserIdIs() {
      return "Deine globale Benutzer-ID ist: ";
    },
    noUsersFoundWithQuery$1(query) {
      return 'Leider konnte mit "' + query + '" kein Benutzer gefunden werden. Bitte schau nach, ob dir ein Tippfehler unterlaufen ist.';
    },
    get$knocking() {
      return "Klopft";
    },
    get$nothingFound() {
      return "Nichts gefunden ...";
    },
    get$groupName() {
      return "Gruppenname";
    },
    get$wrongRecoveryKey() {
      return "Entschuldigung ... das scheint nicht der richtige Wiederherstellungsschl\xfcssel zu sein.";
    },
    get$startConversation() {
      return "Unterhaltung starten";
    },
    get$commandHint_sendraw() {
      return "Rohes JSON senden";
    },
    get$leaveEmptyToClearStatus() {
      return "Leer lassen, um den Status zu l\xf6schen.";
    },
    get$searchForUsers() {
      return "Suche nach @benutzer ...";
    },
    get$pleaseEnterYourCurrentPassword() {
      return "Bitte dein aktuelles Passwort eingeben";
    },
    get$newPassword() {
      return "Neues Passwort";
    },
    get$pleaseChooseAStrongPassword() {
      return "Bitte w\xe4hle ein starkes Passwort";
    },
    get$passwordsDoNotMatch() {
      return "Passw\xf6rter stimmen nicht \xfcberein";
    },
    get$passwordIsWrong() {
      return "Dein eingegebenes Passwort ist falsch";
    },
    get$decline() {
      return "Ablehnen";
    },
    get$thisDevice() {
      return "Dieses Ger\xe4t:";
    },
    get$initAppError() {
      return "Beim Starten der App ist ein Fehler aufgetreten";
    },
    searchIn$1(chat) {
      return 'In Chat "' + chat + '" suchen ...';
    },
    get$searchMore() {
      return "Weiter suchen ...";
    },
    get$gallery() {
      return "Galerie";
    },
    get$files(_) {
      return "Dateien";
    },
    sessionLostBody$2(url, error) {
      return string$.Die_Ap + url + ". Die Fehlermeldung lautet: " + error;
    },
    restoreSessionBody$2(url, error) {
      return string$.Die_Ap + url + ". Die Fehlermeldung lautet: " + error;
    },
    get$sendReadReceipts() {
      return "Lesebest\xe4tigungen senden";
    },
    get$sendTypingNotificationsDescription() {
      return "Andere Teilnehmer in einem Chat k\xf6nnen sehen, wenn du eine neue Nachricht tippst.";
    },
    get$sendReadReceiptsDescription() {
      return "Andere Teilnehmer in einem Chat k\xf6nnen sehen, ob du eine Nachricht gelesen hast.";
    },
    get$verifyOtherDevice() {
      return "\ud83d\udd10 Anderes Ger\xe4t verifizieren";
    },
    get$verifyOtherDeviceDescription() {
      return "Wenn du ein anderes Ger\xe4t verifizieren, k\xf6nnen diese Ger\xe4teschl\xfcssel austauschen, was die Sicherheit insgesamt erh\xf6ht. \ud83d\udcaa\n\nSobald du eine Verifizierung starten, erscheint ein Pop-up in der App auf beiden Ger\xe4ten. Dort siehst du dann eine Reihe von Emojis oder Zahlen, die du miteinander vergleichen musst.\n\nAm besten h\xe4ltst du beide Ger\xe4te bereit, bevor du die Verifizierung startest. \ud83e\udd33";
    },
    acceptedKeyVerification$1(sender) {
      return sender + " hat die Schl\xfcsselverifikation akzeptiert";
    },
    canceledKeyVerification$1(sender) {
      return sender + " hat die Schl\xfcsselverifikation abgebrochen";
    },
    completedKeyVerification$1(sender) {
      return sender + " hat die Schl\xfcsselverifikation abgeschlossen";
    },
    isReadyForKeyVerification$1(sender) {
      return sender + " ist bereit f\xfcr die Schl\xfcsselverifikation";
    },
    requestedKeyVerification$1(sender) {
      return sender + " hat eine Schl\xfcsselverifikation angefragt";
    },
    startedKeyVerification$1(sender) {
      return sender + " hat die Schl\xfcsselverifikation gestartet";
    },
    get$stickers() {
      return "Sticker";
    },
    get$commandHint_ignore() {
      return "Angegebene Matrix-ID ignorieren";
    },
    get$commandHint_unignore() {
      return "Angegebene Matrix-ID nicht mehr ignorieren";
    },
    thereAreCountUsersBlocked$1(count) {
      return "Im Augenblick werden " + count + " Benutzer blockiert.";
    },
    get$restricted() {
      return "Beschr\xe4nkt";
    },
    get$markAsUnread() {
      return "Als ungelesen markieren";
    },
    userLevel$1(level) {
      return "" + level + " - Benutzer";
    },
    moderatorLevel$1(level) {
      return "" + level + " - Moderator";
    },
    adminLevel$1(level) {
      return "" + level + " - Administrator";
    },
    get$changeTheVisibilityOfChatHistory() {
      return "Wechsele die Sichtbarkeit der Chat-Historie";
    },
    get$changeTheCanonicalRoomAlias() {
      return "\xc4ndern der Hauptadresse f\xfcr den \xf6ffentlichen Chat";
    },
    get$sendRoomNotifications() {
      return "Sende eine @room-Benachrichtigung";
    },
    get$chatPermissionsDescription() {
      return "Einstellen, welches Level f\xfcr bestimmte Aktionen in diesem Chat erforderlich ist. Die Level 0, 50 und 100 stehen \xfcblicherweise f\xfcr Benutzer, Moderatoren und Admins, aber jede Abstufung ist m\xf6glich.";
    },
    updateInstalled$1(version) {
      return "\ud83c\udf89 Update " + version + " installiert!";
    },
    get$sendCanceled() {
      return "Senden abgebrochen";
    },
    get$doesNotSeemToBeAValidHomeserver() {
      return "Scheint kein kompatibler Homeserver zu sein. Falsche URL?";
    },
    get$calculatingFileSize() {
      return "Dateigr\xf6\xdfe wird berechnet ...";
    },
    get$prepareSendingAttachment() {
      return "Anhang zum Senden vorbereiten ...";
    },
    get$sendingAttachment() {
      return "Anhang wird gesendet ...";
    },
    sendingAttachmentCountOfCount$2(index, $length) {
      return "Sende Anhang " + index + " von " + $length + " ...";
    },
    serverLimitReached$1(seconds) {
      return "Server-Limit erreicht! Warte " + seconds + " Sekunden ...";
    },
    get$noticeChatBackupDeviceVerification() {
      return "Hinweis: Wenn du alle deine Ger\xe4te mit dem Chat-Backup verbindest, sind sie automatisch verifiziert.";
    },
    get$continueText() {
      return "Fortfahren";
    },
    get$blur(_) {
      return "Verwischen:";
    },
    get$opacity(_) {
      return "Deckkraft:";
    },
    get$setWallpaper() {
      return "Hintergrund \xe4ndern";
    },
    get$noContactInformationProvided() {
      return "Der Server stellt keine g\xfcltigen Kontaktinformationen bereit";
    },
    get$contactServerAdmin() {
      return "Serveradministrator kontaktieren";
    },
    get$contactServerSecurity() {
      return "Server-Sicherheit kontaktieren";
    },
    get$supportPage() {
      return "Support-Seite";
    },
    get$serverInformation() {
      return "Server-Informationen:";
    },
    get$name(_) {
      return "Name";
    },
    get$version(_) {
      return "Version";
    },
    get$compress() {
      return "Komprimieren";
    },
    get$boldText() {
      return "Fetter Text";
    },
    get$italicText() {
      return "Kursiver Text";
    },
    get$strikeThrough() {
      return "Durchgestrichen";
    },
    get$pleaseFillOut() {
      return "Bitte ausf\xfcllen";
    },
    get$invalidUrl() {
      return "Ung\xfcltige URL";
    },
    get$addLink() {
      return "Link hinzuf\xfcgen";
    },
    get$unableToJoinChat() {
      return "Chat kann nicht beigetreten werden. M\xf6glicherweise hat die Gegenseite das Gespr\xe4ch bereits beendet.";
    },
    get$previous() {
      return "Vorige";
    },
    get$otherPartyNotLoggedIn() {
      return "Der User ist aktuell nicht eingeloggt und kann daher keine Nachrichten empfangen!";
    },
    get$open(_) {
      return "Offen";
    },
    get$waitingForServer() {
      return "Auf Server warten...";
    },
    get$newChatRequest() {
      return "\ud83d\udce9 Neue Chat-Anfrage";
    },
    get$contentNotificationSettings() {
      return "Einstellungen f\xfcr Inhaltsbenachrichtigungen";
    },
    get$generalNotificationSettings() {
      return "Allgemeine Benachrichtigungseinstellungen";
    },
    get$roomNotificationSettings() {
      return "Einstellungen f\xfcr Raumbenachrichtigungen";
    },
    get$userSpecificNotificationSettings() {
      return "Benutzerspezifische Benachrichtigungseinstellungen";
    },
    get$otherNotificationSettings() {
      return "Andere Benachrichtigungseinstellungen";
    },
    get$notificationRuleContainsUserName() {
      return "Enth\xe4lt Benutzernamen";
    },
    get$notificationRuleContainsUserNameDescription() {
      return "Benachrichtigt den Benutzer, wenn eine Nachricht seinen Benutzernamen enth\xe4lt.";
    },
    get$notificationRuleMaster() {
      return "Alle Benachrichtigungen stummschalten";
    },
    get$notificationRuleMasterDescription() {
      return "Setzt alle anderen Regeln au\xdfer Kraft und deaktiviert alle Benachrichtigungen.";
    },
    get$notificationRuleSuppressNotices() {
      return "Automatisierte Nachrichten unterdr\xfccken";
    },
    get$notificationRuleSuppressNoticesDescription() {
      return "Unterdr\xfcckt Benachrichtigungen von automatisierten Clients wie Bots.";
    },
    get$notificationRuleInviteForMe() {
      return "Einladung f\xfcr mich";
    },
    get$notificationRuleInviteForMeDescription() {
      return "Benachrichtigt den Benutzer, wenn er in einen Raum eingeladen wird.";
    },
    get$notificationRuleMemberEvent() {
      return "Mitgliederveranstaltung";
    },
    get$notificationRuleMemberEventDescription() {
      return "Unterdr\xfcckt Benachrichtigungen zu Mitgliedschaftsereignissen.";
    },
    get$notificationRuleIsUserMention() {
      return "Benutzererw\xe4hnung";
    },
    get$notificationRuleIsUserMentionDescription() {
      return "Benachrichtigt den Benutzer, wenn er in einer Nachricht direkt erw\xe4hnt wird.";
    },
    get$notificationRuleContainsDisplayName() {
      return "Enth\xe4lt den Anzeigenamen";
    },
    get$notificationRuleContainsDisplayNameDescription() {
      return "Benachrichtigt den Benutzer, wenn eine Nachricht seinen Anzeigenamen enth\xe4lt.";
    },
    get$notificationRuleIsRoomMention() {
      return "Chat-Erw\xe4hnung";
    },
    get$notificationRuleIsRoomMentionDescription() {
      return "Benachrichtigt den Benutzer, wenn ein Raum erw\xe4hnt wird.";
    },
    get$notificationRuleRoomnotif() {
      return "Chat-Benachritigung";
    },
    get$notificationRuleRoomnotifDescription() {
      return "Benachrichtigt den Benutzer, wenn eine Nachricht \u201e@room\u201c enth\xe4lt.";
    },
    get$notificationRuleTombstone() {
      return "Tombstone";
    },
    get$notificationRuleTombstoneDescription() {
      return "Benachrichtigt den Benutzer \xfcber Nachrichten zur Raumdeaktivierung.";
    },
    get$notificationRuleReaction() {
      return "Reaktion";
    },
    get$notificationRuleReactionDescription() {
      return "Unterdr\xfcckt Benachrichtigungen f\xfcr Reaktionen.";
    },
    get$notificationRuleRoomServerAcl() {
      return "Raumserver-ACL";
    },
    get$notificationRuleRoomServerAclDescription() {
      return "Unterdr\xfcckt Benachrichtigungen f\xfcr Raumserver-Zugriffskontrolllisten (ACL).";
    },
    get$notificationRuleSuppressEdits() {
      return "Unterdr\xfcckt Bearbeitungen";
    },
    get$notificationRuleSuppressEditsDescription() {
      return "Unterdr\xfcckt Benachrichtigungen f\xfcr bearbeitete Nachrichten.";
    },
    get$notificationRuleCall() {
      return "Anruf";
    },
    get$notificationRuleCallDescription() {
      return "Benachrichtigt den Benutzer \xfcber Anrufe.";
    },
    get$notificationRuleEncryptedRoomOneToOne() {
      return "Verschl\xfcsselter Einzelchat";
    },
    get$notificationRuleEncryptedRoomOneToOneDescription() {
      return "Benachrichtigt den Benutzer \xfcber Nachrichten in verschl\xfcsselten Eins-zu-Eins-Chats.";
    },
    get$notificationRuleRoomOneToOne() {
      return "Einzelchat";
    },
    get$notificationRuleRoomOneToOneDescription() {
      return "Benachrichtigt den Benutzer \xfcber Nachrichten in Einzelchats.";
    },
    get$notificationRuleMessage() {
      return "Nachricht";
    },
    get$notificationRuleMessageDescription() {
      return "Informiert den Benutzer \xfcber allgemeine Nachrichten.";
    },
    get$notificationRuleEncrypted() {
      return "Verschl\xfcsselt";
    },
    get$notificationRuleEncryptedDescription() {
      return "Benachrichtigt den Benutzer \xfcber Nachrichten in verschl\xfcsselten R\xe4umen.";
    },
    get$notificationRuleJitsi() {
      return "Jitsi";
    },
    get$notificationRuleJitsiDescription() {
      return "Benachrichtigt den Benutzer \xfcber Jitsi-Widget-Ereignisse.";
    },
    get$notificationRuleServerAcl() {
      return "Unterdr\xfccken von Server-ACL-Ereignissen";
    },
    get$notificationRuleServerAclDescription() {
      return "Unterdr\xfcckt Benachrichtigungen f\xfcr Server-ACL-Ereignisse.";
    },
    unknownPushRule$1(rule) {
      return "Unbekannte Push-Regel '" + rule + "'";
    },
    sentVoiceMessage$2(sender, duration) {
      return "\ud83c\udf99\ufe0f " + duration + " - " + sender;
    },
    get$deletePushRuleCanNotBeUndone() {
      return "Wenn Sie diese Benachrichtigungseinstellung l\xf6schen, kann dies nicht r\xfcckg\xe4ngig gemacht werden.";
    },
    get$more() {
      return "Mehr";
    },
    get$shareKeysWith() {
      return "Schl\xfcssel teilen mit...";
    },
    get$shareKeysWithDescription() {
      return "Welchen Ger\xe4ten sollte vertraut werden, damit sie deine Nachrichten in verschl\xfcsselten Chats mitlesen k\xf6nnen?";
    },
    get$allDevices() {
      return "Alle Ger\xe4te";
    },
    get$crossVerifiedDevicesIfEnabled() {
      return "Cross-verifizierte Ger\xe4te, falls aktiviert";
    },
    get$crossVerifiedDevices() {
      return "Cross-verifizierte Ger\xe4te";
    },
    get$verifiedDevicesOnly() {
      return "Nur verifizierte Ger\xe4te";
    },
    get$optionalMessage() {
      return "(Optionale) Nachricht...";
    },
    get$notSupportedOnThisDevice() {
      return "Nicht unterst\xfctzt auf diesem Ger\xe4t";
    },
    get$enterNewChat() {
      return "Neuen Chat betreten";
    },
    get$approve() {
      return "Genehmigen";
    },
    get$commandHint_logout() {
      return "Logout your current device";
    },
    get$commandHint_logoutall() {
      return "Logout all active devices";
    },
    get$customReaction() {
      return "Custom reaction";
    },
    writeAMessageLangCodes$2(l1, l2) {
      return "Type in " + l1 + " or " + l2 + "...";
    },
    get$holdForInfo() {
      return "Click and hold for word info.";
    },
    get$greenFeedback() {
      return "That's what I would put!";
    },
    get$yellowFeedback() {
      return "Hm, you can try that and see if it works! To use this word, just click it again.";
    },
    get$redFeedback() {
      return "I don't think that's right...";
    },
    get$itInstructionsTitle() {
      return "I can help you translate!";
    },
    get$itInstructionsBody() {
      return "You can click and hold choices for word info.";
    },
    get$gaTooltip() {
      return "L2 use with grammar assistance";
    },
    get$taTooltip() {
      return "L2 use with translation assistance";
    },
    get$interactiveTranslatorSliderHeader() {
      return "Interactive Translator";
    },
    get$interactiveGrammarSliderHeader() {
      return "Interactive Grammar Checker";
    },
    get$waTooltip() {
      return "L2 use without assistance";
    },
    get$noIdenticalLanguages() {
      return "Please choose different base and target languages";
    },
    get$joinWithClassCode() {
      return "Join course";
    },
    get$languageLevelPreA1() {
      return "True Beginner (Pre A1)";
    },
    get$languageLevelA1() {
      return "Beginner (A1)";
    },
    get$languageLevelA2() {
      return "Elementary (A2)";
    },
    get$languageLevelB1() {
      return "Intermediate (B1)";
    },
    get$languageLevelB2() {
      return "Upper Intermediate (B2)";
    },
    get$languageLevelC1() {
      return "Advanced (C1)";
    },
    get$languageLevelC2() {
      return "Mastery (C2)";
    },
    get$changeTheNameOfTheClass() {
      return "Change the name";
    },
    get$changeTheNameOfTheChat() {
      return "Change the name of the chat";
    },
    get$sorryNoResults() {
      return "Sorry, no results.";
    },
    get$ignoreInThisText() {
      return "Ignore";
    },
    needsItMessage$1(targetLanguage) {
      return "Wait, that's not " + targetLanguage + "! Do you need help translating?";
    },
    get$countryInformation() {
      return "My country";
    },
    get$targetLanguage() {
      return "Target Language";
    },
    get$updateLanguage() {
      return "My languages";
    },
    get$whatLanguageYouWantToLearn() {
      return "What language do you want to learn?";
    },
    get$whatIsYourBaseLanguage() {
      return "What is your base language?";
    },
    get$saveChanges() {
      return "Save changes";
    },
    get$publicProfileTitle() {
      return "Allow my profile to be found in search";
    },
    get$publicProfileDesc() {
      return "By turning on, you enable other users to find your profile in the global search bar and send requests to chat. At this point, you can choose to accept or deny the request.";
    },
    get$errorDisableIT() {
      return "Translation assistance is turned off.";
    },
    get$errorDisableIGC() {
      return "Grammar assistance is turned off.";
    },
    get$errorDisableLanguageAssistance() {
      return "Translation assistance and grammar assistance are turned off.";
    },
    get$errorDisableITUserDesc() {
      return "Click here to update translation assistance settings";
    },
    get$errorDisableIGCUserDesc() {
      return "Click here to update grammar assistance settings";
    },
    get$errorDisableLanguageAssistanceUserDesc() {
      return "Click here to update translation assistance and grammar assistance settings";
    },
    get$errorDisableITClassDesc() {
      return "Translation assistance is turned off for the course that this chat is in.";
    },
    get$errorDisableIGCClassDesc() {
      return "Grammar assistance is turned off for the course that this chat is in.";
    },
    get$error405Title() {
      return "Languages not set";
    },
    get$error405Desc() {
      return "Please set your languages in Main Menu > Learning Settings.";
    },
    get$termsAndConditions() {
      return "Terms and Conditions";
    },
    get$andCertifyIAmAtLeast13YearsOfAge() {
      return " and certify I am at least 16 years of age.";
    },
    get$error502504Title() {
      return "Wow, there are a lot of students online!";
    },
    get$error502504Desc() {
      return "Translation and grammar tools may be slow or unavailable while the Pangea bots catch up.";
    },
    get$error404Title() {
      return "Translation error!";
    },
    get$error404Desc() {
      return "Pangea Bot isn't sure how to translate that...";
    },
    get$errorPleaseRefresh() {
      return "We're looking into it! Please reload and try again.";
    },
    get$connectedToStaging() {
      return "Connected to Staging";
    },
    get$learningSettings() {
      return "Learning settings";
    },
    get$participants() {
      return "Participants";
    },
    get$clickMessageTitle() {
      return "Need help?";
    },
    get$clickMessageBody() {
      return "Click a message for language tools like translation, play back and more!";
    },
    get$allDone() {
      return "All done!";
    },
    get$vocab() {
      return "Vocab";
    },
    get$subscribe(_) {
      return "Subscribe";
    },
    get$getAccess() {
      return "Subscribe now!";
    },
    get$subscriptionDesc() {
      return "Messaging is free! Subscribe to unlock interactive translation, grammar checking and learning analytics.";
    },
    get$subscriptionManagement() {
      return "Subscription Management";
    },
    get$currentSubscription() {
      return "Current Subscription";
    },
    get$cancelSubscription() {
      return "Cancel your subscription";
    },
    get$selectYourPlan() {
      return "Select Your Plan";
    },
    get$subsciptionPlatformTooltip() {
      return "Please login to your original device to manage your subscription plan";
    },
    get$subscriptionManagementUnavailable() {
      return "Subscription management not available";
    },
    get$paymentMethod() {
      return "Payment Method";
    },
    get$paymentHistory() {
      return "Payment History";
    },
    get$emptyChatDownloadWarning() {
      return "Cannot download empty chat";
    },
    get$toggleImmersionMode() {
      return "Immersion Mode";
    },
    get$toggleImmersionModeDesc() {
      return "When enabled, all messages are displayed in your target language. This setting is most useful in language exchanges.";
    },
    get$itToggleDescription() {
      return "This language learning tool will identify words in your base language and help you translate them to your target language. Though rare, the AI can make translation errors.";
    },
    get$igcToggleDescription() {
      return "This language learning tool will identify common spelling, grammar and punctuation errors in your message and suggest corrections. Though rare, the AI can make correction errors.";
    },
    get$originalMessage() {
      return "Original Message";
    },
    get$sentMessage() {
      return "Sent Message";
    },
    get$useType() {
      return "Use Type";
    },
    get$notAvailable() {
      return "Not Available";
    },
    get$taAndGaTooltip() {
      return "L2 use with translation assistance and grammar assistance";
    },
    get$definitionsToolName() {
      return "Word Definitions";
    },
    get$definitionsToolDescription() {
      return "When enabled, words underlined in blue can be clicked for definitions. Click messages to access definitions.";
    },
    get$welcomeBack() {
      return "Welcome back! If you were part of the 2023-2024 pilot, please contact us for your special pilot subscription. If you are a teacher who has (or whose institution has) purchased licenses for your class, contact us for your teacher subscription.";
    },
    get$downloadTxtFile() {
      return "Download Text File";
    },
    get$downloadCSVFile() {
      return "Download CSV File";
    },
    get$promotionalSubscriptionDesc() {
      return "You currently have a lifetime promotional subscription. Message support@pangea.chat for help changing your subscription.";
    },
    originalSubscriptionPlatform$1(purchasePlatform) {
      return "Subscription purchased through " + purchasePlatform;
    },
    get$oneWeekTrial() {
      return "One Week Trial";
    },
    get$downloadXLSXFile() {
      return "Download Excel File";
    },
    get$unkDisplayName() {
      return "Unknown";
    },
    get$wwCountryDisplayName() {
      return "World Wide";
    },
    get$afCountryDisplayName() {
      return "Afghanistan";
    },
    get$axCountryDisplayName() {
      return "Aland Islands";
    },
    get$alCountryDisplayName() {
      return "Albania";
    },
    get$dzCountryDisplayName() {
      return "Algeria";
    },
    get$asCountryDisplayName() {
      return "American Samoa";
    },
    get$adCountryDisplayName() {
      return "Andorra";
    },
    get$aoCountryDisplayName() {
      return "Angola";
    },
    get$aiCountryDisplayName() {
      return "Anguilla";
    },
    get$agCountryDisplayName() {
      return "Antigua and Barbuda";
    },
    get$arCountryDisplayName() {
      return "Argentina";
    },
    get$amCountryDisplayName() {
      return "Armenia";
    },
    get$awCountryDisplayName() {
      return "Aruba";
    },
    get$acCountryDisplayName() {
      return "Ascension Island";
    },
    get$auCountryDisplayName() {
      return "Australia";
    },
    get$atCountryDisplayName() {
      return "Austria";
    },
    get$azCountryDisplayName() {
      return "Azerbaijan";
    },
    get$bsCountryDisplayName() {
      return "Bahamas";
    },
    get$bhCountryDisplayName() {
      return "Bahrain";
    },
    get$bdCountryDisplayName() {
      return "Bangladesh";
    },
    get$bbCountryDisplayName() {
      return "Barbados";
    },
    get$byCountryDisplayName() {
      return "Belarus";
    },
    get$beCountryDisplayName() {
      return "Belgium";
    },
    get$bzCountryDisplayName() {
      return "Belize";
    },
    get$bjCountryDisplayName() {
      return "Benin";
    },
    get$bmCountryDisplayName() {
      return "Bermuda";
    },
    get$btCountryDisplayName() {
      return "Bhutan";
    },
    get$boCountryDisplayName() {
      return "Bolivia";
    },
    get$baCountryDisplayName() {
      return "Bosnia and Herzegovina";
    },
    get$bwCountryDisplayName() {
      return "Botswana";
    },
    get$brCountryDisplayName() {
      return "Brazil";
    },
    get$ioCountryDisplayName() {
      return "British Indian Ocean Territory";
    },
    get$vgCountryDisplayName() {
      return "British Virgin Islands";
    },
    get$bnCountryDisplayName() {
      return "Brunei";
    },
    get$bgCountryDisplayName() {
      return "Bulgaria";
    },
    get$bfCountryDisplayName() {
      return "Burkina Faso";
    },
    get$biCountryDisplayName() {
      return "Burundi";
    },
    get$khCountryDisplayName() {
      return "Cambodia";
    },
    get$cmCountryDisplayName() {
      return "Cameroon";
    },
    get$caCountryDisplayName() {
      return "Canada";
    },
    get$cvCountryDisplayName() {
      return "Cape Verde";
    },
    get$bqCountryDisplayName() {
      return "Caribbean Netherlands";
    },
    get$kyCountryDisplayName() {
      return "Cayman Islands";
    },
    get$cfCountryDisplayName() {
      return "Central African Republic";
    },
    get$tdCountryDisplayName() {
      return "Chad";
    },
    get$clCountryDisplayName() {
      return "Chile";
    },
    get$cnCountryDisplayName() {
      return "China";
    },
    get$cxCountryDisplayName() {
      return "Christmas Island";
    },
    get$ccCountryDisplayName() {
      return "Cocos [Keeling] Islands";
    },
    get$coCountryDisplayName() {
      return "Colombia";
    },
    get$kmCountryDisplayName() {
      return "Comoros";
    },
    get$cdCountryDisplayName() {
      return "Democratic Republic Congo";
    },
    get$cgCountryDisplayName() {
      return "Republic of Congo";
    },
    get$ckCountryDisplayName() {
      return "Cook Islands";
    },
    get$crCountryDisplayName() {
      return "Costa Rica";
    },
    get$ciCountryDisplayName() {
      return "C\xf4te d'Ivoire";
    },
    get$hrCountryDisplayName() {
      return "Croatia";
    },
    get$cuCountryDisplayName() {
      return "Cuba";
    },
    get$cwCountryDisplayName() {
      return "Cura\xe7ao";
    },
    get$cyCountryDisplayName() {
      return "Cyprus";
    },
    get$czCountryDisplayName() {
      return "Czech Republic";
    },
    get$dkCountryDisplayName() {
      return "Denmark";
    },
    get$djCountryDisplayName() {
      return "Djibouti";
    },
    get$dmCountryDisplayName() {
      return "Dominica";
    },
    get$doCountryDisplayName() {
      return "Dominican Republic";
    },
    get$tlCountryDisplayName() {
      return "East Timor";
    },
    get$ecCountryDisplayName() {
      return "Ecuador";
    },
    get$egCountryDisplayName() {
      return "Egypt";
    },
    get$svCountryDisplayName() {
      return "El Salvador";
    },
    get$gqCountryDisplayName() {
      return "Equatorial Guinea";
    },
    get$erCountryDisplayName() {
      return "Eritrea";
    },
    get$eeCountryDisplayName() {
      return "Estonia";
    },
    get$szCountryDisplayName() {
      return "Eswatini";
    },
    get$etCountryDisplayName() {
      return "Ethiopia";
    },
    get$fkCountryDisplayName() {
      return "Falkland Islands";
    },
    get$foCountryDisplayName() {
      return "Faroe Islands";
    },
    get$fjCountryDisplayName() {
      return "Fiji";
    },
    get$fiCountryDisplayName() {
      return "Finland";
    },
    get$frCountryDisplayName() {
      return "France";
    },
    get$gfCountryDisplayName() {
      return "French Guiana";
    },
    get$pfCountryDisplayName() {
      return "French Polynesia";
    },
    get$gaCountryDisplayName() {
      return "Gabon";
    },
    get$gmCountryDisplayName() {
      return "Gambia";
    },
    get$geCountryDisplayName() {
      return "Georgia";
    },
    get$deCountryDisplayName() {
      return "Germany";
    },
    get$ghCountryDisplayName() {
      return "Ghana";
    },
    get$giCountryDisplayName() {
      return "Gibraltar";
    },
    get$grCountryDisplayName() {
      return "Greece";
    },
    get$glCountryDisplayName() {
      return "Greenland";
    },
    get$gdCountryDisplayName() {
      return "Grenada";
    },
    get$gpCountryDisplayName() {
      return "Guadeloupe";
    },
    get$guCountryDisplayName() {
      return "Guam";
    },
    get$gtCountryDisplayName() {
      return "Guatemala";
    },
    get$ggCountryDisplayName() {
      return "Guernsey";
    },
    get$gnCountryDisplayName() {
      return "Guinea Conakry";
    },
    get$gwCountryDisplayName() {
      return "Guinea-Bissau";
    },
    get$gyCountryDisplayName() {
      return "Guyana";
    },
    get$htCountryDisplayName() {
      return "Haiti";
    },
    get$hmCountryDisplayName() {
      return "Heard Island and McDonald Islands";
    },
    get$hnCountryDisplayName() {
      return "Honduras";
    },
    get$hkCountryDisplayName() {
      return "Hong Kong";
    },
    get$huCountryDisplayName() {
      return "Hungary";
    },
    get$isCountryDisplayName() {
      return "Iceland";
    },
    get$inCountryDisplayName() {
      return "India";
    },
    get$idCountryDisplayName() {
      return "Indonesia";
    },
    get$irCountryDisplayName() {
      return "Iran";
    },
    get$iqCountryDisplayName() {
      return "Iraq";
    },
    get$ieCountryDisplayName() {
      return "Ireland";
    },
    get$imCountryDisplayName() {
      return "Isle of Man";
    },
    get$ilCountryDisplayName() {
      return "Israel";
    },
    get$itCountryDisplayName() {
      return "Italy";
    },
    get$jmCountryDisplayName() {
      return "Jamaica";
    },
    get$jpCountryDisplayName() {
      return "Japan";
    },
    get$jeCountryDisplayName() {
      return "Jersey";
    },
    get$joCountryDisplayName() {
      return "Jordan";
    },
    get$kzCountryDisplayName() {
      return "Kazakhstan";
    },
    get$keCountryDisplayName() {
      return "Kenya";
    },
    get$kiCountryDisplayName() {
      return "Kiribati";
    },
    get$xkCountryDisplayName() {
      return "Kosovo";
    },
    get$kwCountryDisplayName() {
      return "Kuwait";
    },
    get$kgCountryDisplayName() {
      return "Kyrgyzstan";
    },
    get$laCountryDisplayName() {
      return "Laos";
    },
    get$lvCountryDisplayName() {
      return "Latvia";
    },
    get$lbCountryDisplayName() {
      return "Lebanon";
    },
    get$lsCountryDisplayName() {
      return "Lesotho";
    },
    get$lrCountryDisplayName() {
      return "Liberia";
    },
    get$lyCountryDisplayName() {
      return "Libya";
    },
    get$liCountryDisplayName() {
      return "Liechtenstein";
    },
    get$ltCountryDisplayName() {
      return "Lithuania";
    },
    get$luCountryDisplayName() {
      return "Luxembourg";
    },
    get$moCountryDisplayName() {
      return "Macau";
    },
    get$mkCountryDisplayName() {
      return "Macedonia";
    },
    get$mgCountryDisplayName() {
      return "Madagascar";
    },
    get$mwCountryDisplayName() {
      return "Malawi";
    },
    get$myCountryDisplayName() {
      return "Malaysia";
    },
    get$mvCountryDisplayName() {
      return "Maldives";
    },
    get$mlCountryDisplayName() {
      return "Mali";
    },
    get$mtCountryDisplayName() {
      return "Malta";
    },
    get$mhCountryDisplayName() {
      return "Marshall Islands";
    },
    get$mqCountryDisplayName() {
      return "Martinique";
    },
    get$mrCountryDisplayName() {
      return "Mauritania";
    },
    get$muCountryDisplayName() {
      return "Mauritius";
    },
    get$ytCountryDisplayName() {
      return "Mayotte";
    },
    get$mxCountryDisplayName() {
      return "Mexico";
    },
    get$fmCountryDisplayName() {
      return "Micronesia";
    },
    get$mdCountryDisplayName() {
      return "Moldova";
    },
    get$mcCountryDisplayName() {
      return "Monaco";
    },
    get$mnCountryDisplayName() {
      return "Mongolia";
    },
    get$meCountryDisplayName() {
      return "Montenegro";
    },
    get$msCountryDisplayName() {
      return "Montserrat";
    },
    get$maCountryDisplayName() {
      return "Morocco";
    },
    get$mzCountryDisplayName() {
      return "Mozambique";
    },
    get$mmCountryDisplayName() {
      return "Myanmar (Burma)";
    },
    get$naCountryDisplayName() {
      return "Namibia";
    },
    get$nrCountryDisplayName() {
      return "Nauru";
    },
    get$npCountryDisplayName() {
      return "Nepal";
    },
    get$nlCountryDisplayName() {
      return "Netherlands";
    },
    get$ncCountryDisplayName() {
      return "New Caledonia";
    },
    get$nzCountryDisplayName() {
      return "New Zealand";
    },
    get$niCountryDisplayName() {
      return "Nicaragua";
    },
    get$neCountryDisplayName() {
      return "Niger";
    },
    get$ngCountryDisplayName() {
      return "Nigeria";
    },
    get$nuCountryDisplayName() {
      return "Niue";
    },
    get$nfCountryDisplayName() {
      return "Norfolk Island";
    },
    get$kpCountryDisplayName() {
      return "North Korea";
    },
    get$mpCountryDisplayName() {
      return "Northern Mariana Islands";
    },
    get$noCountryDisplayName() {
      return "Norway";
    },
    get$omCountryDisplayName() {
      return "Oman";
    },
    get$pkCountryDisplayName() {
      return "Pakistan";
    },
    get$pwCountryDisplayName() {
      return "Palau";
    },
    get$psCountryDisplayName() {
      return "Palestinian Territories";
    },
    get$paCountryDisplayName() {
      return "Panama";
    },
    get$pgCountryDisplayName() {
      return "Papua New Guinea";
    },
    get$pyCountryDisplayName() {
      return "Paraguay";
    },
    get$peCountryDisplayName() {
      return "Peru";
    },
    get$phCountryDisplayName() {
      return "Philippines";
    },
    get$plCountryDisplayName() {
      return "Poland";
    },
    get$ptCountryDisplayName() {
      return "Portugal";
    },
    get$prCountryDisplayName() {
      return "Puerto Rico";
    },
    get$qaCountryDisplayName() {
      return "Qatar";
    },
    get$reCountryDisplayName() {
      return "R\xe9union";
    },
    get$roCountryDisplayName() {
      return "Romania";
    },
    get$ruCountryDisplayName() {
      return "Russia";
    },
    get$rwCountryDisplayName() {
      return "Rwanda";
    },
    get$blCountryDisplayName() {
      return "Saint Barth\xe9lemy";
    },
    get$shCountryDisplayName() {
      return "Saint Helena";
    },
    get$knCountryDisplayName() {
      return "St. Kitts";
    },
    get$lcCountryDisplayName() {
      return "St. Lucia";
    },
    get$mfCountryDisplayName() {
      return "Saint Martin";
    },
    get$pmCountryDisplayName() {
      return "Saint Pierre and Miquelon";
    },
    get$vcCountryDisplayName() {
      return "St. Vincent";
    },
    get$wsCountryDisplayName() {
      return "Samoa";
    },
    get$smCountryDisplayName() {
      return "San Marino";
    },
    get$stCountryDisplayName() {
      return "S\xe3o Tom\xe9 and Pr\xedncipe";
    },
    get$saCountryDisplayName() {
      return "Saudi Arabia";
    },
    get$snCountryDisplayName() {
      return "Senegal";
    },
    get$rsCountryDisplayName() {
      return "Serbia";
    },
    get$scCountryDisplayName() {
      return "Seychelles";
    },
    get$slCountryDisplayName() {
      return "Sierra Leone";
    },
    get$sgCountryDisplayName() {
      return "Singapore";
    },
    get$sxCountryDisplayName() {
      return "Sint Maarten";
    },
    get$skCountryDisplayName() {
      return "Slovakia";
    },
    get$siCountryDisplayName() {
      return "Slovenia";
    },
    get$sbCountryDisplayName() {
      return "Solomon Islands";
    },
    get$soCountryDisplayName() {
      return "Somalia";
    },
    get$zaCountryDisplayName() {
      return "South Africa";
    },
    get$gsCountryDisplayName() {
      return "South Georgia and the South Sandwich Islands";
    },
    get$krCountryDisplayName() {
      return "South Korea";
    },
    get$ssCountryDisplayName() {
      return "South Sudan";
    },
    get$esCountryDisplayName() {
      return "Spain";
    },
    get$lkCountryDisplayName() {
      return "Sri Lanka";
    },
    get$sdCountryDisplayName() {
      return "Sudan";
    },
    get$srCountryDisplayName() {
      return "Suriname";
    },
    get$sjCountryDisplayName() {
      return "Svalbard and Jan Mayen";
    },
    get$seCountryDisplayName() {
      return "Sweden";
    },
    get$chCountryDisplayName() {
      return "Switzerland";
    },
    get$syCountryDisplayName() {
      return "Syria";
    },
    get$twCountryDisplayName() {
      return "Taiwan";
    },
    get$tjCountryDisplayName() {
      return "Tajikistan";
    },
    get$tzCountryDisplayName() {
      return "Tanzania";
    },
    get$thCountryDisplayName() {
      return "Thailand";
    },
    get$tgCountryDisplayName() {
      return "Togo";
    },
    get$tkCountryDisplayName() {
      return "Tokelau";
    },
    get$toCountryDisplayName() {
      return "Tonga";
    },
    get$ttCountryDisplayName() {
      return "Trinidad/Tobago";
    },
    get$tnCountryDisplayName() {
      return "Tunisia";
    },
    get$trCountryDisplayName() {
      return "Turkey";
    },
    get$tmCountryDisplayName() {
      return "Turkmenistan";
    },
    get$tcCountryDisplayName() {
      return "Turks and Caicos Islands";
    },
    get$tvCountryDisplayName() {
      return "Tuvalu";
    },
    get$viCountryDisplayName() {
      return "U.S. Virgin Islands";
    },
    get$ugCountryDisplayName() {
      return "Uganda";
    },
    get$uaCountryDisplayName() {
      return "Ukraine";
    },
    get$aeCountryDisplayName() {
      return "United Arab Emirates";
    },
    get$gbCountryDisplayName() {
      return "United Kingdom";
    },
    get$usCountryDisplayName() {
      return "United States";
    },
    get$uyCountryDisplayName() {
      return "Uruguay";
    },
    get$uzCountryDisplayName() {
      return "Uzbekistan";
    },
    get$vuCountryDisplayName() {
      return "Vanuatu";
    },
    get$vaCountryDisplayName() {
      return "Vatican City";
    },
    get$veCountryDisplayName() {
      return "Venezuela";
    },
    get$vnCountryDisplayName() {
      return "Vietnam";
    },
    get$wfCountryDisplayName() {
      return "Wallis and Futuna";
    },
    get$ehCountryDisplayName() {
      return "Western Sahara";
    },
    get$yeCountryDisplayName() {
      return "Yemen";
    },
    get$zmCountryDisplayName() {
      return "Zambia";
    },
    get$zwCountryDisplayName() {
      return "Zimbabwe";
    },
    get$pay() {
      return "Pay";
    },
    invitedToSpace$2(space, user) {
      return user + " has invited you to join a course: " + space + "! Do you wish to accept?";
    },
    get$youreInvited() {
      return "\ud83d\udce9 You're invited!";
    },
    invitedToChat$2($name, user) {
      return user + " has invited you to join a chat: " + $name + "! Do you wish to accept?";
    },
    get$monthlySubscription() {
      return "Monthly";
    },
    get$yearlySubscription() {
      return "Yearly";
    },
    get$defaultSubscription() {
      return "Pangea Chat Subscription";
    },
    get$freeTrial() {
      return "Free Trial";
    },
    get$noDataFound() {
      return "No data found";
    },
    get$blurMeansTranslateTitle() {
      return "Why is the message blurred?";
    },
    get$blurMeansTranslateBody() {
      return "While Immersion Mode is on, messages that are sent in your base language will be blurred while Pangea Bot translates them to your target language. Immersion Mode can be toggled in individual and course settings.";
    },
    get$bestCorrectionFeedback() {
      return "That's correct!";
    },
    get$distractorFeedback() {
      return "That's not quite right.";
    },
    get$bestAnswerFeedback() {
      return "That's correct!";
    },
    get$definitionDefaultPrompt() {
      return "What does this word mean?";
    },
    get$practiceDefaultPrompt() {
      return "What is the best answer?";
    },
    get$correctionDefaultPrompt() {
      return "What is the best replacement?";
    },
    get$reportToTeacher() {
      return "Who do you want to report this message to?";
    },
    reportMessageTitle$3(reportingUserId, reportedUserId, roomName) {
      return reportingUserId + " has reported a message from " + reportedUserId + " in the chat " + roomName;
    },
    reportMessageBody$2(reportedMessage, reason) {
      return "Message: " + reportedMessage + "\nReason: " + reason;
    },
    get$noTeachersFound() {
      return "No teachers found to report to";
    },
    trialExpiration$1(expiration) {
      return "Your free trial expires on " + expiration;
    },
    get$freeTrialDesc() {
      return "New users recieve a one week free trial of Pangea Chat";
    },
    get$activateTrial() {
      return "Free 7-Day Trial";
    },
    get$successfullySubscribed() {
      return "You have successfully subscribed!";
    },
    get$clickToManageSubscription() {
      return "Click here to manage your subscription.";
    },
    pleaseChooseAtLeastChars$1(min) {
      return "Please choose at least " + min + " characters.";
    },
    get$pleaseEnterValidEmail() {
      return "Please enter a valid email address.";
    },
    get$pleaseChooseAUsername() {
      return "Please choose a username";
    },
    get$listen() {
      return "Listen";
    },
    get$trialPeriodExpired() {
      return "Your trial period has expired";
    },
    get$subscribedToUnlockTools() {
      return "Subscribe to unlock interactive translation and grammar checking, audio playback, personalized practice activities, and learning analytics!";
    },
    get$translationTooltip() {
      return "Translate";
    },
    get$speechToTextTooltip() {
      return "Transcript";
    },
    get$kickBotWarning() {
      return "Kicking Pangea Bot will remove the conversation bot from this chat.";
    },
    get$refresh(_) {
      return "Refresh";
    },
    get$botConfig() {
      return "Bot and activity settings";
    },
    get$botConfigNoPermissionTitle() {
      return "No permission";
    },
    get$botConfigNoPermissionMessage() {
      return "Contact room admin to change bot configuration";
    },
    get$conversationBotStatus() {
      return "Invite bot";
    },
    get$updatePhoneOS() {
      return "You may need to update your device's OS version.";
    },
    get$autoIGCToolName() {
      return "Run Pangea writing assistance automatically";
    },
    get$autoIGCToolDescription() {
      return "Automatically run Pangea Chat grammar and translation writing assistance before sending my message.";
    },
    get$tooltipInstructionsTitle() {
      return "Not sure what that does?";
    },
    get$tooltipInstructionsBrowserBody() {
      return "Hover over items to view tooltips.";
    },
    get$chatCapacity() {
      return "Chat capacity";
    },
    get$roomFull() {
      return "This room is already at capacity.";
    },
    get$chatCapacityHasBeenChanged() {
      return "Chat capacity changed";
    },
    chatCapacitySetTooLow$1(count) {
      return "Chat capacity must be at least " + count + ".";
    },
    get$chatCapacityExplanation() {
      return "Chat capacity limits the number of members allowed in a chat.";
    },
    get$enterNumber() {
      return "Please enter a whole number value.";
    },
    get$buildTranslation() {
      return "Build your translation from the choices above";
    },
    get$practice() {
      return "Practice";
    },
    get$noLanguagesSet() {
      return "No languages set";
    },
    get$speechToTextBody() {
      return "For voice messages, you can see a transcript as well as the speaker's Words Per Minute score.";
    },
    get$versionNotFound() {
      return "Version Not Found";
    },
    get$fetchingVersion() {
      return "Fetching version...";
    },
    get$versionFetchError() {
      return "Error fetching version";
    },
    versionText$2(version, buildNumber) {
      return "Version: " + version + "+" + buildNumber;
    },
    get$l1TranslationBody() {
      return "Messages in your base language will not be translated.";
    },
    get$deleteSubscriptionWarningTitle() {
      return "You have an active subscription";
    },
    get$deleteSubscriptionWarningBody() {
      return "Deleting your account will not automatically cancel your subscription.";
    },
    get$manageSubscription() {
      return "Manage Subscription";
    },
    get$error520Title() {
      return "Please try again.";
    },
    get$error520Desc() {
      return "Sorry, we could not understand your message...";
    },
    get$level(_) {
      return "Level";
    },
    get$translationChoicesBody() {
      return "Click and hold an option for a hint.";
    },
    get$grammar() {
      return "Grammar";
    },
    get$contactHasBeenInvitedToTheChat() {
      return "Contact has been invited to the chat";
    },
    get$inviteChat() {
      return "\ud83d\udce8 Invite chat";
    },
    get$chatName() {
      return "Chat name";
    },
    get$clickTheWordAgainToDeselect() {
      return "Click the selected word to deselect it.";
    },
    get$l2SupportNa() {
      return "Not Available";
    },
    get$l2SupportAlpha() {
      return "Alpha";
    },
    get$l2SupportBeta() {
      return "Beta";
    },
    get$l2SupportFull() {
      return "Full";
    },
    get$missingVoiceTitle() {
      return "Missing voice";
    },
    get$voiceNotAvailable() {
      return "You don't have a voice installed for this language.";
    },
    get$playAudio() {
      return "Play";
    },
    get$stop(_) {
      return "Stop";
    },
    get$grammarCopyPOSsconj() {
      return "Subordinating Conjunction";
    },
    get$grammarCopyPOSnum() {
      return "Number";
    },
    get$grammarCopyPOSverb() {
      return "Verb";
    },
    get$grammarCopyPOSaffix() {
      return "Affix";
    },
    get$grammarCopyPOSpart() {
      return "Particle";
    },
    get$grammarCopyPOSadj() {
      return "Adjective";
    },
    get$grammarCopyPOScconj() {
      return "Coordinating Conjunction";
    },
    get$grammarCopyPOSpunct() {
      return "Punctuation";
    },
    get$grammarCopyPOSadv() {
      return "Adverb";
    },
    get$grammarCopyPOSaux() {
      return "Auxiliary";
    },
    get$grammarCopyPOSspace() {
      return "Space";
    },
    get$grammarCopyPOSsym() {
      return "Symbol";
    },
    get$grammarCopyPOSdet() {
      return "Determiner";
    },
    get$grammarCopyPOSpron() {
      return "Pronoun";
    },
    get$grammarCopyPOSadp() {
      return "Adposition";
    },
    get$grammarCopyPOSpropn() {
      return "Proper Noun";
    },
    get$grammarCopyPOSnoun() {
      return "Noun";
    },
    get$grammarCopyPOSintj() {
      return "Interjection";
    },
    get$grammarCopyPOSx() {
      return "Other";
    },
    get$grammarCopyGENDERfem() {
      return "Feminine";
    },
    get$grammarCopyPERSON2() {
      return "Second Person";
    },
    get$grammarCopyMOODimp() {
      return "Imperative";
    },
    get$grammarCopyPUNCTTYPEqest() {
      return "Question";
    },
    get$grammarCopyASPECTperf() {
      return "Perfect";
    },
    get$grammarCopyCASEaccnom() {
      return "Accusative, Nominative";
    },
    get$grammarCopyCASEobl() {
      return "Oblique";
    },
    get$grammarCopyVOICEact() {
      return "Active";
    },
    get$grammarCopyPUNCTTYPEbrck() {
      return "Bracket";
    },
    get$grammarCopyNOUNTYPEart() {
      return "Article";
    },
    get$grammarCopyNUMBERsing() {
      return "Singular";
    },
    get$grammarCopyGENDERmasc() {
      return "Masculine";
    },
    get$grammarCopyVERBTYPEmod() {
      return "Modal";
    },
    get$grammarCopyADVTYPEadverbial() {
      return "Adverbial";
    },
    get$grammarCopyTENSEperi() {
      return "Periphrastic";
    },
    get$grammarCopyNUMFORMdigit() {
      return "Digit";
    },
    get$grammarCopyNOUNTYPEnot_proper() {
      return "Not Proper";
    },
    get$grammarCopyNUMTYPEcard() {
      return "Cardinal";
    },
    get$grammarCopyNOUNTYPEprop() {
      return "Proper";
    },
    get$grammarCopyPUNCTTYPEdash() {
      return "Dash";
    },
    get$grammarCopyPUNCTTYPEyes() {
      return "Yes";
    },
    get$grammarCopyPUNCTTYPEsemi() {
      return "Semicolon";
    },
    get$grammarCopyPUNCTTYPEcomm() {
      return "Comma";
    },
    get$grammarCopyMOODcnd() {
      return "Conditional";
    },
    get$grammarCopyCASEacc() {
      return "Accusative";
    },
    get$grammarCopyPARTTYPEpart() {
      return "Partitive";
    },
    get$grammarCopyTENSEpast() {
      return "Past";
    },
    get$grammarCopyDEGREEsup() {
      return "Superlative";
    },
    get$grammarCopyPUNCTTYPEcolo() {
      return "Colon";
    },
    get$grammarCopyPERSON3() {
      return "Third Person";
    },
    get$grammarCopyNUMBERplur() {
      return "Plural";
    },
    get$grammarCopyPRONTYPEnpr() {
      return "Proper Noun";
    },
    get$grammarCopyPRONTYPEinterrogative() {
      return "Interrogative";
    },
    get$grammarCopyPOLITEinfm() {
      return "Informal";
    },
    get$grammarCopyADVTYPEtim() {
      return "Time";
    },
    get$grammarCopyPOLARITYneg() {
      return "Negative";
    },
    get$grammarCopyNUMTYPEtot() {
      return "Total";
    },
    get$grammarCopyADVTYPEadnomial() {
      return "Adnominal";
    },
    get$grammarCopyASPECTprog() {
      return "Progressive";
    },
    get$grammarCopyMOODsub() {
      return "Subjunctive";
    },
    get$grammarCopyVERBFORMcomplementive() {
      return "Complementive";
    },
    get$grammarCopyCASEnom() {
      return "Nominative";
    },
    get$grammarCopyTENSEfut() {
      return "Future";
    },
    get$grammarCopyCASEdat() {
      return "Dative";
    },
    get$grammarCopyTENSEpres() {
      return "Present";
    },
    get$grammarCopyGENDERneut() {
      return "Neuter";
    },
    get$grammarCopyPRONTYPErel() {
      return "Relative";
    },
    get$grammarCopyVERBFORMfinalEnding() {
      return "Final Ending";
    },
    get$grammarCopyPRONTYPEdem() {
      return "Demonstrative";
    },
    get$grammarCopyPREPCASEpre() {
      return "Prepositional";
    },
    get$grammarCopyVERBFORMfin() {
      return "Finite";
    },
    get$grammarCopyDEGREEpos() {
      return "Positive";
    },
    get$grammarCopyPUNCTTYPEquot() {
      return "Quotation";
    },
    get$grammarCopyVERBFORMger() {
      return "Gerund";
    },
    get$grammarCopyVOICEpass() {
      return "Passive";
    },
    get$grammarCopyCASEgen() {
      return "Genitive";
    },
    get$grammarCopyTENSEprs() {
      return "Present";
    },
    get$grammarCopyDEFINITEdef() {
      return "Definite";
    },
    get$grammarCopyNUMTYPEord() {
      return "Ordinal";
    },
    get$grammarCopyCASEins() {
      return "Instrumental";
    },
    get$grammarCopyVERBFORMinf() {
      return "Infinitive";
    },
    get$grammarCopyVERBFORMaux() {
      return "Auxiliary";
    },
    get$grammarCopyNUMFORMlong() {
      return "Long";
    },
    get$grammarCopyCASEloc() {
      return "Locative";
    },
    get$grammarCopyMOODind() {
      return "Indicative";
    },
    get$grammarCopyDEGREEcmp() {
      return "Comparative";
    },
    get$grammarCopyCASErelativeCase() {
      return "Relative";
    },
    get$grammarCopyPUNCTTYPEexcl() {
      return "Exclamative";
    },
    get$grammarCopyPERSON1() {
      return "First Person";
    },
    get$grammarCopyPUNCTSIDEini() {
      return "Initial";
    },
    get$grammarCopyGENDERperson() {
      return "Person";
    },
    get$grammarCopyFOREIGNyes() {
      return "Foreign";
    },
    get$grammarCopyVOICEvoice() {
      return "Voice";
    },
    get$grammarCopyVERBTYPEverbType() {
      return "Verb";
    },
    get$grammarCopyPOSSpass() {
      return "Possessive";
    },
    get$grammarCopyPREPCASEprepCase() {
      return "Prepositional";
    },
    get$grammarCopyNUMTYPEnumType() {
      return "Numeral";
    },
    get$grammarCopyNOUNTYPEnounType() {
      return "Noun";
    },
    get$grammarCopyREFLEXreflex() {
      return "Reflexive";
    },
    get$grammarCopyPRONTYPEpronType() {
      return "Pronoun";
    },
    get$grammarCopyPUNCTSIDEpunctSide() {
      return "Punctuation Side";
    },
    get$grammarCopyVERBFORMverbForm() {
      return "Verb";
    },
    get$grammarCopyGENDERgender() {
      return "Gender";
    },
    get$grammarCopyMOODmood() {
      return "Mood";
    },
    get$grammarCopyASPECTaspect() {
      return "Aspect";
    },
    get$grammarCopyPUNCTTYPEpunctType() {
      return "Punctuation";
    },
    get$grammarCopyTENSEtense() {
      return "Tense";
    },
    get$grammarCopyDEGREEdegree() {
      return "Degree";
    },
    get$grammarCopyPOLITEpolite() {
      return "Politeness";
    },
    get$grammarCopyADVTYPEadvType() {
      return "Adverb";
    },
    get$grammarCopyNUMFORMnumber() {
      return "Number";
    },
    get$grammarCopyCONJTYPEconjType() {
      return "Conjunction";
    },
    get$grammarCopyPOLARITYpolarity() {
      return "Polarity";
    },
    get$grammarCopyCASEcase() {
      return "Case";
    },
    get$grammarCopyDEFINITEdefinite() {
      return "Definiteness";
    },
    get$grammarCopyNUMFORMnumForm() {
      return "Numeral";
    },
    get$grammarCopyPRONTYPEadn() {
      return "Adnominal";
    },
    get$grammarCopyVOCvoc() {
      return "Vocative";
    },
    get$grammarCopyCMPLcmpl() {
      return "Complementizer";
    },
    get$grammarCopyADVadv() {
      return "Adverbial";
    },
    get$grammarCopyMOODjus() {
      return "Jussive";
    },
    get$grammarCopyGENDERcom() {
      return "Common";
    },
    get$grammarCopyREFLEXrflx() {
      return "Reflexive";
    },
    get$grammarCopyPARTTYPEpar() {
      return "Partitive";
    },
    get$grammarCopySPCspc() {
      return "Specific";
    },
    get$grammarCopyTENSEpqp() {
      return "Pluperfect";
    },
    get$grammarCopyREFLEXref() {
      return "Reflexive";
    },
    get$grammarCopyPUNCTTYPEnshrt() {
      return "Short";
    },
    get$grammarCopyNUMBERdual() {
      return "Dual";
    },
    get$grammarCopyNUMFORMlng() {
      return "Long";
    },
    get$grammarCopyVOICEmid() {
      return "Middle";
    },
    get$grammarCopyINTRELintRel() {
      return "Interrogative, Relative";
    },
    get$grammarCopyINTint() {
      return "Interrogative";
    },
    get$grammarCopyVOICEcaus() {
      return "Causative";
    },
    get$grammarCopyUnknown() {
      return "Unknown";
    },
    get$grammarCopyEVIDENTevident() {
      return "Evidentiality";
    },
    get$grammarCopyNUMFORMnumberPsor() {
      return "Possessor's Number";
    },
    get$grammarCopyASPECThab() {
      return "Habitual";
    },
    get$grammarCopyCASEabl() {
      return "Ablative";
    },
    get$grammarCopyCASEall() {
      return "Allative";
    },
    get$grammarCopyCASEess() {
      return "Essive";
    },
    get$grammarCopyCASEtra() {
      return "Translative";
    },
    get$grammarCopyCASEequ() {
      return "Equative";
    },
    get$grammarCopyCASEdis() {
      return "Distributive";
    },
    get$grammarCopyCASEabs() {
      return "Absolutive";
    },
    get$grammarCopyCASEerg() {
      return "Ergative";
    },
    get$grammarCopyCASEcau() {
      return "Causal";
    },
    get$grammarCopyCASEben() {
      return "Benefactive";
    },
    get$grammarCopyCASEtem() {
      return "Temporal";
    },
    get$grammarCopyCONJTYPEcoord() {
      return "Coordinating";
    },
    get$grammarCopyDEFINITEcons() {
      return "Construct State";
    },
    get$grammarCopyDEGREEabs() {
      return "Absolute Degree";
    },
    get$grammarCopyEVIDENTfh() {
      return "Factual Evidentiality";
    },
    get$grammarCopyEVIDENTnfh() {
      return "Non-factual Evidentiality";
    },
    get$grammarCopyMOODopt() {
      return "Optative";
    },
    get$grammarCopyMOODadm() {
      return "Admirative";
    },
    get$grammarCopyMOODdes() {
      return "Desiderative";
    },
    get$grammarCopyMOODnec() {
      return "Necessitative";
    },
    get$grammarCopyMOODpot() {
      return "Potential";
    },
    get$grammarCopyMOODprp() {
      return "Propositive";
    },
    get$grammarCopyMOODqot() {
      return "Quotative";
    },
    get$grammarCopyNUMFORMword() {
      return "Word Form";
    },
    get$grammarCopyNUMFORMroman() {
      return "Roman Numeral";
    },
    get$grammarCopyNUMFORMletter() {
      return "Letter Form";
    },
    get$grammarCopyNUMTYPEmult() {
      return "Multiplicative";
    },
    get$grammarCopyNUMTYPEfrac() {
      return "Fractional";
    },
    get$grammarCopyNUMTYPEsets() {
      return "Set";
    },
    get$grammarCopyNUMTYPErange() {
      return "Range";
    },
    get$grammarCopyNUMTYPEdist() {
      return "Distributive";
    },
    get$grammarCopyNUMBERtri() {
      return "Trial";
    },
    get$grammarCopyNUMBERpauc() {
      return "Paucal";
    },
    get$grammarCopyNUMBERgrpa() {
      return "Greater Paucal";
    },
    get$grammarCopyNUMBERgrpl() {
      return "Greater Plural";
    },
    get$grammarCopyNUMBERinv() {
      return "Inverse";
    },
    get$grammarCopyPERSON0() {
      return "Zero";
    },
    get$grammarCopyPERSON4() {
      return "Fourth";
    },
    get$grammarCopyPOLITEform() {
      return "Formal";
    },
    get$grammarCopyPOLITEelev() {
      return "Elevated";
    },
    get$grammarCopyPOLITEhumb() {
      return "Humble";
    },
    get$grammarCopyPRONTYPEemp() {
      return "Emphatic";
    },
    get$grammarCopyPRONTYPEexc() {
      return "Exclamative";
    },
    get$grammarCopyPRONTYPErcp() {
      return "Reciprocal";
    },
    get$grammarCopyPRONTYPEintRelPronType() {
      return "Interrogative-Relative";
    },
    get$grammarCopyTENSEaor() {
      return "Aorist";
    },
    get$grammarCopyTENSEeps() {
      return "Epistemic";
    },
    get$grammarCopyTENSEprosp() {
      return "Prospective";
    },
    get$grammarCopyVERBFORMpart() {
      return "Participle";
    },
    get$grammarCopyVERBFORMconv() {
      return "Converb";
    },
    get$grammarCopyVERBFORMvnoun() {
      return "Verbal Noun";
    },
    get$grammarCopyVOICEantip() {
      return "Antipassive";
    },
    get$grammarCopyVOICEcauVoice() {
      return "Causative";
    },
    get$grammarCopyVOICedir() {
      return "Direct";
    },
    get$grammarCopyVOICEinvVoice() {
      return "Inverse";
    },
    get$grammarCopyVOICErcpVoice() {
      return "Reciprocal";
    },
    get$grammarCopyPOS() {
      return "Part of Speech";
    },
    get$grammarCopyGENDER() {
      return "Gender";
    },
    get$grammarCopyPERSON() {
      return "Person";
    },
    get$grammarCopyMOOD() {
      return "Mood";
    },
    get$grammarCopyPUNCTTYPE() {
      return "Punctuation Type";
    },
    get$grammarCopyASPECT() {
      return "Aspect";
    },
    get$grammarCopyCASE() {
      return "Case";
    },
    get$grammarCopyVOICE() {
      return "Voice";
    },
    get$grammarCopyNOUNTYPE() {
      return "Noun Type";
    },
    get$grammarCopyVERBTYPE() {
      return "Verb Type";
    },
    get$grammarCopyADVTYPE() {
      return "Adverb Type";
    },
    get$grammarCopyNUMFORM() {
      return "Numeral Form";
    },
    get$grammarCopyNUMTYPE() {
      return "Numeral Type";
    },
    get$grammarCopyNUMBER() {
      return "Number";
    },
    get$grammarCopyDEFINITE() {
      return "Definiteness";
    },
    get$grammarCopyDEGREE() {
      return "Degree";
    },
    get$grammarCopyEVIDENT() {
      return "Evidentiality";
    },
    get$grammarCopyFOREIGN() {
      return "Foreign";
    },
    get$grammarCopyPOLARITY() {
      return "Polarity";
    },
    get$grammarCopyPOLITE() {
      return "Politeness";
    },
    get$grammarCopyPREPCASE() {
      return "Prepositional Case";
    },
    get$grammarCopyPRONTYPE() {
      return "Pronoun Type";
    },
    get$grammarCopyPUNCTSIDE() {
      return "Punctuation Side";
    },
    get$grammarCopyREFLEX() {
      return "Reflexive";
    },
    get$grammarCopyTENSE() {
      return "Tense";
    },
    get$grammarCopyVERBFORM() {
      return "Verb Form";
    },
    get$grammarCopyCONJTYPE() {
      return "Conjunction Type";
    },
    get$grammarCopyUNKNOWN() {
      return "Unknown";
    },
    get$grammarCopyNUMBERPSOR() {
      return "Possessor's Number";
    },
    get$grammarCopyPOSS() {
      return "Possessive";
    },
    get$grammarCopyASPECTimp() {
      return "Imperfective Aspect";
    },
    get$grammarCopyCASEvoc() {
      return "Vocative";
    },
    get$grammarCopyCASEcom() {
      return "Comitative";
    },
    get$grammarCopyCASEpar() {
      return "Partitive";
    },
    get$grammarCopyCASEadv() {
      return "Adverbial";
    },
    get$grammarCopyCASEref() {
      return "Referential";
    },
    get$grammarCopyCASErel() {
      return "Relative";
    },
    get$grammarCopyCASEsub() {
      return "Subessive";
    },
    get$grammarCopyCASEsup() {
      return "Superessive";
    },
    get$grammarCopyCASEaccdat() {
      return "Accusative-Dative";
    },
    get$grammarCopyCASEpre() {
      return "Prepositional";
    },
    get$grammarCopyCONJTYPEsub() {
      return "Subordinating";
    },
    get$grammarCopyCONJTYPEcmp() {
      return "Comparative";
    },
    get$grammarCopyDEFINITEind() {
      return "Indefinite";
    },
    get$grammarCopyMOODint() {
      return "Interrogative Mood";
    },
    get$grammarCopyNOUNTYPEcomm() {
      return "Common Noun";
    },
    get$grammarCopyNUMBERPSORsing() {
      return "Possessor's Singular";
    },
    get$grammarCopyNUMBERPSORplur() {
      return "Possessor's Plural";
    },
    get$grammarCopyNUMBERPSORdual() {
      return "Possessor's Dual";
    },
    get$grammarCopyPOLARITYpos() {
      return "Positive Polarity";
    },
    get$grammarCopyPOSSyes() {
      return "Possessive";
    },
    get$grammarCopyPREPCASEnpr() {
      return "Non-prepositional";
    },
    get$grammarCopyPRONTYPEprs() {
      return "Personal";
    },
    get$grammarCopyPRONTYPEint() {
      return "Interrogative";
    },
    get$grammarCopyPRONTYPEtot() {
      return "Total";
    },
    get$grammarCopyPRONTYPEneg() {
      return "Negative";
    },
    get$grammarCopyPRONTYPEart() {
      return "Article";
    },
    get$grammarCopyPRONTYPEind() {
      return "Indefinite";
    },
    get$grammarCopyPRONTYPEintrel() {
      return "Interrogative-Relative";
    },
    get$grammarCopyPUNCTSIDEfin() {
      return "Final Punctuation";
    },
    get$grammarCopyPUNCTTYPEperi() {
      return "Period";
    },
    get$grammarCopyREFLEXyes() {
      return "Reflexive";
    },
    get$grammarCopyTENSEimp() {
      return "Imperfect";
    },
    get$grammarCopyVERBFORMsup() {
      return "Supine";
    },
    get$grammarCopyVERBFORMadn() {
      return "Adnominal";
    },
    get$grammarCopyVERBFORMlng() {
      return "Long";
    },
    get$grammarCopyVERBFORMshrt() {
      return "Short";
    },
    get$grammarCopyVERBTYPEcaus() {
      return "Causative Verb";
    },
    get$grammarCopyVOICEcau() {
      return "Causative";
    },
    get$grammarCopyVOICEdir() {
      return "Direct";
    },
    get$grammarCopyVOICEinv() {
      return "Inverse";
    },
    get$grammarCopyVOICErcp() {
      return "Reciprocal";
    },
    get$enterLanguageLevel() {
      return "Please enter a language level";
    },
    get$other() {
      return "Other";
    },
    levelShort$1(level) {
      return "LVL " + level;
    },
    get$clickBestOption() {
      return "Choose the best options to translate your message!";
    },
    get$completeActivitiesToUnlock() {
      return "Complete at least one activity to unlock the translation!";
    },
    get$downloadGroupText() {
      return "Download group text";
    },
    get$notificationsOn() {
      return "Notifications on";
    },
    get$notificationsOff() {
      return "Notifications off";
    },
    get$createChatAndInviteUsers() {
      return "Create chat and invite users";
    },
    get$updatedNewSpaceDescription() {
      return "Courses allow you to consolidate your chats and build private or public communities.";
    },
    get$updateNow() {
      return "Update Now";
    },
    get$updateLater() {
      return "Later";
    },
    get$constructUseWaDesc() {
      return "Used without help";
    },
    get$constructUseGaDesc() {
      return "Grammar assistance";
    },
    get$constructUseTaDesc() {
      return "Translation assistance";
    },
    get$constructUseUnkDesc() {
      return "Unknown";
    },
    get$constructUseCorITDesc() {
      return "Correct in translation";
    },
    get$constructUseIgnITDesc() {
      return "Ignored in translation";
    },
    get$constructUseIncITDesc() {
      return "Incorrect in translation";
    },
    get$constructUseIgnIGCDesc() {
      return "Ignored in grammar correction";
    },
    get$constructUseCorIGCDesc() {
      return "Correct in grammar correction";
    },
    get$constructUseIncIGCDesc() {
      return "Incorrect in grammar correction";
    },
    get$constructUseCorPADesc() {
      return "Correct in word meaning activity";
    },
    get$constructUseIgnPADesc() {
      return "Ignored in word meaning activity";
    },
    get$constructUseIncPADesc() {
      return "Incorrect in word meaning activity";
    },
    get$constructUseCorWLDesc() {
      return "Correct in word listening activity";
    },
    get$constructUseIncWLDesc() {
      return "Incorrect in word listening activity";
    },
    get$constructUseIngWLDesc() {
      return "Ignored in word listening activity";
    },
    get$constructUseCorHWLDesc() {
      return "Correct in hidden word activity";
    },
    get$constructUseIncHWLDesc() {
      return "Incorrect in hidden word activity";
    },
    get$constructUseIgnHWLDesc() {
      return "Ignored in hidden word activity";
    },
    get$constructUseCorLDesc() {
      return "Correct in lemma activity";
    },
    get$constructUseIncLDesc() {
      return "Incorrect in lemma activity";
    },
    get$constructUseIgnLDesc() {
      return "Ignored in lemma activity";
    },
    get$constructUseCorMDesc() {
      return "Correct in grammar activity";
    },
    get$constructUseIncMDesc() {
      return "Incorrect in grammar activity";
    },
    get$constructUseIgnMDesc() {
      return "Ignored in grammar activity";
    },
    get$constructUseEmojiDesc() {
      return "Correct in emoji activity";
    },
    get$constructUseCollected() {
      return "Collected in chat";
    },
    get$constructUseNanDesc() {
      return "Not applicable";
    },
    xpIntoLevel$2(currentXP, maxXP) {
      return "" + currentXP + " / " + maxXP + " XP";
    },
    get$enableTTSToolName() {
      return "Enabled text-to-speech";
    },
    get$enableTTSToolDescription() {
      return "Allow the app to generate text-to-speech output for portions of text in your target language.";
    },
    get$yourUsername() {
      return "Your username";
    },
    get$yourEmail() {
      return "Your email";
    },
    get$iWantToLearn() {
      return "I want to learn";
    },
    get$pleaseEnterEmail() {
      return "Please enter a valid email address.";
    },
    get$myBaseLanguage() {
      return "My base language";
    },
    get$clickWordsInstructions() {
      return "\ud83d\udd75\ufe0f Click any word for details. \ud83e\uddd0";
    },
    get$meaningSectionHeader() {
      return "Meaning:";
    },
    get$formSectionHeader() {
      return "Forms used in chats:";
    },
    get$writingExercisesTooltip() {
      return "Writing";
    },
    get$listeningExercisesTooltip() {
      return "Listening";
    },
    get$readingExercisesTooltip() {
      return "Reading";
    },
    get$meaningNotFound() {
      return "Meaning could not be found.";
    },
    get$chooseBaseForm() {
      return "Choose the base form";
    },
    get$notTheCodeError() {
      return "Sorry, that's not the code!";
    },
    get$totalXP() {
      return "Total XP";
    },
    get$numLemmas() {
      return "Total number of lemmas";
    },
    get$numLemmasUsedCorrectly() {
      return "Number of lemmas used correctly at least once";
    },
    get$numLemmasUsedIncorrectly() {
      return "Number of lemmas used correctly 0 times";
    },
    get$numLemmasSmallXP() {
      return "Number of lemmas with 0 - 30 XP";
    },
    get$numLemmasMediumXP() {
      return "Number of lemmas with 31 - 200 XP";
    },
    get$numLemmasLargeXP() {
      return "Number of lemmas with > 200 XP";
    },
    get$numGrammarConcepts() {
      return "Number of grammar concepts";
    },
    get$listGrammarConcepts() {
      return "Grammar concepts";
    },
    get$listGrammarConceptsUsedCorrectly() {
      return "Grammar concepts used correctly in original messages at least 80% of the time";
    },
    get$listGrammarConceptsUsedIncorrectly() {
      return "Grammar concepts used correctly in original messages less than 80% of the time";
    },
    get$listGrammarConceptsUseCorrectlySystemGenerated() {
      return "Grammar concepts chosen correctly from system-generated suggestions at least 80% of the time";
    },
    get$listGrammarConceptsUseIncorrectlySystemGenerated() {
      return "Grammar concepts chosen correctly from system-generated suggestions less than 80% of the time";
    },
    get$listGrammarConceptsSmallXP() {
      return "Grammar concepts with 0-50 xp";
    },
    get$listGrammarConceptsMediumXP() {
      return "Grammar concepts with 51-200 xp";
    },
    get$listGrammarConceptsLargeXP() {
      return "Grammar concepts 201-500 xp";
    },
    get$listGrammarConceptsHugeXP() {
      return "Grammar concepts >500 xp";
    },
    get$numMessagesSent() {
      return "Number of messages sent";
    },
    get$numWordsTyped() {
      return "Number of words typed in original messages";
    },
    get$numCorrectChoices() {
      return "Number of correct words chosen from system-generated suggestions";
    },
    get$numIncorrectChoices() {
      return "Number of incorrect words chosen from system-generated suggestions";
    },
    get$commaSeparatedFile() {
      return "CSV";
    },
    get$excelFile() {
      return "Excel";
    },
    get$fileType() {
      return "File type";
    },
    get$download(_) {
      return "Download";
    },
    get$analyticsNotAvailable() {
      return "User analytics not available";
    },
    get$downloading() {
      return "Downloading...";
    },
    get$failedFetchUserAnalytics() {
      return "Failed to download user analytics";
    },
    get$downloadComplete() {
      return "Download complete!";
    },
    whatIsTheMorphTag$2(morphologicalFeature, wordForm) {
      return "What is the " + morphologicalFeature + " of '" + wordForm + "'?";
    },
    get$dataAvailable() {
      return "Data availability";
    },
    get$available(_) {
      return "Available";
    },
    get$pangeaBotIsFallible() {
      return "Pangea Bot makes mistakes too!";
    },
    whatIsMeaning$2(lemma, partOfSpeech) {
      return "What does '" + lemma + "' mean?";
    },
    get$chooseLemmaMeaningInstructionsBody() {
      return "Match meanings with the words in the message!";
    },
    get$doubleClickToEdit() {
      return "Double-click to edit.";
    },
    get$targetLanguageLabel() {
      return "Target language";
    },
    get$cefrLevelLabel() {
      return "CEFR level";
    },
    get$image(_) {
      return "Image";
    },
    get$activityPlannerOverviewInstructionsBody() {
      return "Choose a topic, mode, learning objective and generate an activity for the chat!";
    },
    get$constructUsePvmDesc() {
      return "Produced in voice message";
    },
    get$leaveSpaceDescription() {
      return "By leaving the course, you will leave all of the chats within it. Other users will see that you have left the course.";
    },
    get$constructUseCorMmDesc() {
      return "Correct message meaning";
    },
    get$constructUseIncMmDesc() {
      return "Incorrect message meaning";
    },
    get$constructUseIgnMmDesc() {
      return "Ignored message meaning";
    },
    get$meaning() {
      return "Meaning";
    },
    chatWith$1(displayname) {
      return "Group with " + displayname;
    },
    get$clickOnEmailLink() {
      return "Please click on the link in the email and then proceed.\n\nCheck your spam folder if the email hasn't arrived.";
    },
    get$dontForgetPassword() {
      return "Don't forget your password!";
    },
    get$enableAutocorrectToolName() {
      return "Enable device autocorrect";
    },
    get$enableAutocorrectDescription() {
      return "If your device supports the language you're learning, you can enable device autocorrect to fix common errors as you type.";
    },
    get$ttsDisbledTitle() {
      return "Text-to-speech disabled";
    },
    get$ttsDisabledBody() {
      return "You can enable text-to-speech in your learning settings";
    },
    get$noSpaceDescriptionYet() {
      return "No course description created yet.";
    },
    get$tooLargeToSend() {
      return "This message is too large to send";
    },
    get$exitWithoutSaving() {
      return "Are you sure you want to leave without saving?";
    },
    get$enableAutocorrectWarning() {
      return "Warning! Requires adding your target language keyboard";
    },
    get$leaveRoomDescription() {
      return "You're about to leave this chat. Other users will see that you have left the chat.";
    },
    get$confirmUserId() {
      return "Please confirm your Pangea Chat username in order to delete your account.";
    },
    paidSubscriptionStarts$1(startDate) {
      return "Starting " + startDate;
    },
    get$cancelInSubscriptionSettings() {
      return "\u2022 Cancel at any time in subscription settings";
    },
    get$autocorrectNotAvailable() {
      return "Unfortunately your platform is not currently supported for this feature. Stay tuned for further development!";
    },
    get$pleaseUpdateApp() {
      return "Please update the app to continue.";
    },
    get$chooseEmojiInstructionsBody() {
      return "Match emojis with the words they best represent. Don't worry! No points off for disagreeing. \ud83d\ude05";
    },
    get$analyticsVocabListBody() {
      return "This is all your vocabulary! As you earn XP for each word, they'll go from seedling to full bloom. Click on any word to see more details.";
    },
    get$morphAnalyticsListBody() {
      return "These are all the grammar concepts in the language you're learning! You'll unlock them as you encounter them while chatting. Click for details.";
    },
    get$knockSpaceSuccess() {
      return "You have requested to join this course! An admin will respond to your request when they receive it \ud83d\ude00";
    },
    get$chooseWordAudioInstructionsBody() {
      return "Listen to the complete message. Then match the audios with the words.";
    },
    get$chooseMorphsInstructionsBody() {
      return "Click the puzzle pieces for grammar questions!";
    },
    get$home() {
      return "Home";
    },
    get$join(_) {
      return "Join";
    },
    get$readingAssistanceOverviewBody() {
      return "Click the buttons below for mini-games on matching emojis, audios, word meanings, and grammar concepts. Or click on any word for details.";
    },
    get$resetInstructionTooltipsTitle() {
      return "Reset instruction tooltips";
    },
    get$resetInstructionTooltipsDesc() {
      return "Click to show instruction tooltips like for a brand new user.";
    },
    get$selectForGrammar() {
      return "Select a grammar icon for activities and details.";
    },
    get$translationProblem() {
      return "Translation problem";
    },
    get$niceJob() {
      return "Nice job!";
    },
    get$askToJoin() {
      return "Ask to join";
    },
    get$emptyChatWarningTitle() {
      return "Chat is empty";
    },
    get$emptyChatWarningDesc() {
      return "You haven't invited anyone to your chat. Go to Chat settings to invite your contacts or the Bot. You can also do this later.";
    },
    get$areYouLikeMe() {
      return "Are you like me?";
    },
    get$tryAgainLater() {
      return "Too many attempts made. Please try again in 5 minutes.";
    },
    get$enterSpaceCode() {
      return "Enter course code";
    },
    get$shareSpaceLink() {
      return "Share link";
    },
    get$byUsingPangeaChat() {
      return "By using Pangea Chat, I agree to the ";
    },
    get$details(_) {
      return "Details";
    },
    get$languageLevelPreA1Desc() {
      return "I have never learned or used the language.";
    },
    get$languageLevelA1Desc() {
      return "I can understand and use some familiar everyday expressions and very basic phrases.";
    },
    get$languageLevelA2Desc() {
      return "I can understand sentences and frequently used expressions related to areas of immediate relevance.";
    },
    get$languageLevelB1Desc() {
      return "I can deal with most familiar situations and can produce simple connected text on familiar topics.";
    },
    get$languageLevelB2Desc() {
      return "I can understand the mains ideas of complex texts and interact with a degree of fluency and spontaneity.";
    },
    get$languageLevelC1Desc() {
      return "I can express ideas fluently and spontaneously without much struggle and understand a wide range of demanding texts.";
    },
    get$languageLevelC2Desc() {
      return "I can understand virtually everything heard or read and express myself fluently and precisely.";
    },
    get$newVocab() {
      return "New vocab";
    },
    get$newGrammar() {
      return "New grammar concepts";
    },
    get$choosePracticeMode() {
      return "Click on one of the buttons above to start a practice activity";
    },
    get$ban() {
      return "Ban";
    },
    get$kick() {
      return "Kick";
    },
    get$lemma() {
      return "Lemma";
    },
    get$grammarFeature() {
      return "Grammar feature";
    },
    get$grammarTag() {
      return "Grammar tag";
    },
    get$forms() {
      return "Forms";
    },
    get$exampleMessages() {
      return "Example messages";
    },
    get$timesUsedIndependently() {
      return "Times used independently";
    },
    get$timesUsedWithAssistance() {
      return "Times used with assistance";
    },
    shareInviteCode$1(code) {
      return "Share invite code: " + code;
    },
    get$permissions(_) {
      return "Permissions";
    },
    get$spaceChildPermission() {
      return "Who can add new chats to this course";
    },
    get$addEnvironmentOverride() {
      return "Add environment override";
    },
    get$defaultOption() {
      return "Default";
    },
    get$deleteChatDesc() {
      return "Are you sure you want to delete this chat? It will be deleted for all participants and all messages within the chat will no longer be available for practice or learning analytics.";
    },
    get$deleteSpaceDesc() {
      return "The course and any selected chats will be deleted for all participants and all messages within the chat will no longer be available for practice or learning analytics. This action cannot be undone.";
    },
    get$configureSpace() {
      return "Configure course";
    },
    get$pinMessages() {
      return "Pin messages";
    },
    get$setJoinRules() {
      return "Set join rules";
    },
    get$changeGeneralSettings() {
      return "Change general settings";
    },
    get$inviteOtherUsersToRoom() {
      return "Invite other users";
    },
    get$changeTheNameOfTheSpace() {
      return "Change the name of the course";
    },
    get$changeTheDescription() {
      return "Change the description";
    },
    get$changeThePermissions() {
      return "Change the permissions";
    },
    get$introductions() {
      return "Introductions";
    },
    get$announcements() {
      return "Announcements";
    },
    get$activities() {
      return "Activities";
    },
    get$access() {
      return "Access";
    },
    get$botSettings() {
      return "Bot settings";
    },
    get$howSpaceCanBeFound() {
      return "How this course can be found";
    },
    get$$private() {
      return "Private";
    },
    get$cannotBeFoundInSearch() {
      return "Cannot be found in search";
    },
    get$$public(_) {
      return "Public";
    },
    get$visibleToCommunity() {
      return 'Visible to the broader Pangea Chat community via "Find a course"';
    },
    get$howSpaceCanBeJoined() {
      return "How this course can be joined";
    },
    get$canBeFoundVia() {
      return "Can be found via:";
    },
    get$canBeFoundViaInvitation() {
      return "\u2022 invitation";
    },
    get$canBeFoundViaCodeOrLink() {
      return "\u2022 code or link";
    },
    get$canBeFoundViaKnock() {
      return "\u2022 request to join and admin approval";
    },
    get$youHaveLeveledUp() {
      return "You have leveled up!";
    },
    get$sendActivities() {
      return "Send activities";
    },
    get$directMessage() {
      return "Direct Message";
    },
    get$newDirectMessage() {
      return "New direct message";
    },
    get$speakingExercisesTooltip() {
      return "Speaking";
    },
    get$transcriptionFailed() {
      return "Failed to transcribe audio";
    },
    get$aUserIsKnocking() {
      return "1 user is requesting to join your course";
    },
    usersAreKnocking$1(users) {
      return "" + users + " users are requesting to join your course";
    },
    get$failedToFetchTranscription() {
      return "Failed to fetch transcription";
    },
    get$deleteEmptySpaceDesc() {
      return "The course will be deleted for all participants. This action cannot be undone.";
    },
    get$failedToPlayVideo() {
      return "Failed to play video";
    },
    get$done() {
      return "Done";
    },
    get$inThisSpace() {
      return "In this course";
    },
    get$myContacts() {
      return "My contacts";
    },
    get$inviteAllInSpace() {
      return "Invite all in this course";
    },
    get$spaceParticipantsHaveBeenInvitedToTheChat() {
      return "All course participants has been invited to the chat";
    },
    numKnocking$1(count) {
      return "" + count + " knocking";
    },
    numInvited$1(count) {
      return "" + count + " invited";
    },
    get$errorFetchingDefinition() {
      return "Failed to fetch definition";
    },
    get$errorProcessAnalytics() {
      return "Failed to process analytics";
    },
    get$errorDownloading() {
      return "Download failed";
    },
    get$errorFetchingLevelSummary() {
      return "Failed to fetch level summary";
    },
    get$errorLoadingSpaceChildren() {
      return "Failed to load chats within this course";
    },
    get$unexpectedError() {
      return "Unexpected error.";
    },
    get$pleaseReload() {
      return "Please reload and try again.";
    },
    get$translationError() {
      return "Translation error";
    },
    get$errorFetchingTranslation() {
      return "Failed to fetch translation";
    },
    get$errorFetchingActivity() {
      return "Failed to fetch activity";
    },
    get$check(_) {
      return "Check";
    },
    get$unableToFindRoom() {
      return "No chat or course found with that code. Please try again.";
    },
    get$numCompletedActivities() {
      return "Number of completed activities";
    },
    viewingAnalytics$2(visible, users) {
      return "Viewing " + visible + "/" + users + " Analytics";
    },
    get$request(_) {
      return "Request";
    },
    get$requestAll(_) {
      return "Request All";
    },
    get$confirmMessageUnpin() {
      return "Are you sure you want to unpin this message?";
    },
    get$pending(_) {
      return "Pending";
    },
    get$openRoleLabel() {
      return "OPEN";
    },
    joinedTheActivity$2(username, role) {
      return "\ud83d\udc4b " + username + " joined as " + role;
    },
    finishedTheActivity$1(username) {
      return "\ud83c\udfaf " + username + " wrapped up this activity";
    },
    get$endActivityTitle() {
      return "I'm done";
    },
    get$activitySummaryError() {
      return "Activity summaries unavailable";
    },
    get$requestSummaries() {
      return "Request summaries";
    },
    get$requestAccessTitle() {
      return "Request to analytics view access?";
    },
    get$requestAccessDesc() {
      return "Would you like to request access to view participant analytics?\n\nIf participants agree, admins of this course will be able to view their:\n    \u2022 total vocabulary\n    \u2022 total grammar concepts\n    \u2022 total activity sessions completed\n    \u2022 the specific grammar concepts used, correctly and incorrectly\n\nThey will not be able to view their:\n    \u2022 messages in chats outside the course\n    \u2022 vocabulary list";
    },
    get$analyticsInactiveTitle() {
      return "Requests to inactive users couldn\u2019t be sent";
    },
    get$analyticsInactiveDesc() {
      return "Inactive users who haven't logged in since this feature was introduced won't see your request.\n\nThe Request button will appear once they return. You can resend the request later by clicking the Request button under their name when it's available.";
    },
    get$accessRequestedTitle() {
      return "Analytics Access Request";
    },
    accessRequestedDesc$1(space) {
      return "The administrators of \u201c" + space + "\u201d are requesting to view your learning analytics.\n\nIf you agree, admins of this course will be able to view your:\n    \u2022 total vocabulary\n    \u2022 total grammar concepts\n    \u2022 total activity sessions completed\n    \u2022 the specific grammar concepts used, correctly and incorrectly\n\nThey will not be able to view your:\n    \u2022 messages in chats outside the course\n    \u2022 vocabulary list";
    },
    get$allowAccess() {
      return "Allow Access";
    },
    get$denyAccess() {
      return "Deny Access";
    },
    get$adminRequestedAccess() {
      return "Admins asked to view your analytics.";
    },
    lastUpdated$1(time) {
      return "Updated\n" + time;
    },
    get$activityFinishedMessage() {
      return "All Finished!";
    },
    get$endForAll() {
      return "End for all";
    },
    get$newCourse() {
      return "New course";
    },
    numModules$1(num) {
      return "" + num + " modules";
    },
    numActivityPlans$1(num) {
      return "" + num + " activity plans";
    },
    get$coursePlan() {
      return "Course Plan";
    },
    get$editCourseLater() {
      return "You can edit template title, descriptions, and course image later.";
    },
    get$newCourseAccess() {
      return "By default, courses are private and require admin approval to join. You can edit these settings at any time.";
    },
    get$createCourse() {
      return "Create course";
    },
    get$stats() {
      return "Stats";
    },
    get$createGroupChat() {
      return "Create group chat";
    },
    get$editCourse() {
      return "Edit course";
    },
    get$inviteDesc() {
      return "By username, by code or link";
    },
    get$editCourseDesc() {
      return "Here you can edit course title, description, etc.";
    },
    get$permissionsDesc() {
      return "Set permissions such as who can invite users, send messages, create chats, etc.";
    },
    get$accessDesc() {
      return "You can make your course open to the world! Or, make your course private and secure.";
    },
    get$createGroupChatDesc() {
      return "Whereas activity sessions start and end, group chats will stay open for routine communication.";
    },
    get$deleteDesc() {
      return "Only admins can delete a course. This is a destructive action which removes all users and deletes all selected chats within the course. Proceed with caution.";
    },
    get$noCourseFound() {
      return "Oh, this course needs a plan!\n\nCourse plans are a sequence of topics and conversation activities.";
    },
    additionalParticipants$1(num) {
      return "+ " + num + " others";
    },
    get$directMessages() {
      return "Direct Messages";
    },
    get$whatNow() {
      return "What now?";
    },
    get$chooseNextActivity() {
      return "Choose your next activity!";
    },
    get$letsGo() {
      return "Let's go";
    },
    get$chooseRole() {
      return "Choose a role!";
    },
    get$chooseRoleToParticipate() {
      return "Choose a role to participate!";
    },
    waitingToFillRole$1(num) {
      return "Waiting to fill " + num + " roles...";
    },
    get$pingParticipants() {
      return "Ping course participants";
    },
    get$playWithBot() {
      return "Play with Pangea Bot";
    },
    get$inviteFriendsToActivity() {
      return "Invite friends to activity";
    },
    get$inviteFriendsToActivityCourse() {
      return "Invite friends to activity and course";
    },
    get$waitNotDone() {
      return "Wait I\u2019m not done!";
    },
    get$waitingForOthersToFinish() {
      return "Waiting for the rest to finish up...";
    },
    get$saveToCompletedActivities() {
      return "Save to completed activities";
    },
    get$generatingSummary() {
      return "Analyzing chat and generating results";
    },
    get$findCourse() {
      return "Find a course";
    },
    get$activityCompletedDesc() {
      return "Your completed activity was added to analytics where you can review and practice the language you used.";
    },
    pingParticipantsNotification$2(user, room) {
      return user + " is looking for users to join the activity session in " + room;
    },
    get$courseName() {
      return "Course name";
    },
    get$createNewCourse() {
      return "New course";
    },
    get$publicCourses() {
      return "Public courses";
    },
    goToCourse$1(course) {
      return "Go to course: " + course;
    },
    get$startNewSession() {
      return "Start new session";
    },
    get$joinOpenSession() {
      return "Join open session";
    },
    get$activityNotFound() {
      return "Activity not found";
    },
    get$levelUp() {
      return "Level up";
    },
    get$myActivities() {
      return "My activities";
    },
    get$openToJoin() {
      return "Open to join";
    },
    get$activityDone() {
      return "Activity Done!";
    },
    get$promoCodeInfo() {
      return "Promo codes can be entered on the next page";
    },
    get$editsComingSoon() {
      return "The ability to edit cities and activities is coming soon.";
    },
    get$editing() {
      return "Editing";
    },
    get$activityNeedsOneMember() {
      return "Uh oh! This activity needs 1 more person.";
    },
    activityNeedsMembers$1(num) {
      return "Uh oh! This activity needs " + num + " more people.";
    },
    get$inviteFriendsToCourse() {
      return "Invite friends to my course";
    },
    get$subscribeToUnlockActivitySummaries() {
      return "Subscribe to unlock activity summaries";
    },
    get$subscribeToUnlockDefinitions() {
      return "Subscribe to unlock definitions";
    },
    get$subscribeToUnlockTranscriptions() {
      return "Subscribe to unlock transcriptions";
    },
    get$pingSent() {
      return "\ud83d\udd14 Course ping sent! \ud83d\udd14";
    },
    get$courseTitle() {
      return "Course title";
    },
    get$courseDesc() {
      return "Course description";
    },
    get$courseSavedSuccessfully() {
      return "Course saved successfully";
    },
    get$addCoursePlan() {
      return "Add a course plan";
    },
    get$activityStatsButtonInstruction() {
      return "Click here to view your activity stats and to close the activity when finished";
    },
    get$readingAnalyticsDesc() {
      return "Click practice on each message for reading activities.";
    },
    get$speakingAnalyticsDesc() {
      return "Record voice messages for speaking practice.";
    },
    get$audioAnalyticsDesc() {
      return "Click practice on each message for listening activities.";
    },
    get$loginToAccount() {
      return "Login to my account";
    },
    get$appDescription() {
      return "Learn a language\nwhile texting your friends.";
    },
    get$languages(_) {
      return "Languages";
    },
    get$chooseLanguage() {
      return "Choose a language.";
    },
    get$planTrip() {
      return "Plan your trip";
    },
    get$howAreYouTraveling() {
      return "How are you traveling?";
    },
    get$unlockPrivateTrip() {
      return "Unlock a private trip";
    },
    get$joinPublicTrip() {
      return "Join a public trip";
    },
    get$startOwnTrip() {
      return "Start my own";
    },
    get$tripPlanDesc() {
      return "Trips are courses. Each has 8-10 sequenced topics with a range of task-based language learning activities.";
    },
    get$unlockPrivateTripTitle() {
      return "Unlock private trip";
    },
    get$browsePublicTrips() {
      return "Browse public trips";
    },
    get$startOwnTripTitle() {
      return "Start my own trip";
    },
    get$courseCode() {
      return "What\u2019s the secret password?";
    },
    get$courseCodeHint() {
      return "Trip code or link";
    },
    get$unlockMyTrip() {
      return "Unlock my trip";
    },
    get$signupOption() {
      return "How do you want to sign up?";
    },
    get$withApple() {
      return "With Apple";
    },
    get$withGoogle() {
      return "With Google";
    },
    get$withEmail() {
      return "With Email";
    },
    get$createAccount() {
      return "Create account";
    },
    get$loginWithEmail() {
      return "Login with email";
    },
    get$usernameOrEmail() {
      return "Username or email";
    },
    get$email() {
      return "Email";
    },
    get$forgotPassword() {
      return "Forgot password?";
    },
    get$writingAnalyticsDesc() {
      return "Send messages to practice writing.";
    },
    get$endActivity() {
      return "End activity";
    },
    get$allLanguages() {
      return "All languages";
    },
    get$chatListTooltip() {
      return "Here you\u2019ll find your direct messages! Click on any user\u2019s avatar and \u201cstart conversation\u201d to send a DM.";
    },
    get$directMessageBotTitle() {
      return "Direct message Pangea Bot";
    },
    get$feedbackTitle() {
      return "Activity Feedback";
    },
    get$feedbackDesc() {
      return "How should the activity be improved? If you can provide some details, we\u2019ll make the change!";
    },
    get$feedbackRespDesc() {
      return "Check back tomorrow for activity updates.";
    },
    get$feedbackHint() {
      return "Your feedback";
    },
    get$feedbackButton() {
      return "Submit feedback";
    },
    get$directMessageBotDesc() {
      return "Talking to humans is more fun but... AI is always ready!";
    },
    get$inviteYourFriends() {
      return "Invite your friends";
    },
    get$playWithAI() {
      return "Play with AI for now";
    },
    get$courseStartDesc() {
      return "Pangea Bot is ready to go anytime!\n\n...but learning is better with friends!";
    },
    get$activityDropdownDesc() {
      return "When you\u2019re done with this activity, click below";
    },
    get$activityAnalyticsListBody() {
      return "These are your completed activities! After finishing activities, you can view them here.";
    },
    get$languageMismatchTitle() {
      return "Language mismatch";
    },
    get$languageMismatchDesc() {
      return "Your target language doesn't match the language of this activity. Update your target language?";
    },
    get$reportWordIssueTooltip() {
      return "Report word information issue";
    },
    get$tokenInfoFeedbackDialogTitle() {
      return "Word Information Feedback";
    },
    get$tokenInfoFeedbackDialogDesc() {
      return "AI makes mistakes. Please describe any issues you found with the information above.";
    },
    get$noPublicCoursesFound() {
      return "No public courses found. Would you like to create one?";
    },
    get$noCourseTemplatesFound() {
      return "We couldn't find any courses for your target language. You can chat with Pangea Bot in the meantime, and check back later for more courses.";
    },
    get$botActivityJoinFailMessage() {
      return "Pangea Bot is taking a while to respond. Please try again later, or invite a friend.";
    },
    remove$1($receiver, arg0) {
      return this.get$remove(this).call$1(arg0);
    }
  };
  var typesOffset = hunkHelpers.updateTypes([]);
  (function inheritance() {
    var _inherit = hunkHelpers.inherit;
    _inherit(A.L10nDe, C.L10n);
  })();
  B._Universe_addRules(init.typeUniverse, JSON.parse('{"L10nDe":{"L10n":[]}}'));
  var string$ = {
    Die_Ap: "Die App versucht nun, deine Sitzung aus der Sicherung wiederherzustellen. Bitte melde diesen Fehler an die Entwickler unter "
  };
};
;
(d => {
  d["0fZtobiwXVSLh5Vb7L9REQOx1Sg="] = d.current;
})($__dart_deferred_initializers__);
;
//# sourceMappingURL=main.dart.js_186.part.js.map
